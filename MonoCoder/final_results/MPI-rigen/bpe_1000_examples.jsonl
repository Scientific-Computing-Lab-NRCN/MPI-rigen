{"pred": "<|endoftext|>ationMPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,     MPI_Scatter(buffer, 1, MPI_INT, &my_value, 1, MPI_INT, root_rank, MPI_COMM_WORLD);) (15 1,     MPI_Scatter(0, 1, MPI_INT, &my_value, 1, MPI_INT, root_rank, MPI_COMM_WORLD);) (19 1,     MPI_Scatter(0, 1, MPI_INT, &my_value, 1, MPI_INT, root_rank, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 1,     MPI_Gather((void *) 1, 1, MPI_INT, buffer, 1, MPI_INT, root_rank, MPI_COMM_WORLD);) (19 1,     MPI_Gather(&my_value, 1, MPI_INT, 0, 0, MPI_INT, root_rank, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 0,  MPI_Wtime();) (26 1,       MPI_Isend(&dat, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &request);) (26 2,       MPI_Recv(&dat_rec, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &status);) (26 0,  MPI_Wtime();) (33 1,       MPI_Recv(&dat_rec, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &status);) (33 2,       MPI_Isend(&dat, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &request);) (34 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (12 0,  MPI_Wtime();) (16 1,       MPI_Isend(&dat, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &request);) (17 1,       MPI_Wait(&request, &status);) (17 2,       MPI_Recv(&dat_rec, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &status);) (23 1,         MPI_Wait(&request, &status);) (23 2,       MPI_Recv(&dat_rec, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &status);) (24 1,       MPI_Isend(&dat, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &request);) (29 0,  MPI_Wtime();) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_kmeans(A, tamanhoDif, tamanhoDif, tamanhoDif, nIteracoes, np, id, tamanhoComma);) (33 1,     MPI_Finalize();) (50 1,   MPI_Barrier(MPI_COMM_WORLD);) (50 0,  MPI_Wtime();) (54 1,   MPI_Barrier(MPI_COMM_WORLD);) (54 0,  MPI_Wtime();) (54 1,   MPI_Gather(x, tamanhoDif, MPI_DOUBLE, A, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 2,   MPI_Gather(partA, tamanhoDif, MPI_DOUBLE, b, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 3,   MPI_Gather(partB, tamanhoDif, MPI_DOUBLE, vel, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 4,   MPI_Gather(partC, tamanhoDif, MPI_DOUBLE, vel, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 5,   MPI_Gather(x, tamanhoDif, MPI_DOUBLE, x, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 6,   MPI_Gather(partC, tamanhoDif, MPI_DOUBLE, vel, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 7,   MPI_Gather(partC, tamanhoDif, MPI_DOUBLE, vel, tamanhoDif, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 8,", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (69 1,   MPI_Scatterv(A, tamanhoPosicaoMatriz, posicaoMatriz, MPI_DOUBLE, PartA, tamanhoMatriz * tamanhoRecorte, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (69 2,   MPI_Scatterv(b, tamanhoPosicaoVetor, posicaoVetor, MPI_DOUBLE, PartB, tamanhoRecorte, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (69 0,  MPI_Wtime();) (70 0,  MPI_Wtime();) (82 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Recv(&data, 1, MPI_INT, i, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,     MPI_Send(&data, 1, MPI_INT, 0, rank, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Recv(data, 1, MPI_INT, i, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,     MPI_Send(&data, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Barrier(MPI_COMM_WORLD);) (8 3,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 3,       MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &npes);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Bcast(&n, sizeof(int), MPI_INT, 0, MPI_COMM_WORLD);) (38 1,       MPI_Send(&size1, 1, MPI_INT, rank - some, 100, MPI_COMM_WORLD);) (43 1,       MPI_Send(other, size1, MPI_INT, rank - some, 110, MPI_COMM_WORLD);) (48 1,       MPI_Recv(&size1, 1, MPI_INT, rank + some, 100, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,       MPI_Recv(other, size1, MPI_INT, rank + some, 110, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (72 1,   MPI_Barrier(MPI_COMM_WORLD);) (72 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (10 1,     MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Bcast(&buf, count, MPI_INT, root, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_Init(&argc, &argv));) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Get_processor_name(processor_name, &namelen);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,     MPI_Irecv(buf0, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &reqs[0]);) (19 2,     MPI_Irecv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &reqs[1]);) (19 3,     MPI_Waitall(2, reqs, statuses);) (19 4,     MPI_Send(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD);) (19 5,     MPI_Send(buf0, 128, MPI_INT, 2, 2, MPI_COMM_WORLD);) (19 6,     MPI_Waitall(2, reqs, statuses);) (19 7,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (19 8,     MPI_Recv(buf1, 128, MPI_INT, 0, 1, MPI_COMM_WORLD, statuses);) (19 9,     MPI_Send(buf0, 128, MPI_INT, 0, 2, MPI_COMM_WORLD);) (19 10,     MPI_Recv(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD, statuses);) (19 11,     MPI_Send(buf0, 128, MPI_INT, 0, 1, MP", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Get_processor_name(processor_name, &namelen);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,     MPI_Irecv(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[0]);) (19 2,     MPI_Irecv(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[1]);) (20 1,       MPI_Testall(2, reqs, &flag, statuses);) (21 1,     MPI_Send(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD);) (26 1,     MPI_Isend(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (26 2,     MPI_Isend(buf0, 128, MPI_INT, 2, 1, MPI_COMM_WORLD, &reqs[1]);) (27 1,       MPI_Testall(2, reqs, &flag, statuses);) (28 1,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (28 2,     MPI_Recv(buf1, 128, MPI_INT, 0, 1, MPI_COMM_WORLD, statuses);) (32 1,     MPI_Recv(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD, statuses);) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada1(rank, n, m, x, Y, &mpi_result);) (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (27 1,       MPI_Send(&X, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (27 2,       MPI_Send(&new_X, 1, MPI_INT, 1, 1, MPI_COMM_WORLD);) (27 3,       MPI_Send(&new_Y, 1, MPI_INT, 1, 1, MPI_COMM_WORLD);) (27 4,       MPI_Send(&new_X, 1, MPI_INT, 1, 1, MPI_COMM_WORLD);) (31 1,       MPI_Recv(&X, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (31 2,       MPI_Recv(&new_X, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (31 3,       MPI_Recv(&new_Y, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (50 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (27 1,       MPI_Send(a1, n, MPI_INT, X, 0, MPI_COMM_WORLD);) (31 1,       MPI_Recv(a2, n, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (38 1,       MPI_Send(a2, n, MPI_INT, new_X, 0, MPI_COMM_WORLD);) (41 1,       MPI_Recv(a3, n, MPI_INT, X, 0, MPI_COMM_WORLD, &status);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(33 1,   MPI_Init(0, 0);) (33 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (39 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 2,   MPI_Bcast(&m, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 3,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 1,     MPI_Allgather(&part[y], 1, MPI_FLOAT, tmp, 1, MPI_FLOAT, MPI_COMM_WORLD);) (87 0,  MPI_Wtime();) (87 1,   MPI_Reduce(&t1, &tol, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (87 2,   MPI_Reduce(&t2, &tol, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (87 3,   MPI_Reduce(&t3, &tol, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (98 0,  MPI_Wtime();) (105 1,   MPI_Finalize();)", "label": " (61 1,   MPI_Init(0, 0);) (61 0,  MPI_Wtime();) (86 0,  MPI_Wtime();) (87 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (24 0,  MPI_Wtime();) (26 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (39 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (42 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (45 0,  MPI_Wtime();) (47 0,  MPI_Wtime();) (48 0,  MPI_Wtime();) (51 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (36 0,  MPI_Wtime();) (38 0,  MPI_Wtime();) (43 0,  MPI_Wtime();) (44 0,  MPI_Wtime();) (62 1,   MPI_Barrier(MPI_COMM_WORLD);) (62 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 0,  MPI_Init(&argc, &argv);) (18 0,  MPI_Comm_size(MPI_COMM_WORLD, &number_of_process);) (18 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank_of_process);) (23 0,  MPI_Wtime();) (24 1,       MPI_Send(chunk, number_of_elements, MPI_INT, rank_of_process, 0, MPI_COMM_WORLD);) (24 2,       MPI_Send(chunk, number_of_elements, MPI_INT, rank_of_process, 1, MPI_COMM_WORLD);) (24 3,       MPI_Recv(chunk, number_of_elements, MPI_INT, rank_of_process, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,       MPI_Recv(chunk, number_of_elements, MPI_INT, rank_of_process, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 2,       MPI_Recv(chunk, number_of_elements, MPI_INT, rank_of_process, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 3,       MPI_Recv(chunk, number_of_elements, MPI_INT, rank_of_process, 3, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 4,       MPI_Recv(chunk, number_of_elements, MPI_INT, rank_of_process, 4, MPI_COMM", "label": " (18 0,  MPI_Init(&argc, &argv);) (21 1,     MPI_Abort(MPI_COMM_WORLD, rc);) (22 1,   MPI_Comm_size(MPI_COMM_WORLD, &number_of_process);) (22 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank_of_process);) (45 1,     MPI_Barrier(MPI_COMM_WORLD);) (45 0,  MPI_Wtime();) (45 1,     MPI_Bcast(&number_of_elements, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,     MPI_Scatter(data, chunk_size, MPI_INT, chunk, chunk_size, MPI_INT, 0, MPI_COMM_WORLD);) (55 1,         MPI_Send(chunk, own_chunk_size, MPI_INT, rank_of_process - step, 0, MPI_COMM_WORLD);) (62 1,         MPI_Recv(chunk_received, received_chunk_size, MPI_INT, rank_of_process + step, 0, MPI_COMM_WORLD, &status);) (70 0,  MPI_Wtime();) (80 1,     MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 3,   MPI_Get_processor_name(processor_name, &name_len);) (8 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 4,   MPI_Get_processor_name(processor_name, &name_len);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Win_create(&window_buffer, ARRAY_SIZE * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (9 1,   MPI_Win_fence(0, window);) (12 1,   MPI_Put(&my_rank, 1, MPI_INT, 0, 0, 1, MPI_INT, window);) (12 2,   MPI_Win_fence(0, window);) (12 3,   MPI_Win_free(&window);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 1,   MPI_Win_create(window_buffer, ARRAY_SIZE * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (7 1,   MPI_Win_free(&window);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,   MPI_Send(&total, 1, MPI_INT, destination, 0, MPI_COMM_WORLD);) (16 2,   MPI_Recv(&tmp, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (16 3,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Send(&total, 1, MPI_INT, destination, 100, MPI_COMM_WORLD);) (10 1,   MPI_Recv(&tmp, 1, MPI_INT, source, 100, MPI_COMM_WORLD, &status);) (12 1,     MPI_Send(&total, 1, MPI_INT, destination, 100, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (27 1,       MPI_Send(&sendcount, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (27 2,       MPI_Send(sendbuf + offset, sendcount, MPI_INT, i, 0, MPI_COMM_WORLD);) (28 1,       MPI_Recv(&recvbuf[offset], recvcount, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 2,       MPI_Recv(recvbuf + offset, recvcount, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,   MPI_Gather(loc_buf, sendcount, MPI_INT, recvbuf, recvcount, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (17 1,   MPI_Type_struct(count, blocklengths, displacements, old_types, &new_t);) (17 2,   MPI_Type_commit(&new_t);) (18 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (22 1,     MPI_Send(buf, 3, new_t, 1, 0, MPI_COMM_WORLD);) (27 1,     MPI_Recv(buf, 3, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (17 2,   MPI_Type_commit(&new_t);) (23 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (27 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,   MPI_Type_free(&new_t);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(0, 0);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (32 1,     MPI_Send(&c, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 2,     MPI_Send(&a[local_size], local_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 3,     MPI_Send(&b, local_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 4,     MPI_Send(&c, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (42 1,     MPI_Recv(&c, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (42 2,     MPI_Recv(&c, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_", "label": " (18 1,   MPI_Init(0, 0);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (32 1,     MPI_Send(local_c, local_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (43 1,       MPI_Recv(local_c, local_size, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 1,   MPI_Reduce(c, temp, arr_size, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (55 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (99 1,   MPI_Barrier(MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COM", "label": " (9 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (23 1,     MPI_Scatter(rand_nums, num_elements_per_proc, MPI_FLOAT, sub_rand_nums, num_elements_per_proc, MPI_FLOAT, 0, MPI_COMM_WORLD);) (27 1,       MPI_Send(sub_rand_nums, num_elements_per_proc, MPI_FLOAT, destination_rank, TAG, MPI_COMM_WORLD);) (60 1,         MPI_Recv(sub_rand_nums, num_elements_per_proc, MPI_FLOAT, rank, tag, MPI_COMM_WORLD, &status);) (97 1,   MPI_Barrier(MPI_COMM_WORLD);) (97 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(comm, &size);) (18 3,   MPI_Comm_rank(comm, &myrank);) (26 1,   MPI_Type_vector(2, 2, 3, MPI_INT, &submat);) (26 2,   MPI_Type_commit(&submat);) (26 3,   MPI_Type_create_subarray(2, m, 1, submat, &submat);) (26 4,   MPI_Type_commit(&submat);) (26 5,   MPI_Comm_set_name(comm, \"submat\");) (26 6,   MPI_Comm_rank(comm, &myrank);) (26 7,   MPI_Comm_size(comm, &size);) (26 8,   MPI_Type_free(&submat);) (26 9,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_dup(MPI_COMM_WORLD, &comm);) (5 3,   MPI_Comm_size(comm, &size);) (5 4,   MPI_Comm_rank(comm, &myrank);) (26 1,   MPI_Type_indexed(count, lenarr, indexarr, MPI_INT, &submat);) (26 2,   MPI_Type_commit(&submat);) (26 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (43 1,   MPI_Barrier(MPI_COMM_WORLD);) (43 0,  MPI_Wtime();) (43 1,   MPI_Bcast(&rowT, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 2,   MPI_Bcast(&colS, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 3,   MPI_Bcast(&rowT, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 4,   MPI_Bcast(&colS, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 1,       MPI_Send(res[s], localSize, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD);) (52 2,       MPI_Recv(res[s], localSize, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD, &status);) (60 1,       MPI_Recv(res[s], localSize, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, &status);) (60 2,       MPI_Send(res[s], localSize, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD);) (62 1,     MPI_Barrier(MPI_COMM_WORLD);) (62 0,  MPI_Wtime();) (62 1,   MPI", "label": " (36 1,   MPI_Init(&argc, &argv);) (36 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (36 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (50 0,  MPI_Wtime();) (73 1,       MPI_Isend(&res[localSize - 1][t + 1], 1, MPI_DOUBLE, dest, 5, MPI_COMM_WORLD, &request);) (79 1,         MPI_Recv(res[j], rowT + 1, MPI_DOUBLE, i, 6, MPI_COMM_WORLD, &status);) (83 0,  MPI_Wtime();) (106 1,       MPI_Recv(&res[0][t + 1], 1, MPI_DOUBLE, src, 5, MPI_COMM_WORLD, &status);) (106 2,       MPI_Isend(&res[localSize - 1][t + 1], 1, MPI_DOUBLE, dest, 5, MPI_COMM_WORLD, &request);) (110 1,       MPI_Send(res[s], rowT + 1, MPI_DOUBLE, 0, 6, MPI_COMM_WORLD);) (130 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations(numChildren);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &numChildren);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &processId);) (7 4,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (11 1,     MPI_Bcast(&numChildren, 1, MPI_INT, 0, parent);) (11 2,     MPI_Bcast(&processId, 1, MPI_INT, 0, parent);) (16 1,     MPI_Reduce(&pi_avg, &pi_sum, 1, MPI_DOUBLE, MPI_SUM, 0, parent);) (16 2,     MPI_Bcast(&numChildren, 1, MPI_INT, 0, parent);) (16 3,     MPI_Bcast(&processId, 1, MPI_INT, 0, parent);) (19 0,  MPI_Wtime();) (21 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &numParents);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &processId);) (8 0,  MPI_Wtime();) (16 1,   MPI_Comm_spawn(\"child_pi\", argv, numChildren, MPI_INFO_NULL, 0, MPI_COMM_SELF, &childComm, (int *) 0);) (16 2,   MPI_Reduce(&processId, &pi_sum, 1, MPI_DOUBLE, MPI_SUM, -4, childComm);) (18 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (13 1,   MPI_File_open(MPI_COMM_WORLD, \"test.out\", 1 | 4, MPI_INFO_NULL, &fh);) (14 1,   MPI_File_write_at(fh, offset, buf, nints, MPI_INT, MPI_STATUS_IGNORE);) (14 2,   MPI_File_close(&fh);) (14 3,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,   MPI_File_open(MPI_COMM_WORLD, \"test3.out\", 1 | 4, MPI_INFO_NULL, &fh);) (14 1,   MPI_File_write_at(fh, offset, &buf[rank * 5], 5, MPI_INT, MPI_STATUS_IGNORE);) (14 2,   MPI_File_close(&fh);) (14 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n17:   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &processor_name_length);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Barrier(MPI_COMM_WORLD);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Barrier(MPI_COMM_WORLD);) (16 0,  -MPI_Wtime();) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (20 1,     MPI_Finalize();) (31 1,     MPI_Finalize();) (37 1,     MPI_Finalize();) (66 1,     MPI_Bcast(&prime, 1, MPI_INT, 0, MPI_COMM_WORLD);) (76 0,  MPI_Wtime();) (76 1,   MPI_Barrier(MPI_COMM_WORLD);) (80 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (21 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (27 1,     MPI_Barrier(MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4(rank, 1, MPI_COMM_WORLD, req)\");) (4(rank, 1, MPI_COMM_WORLD, stat))\");) (4(rank, 1, MPI_COMM_WORLD, &stat)));) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Isend(dizi, 1000, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD, &req[0]);) (12 1,     MPI_Irecv(dizi, 1000, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, &req[1]);) (12 2,     MPI_Waitall(1, req, stat);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Isend(dizi, 1000, MPI_DOUBLE, 1, 777, MPI_COMM_WORLD, req);) (9 2,     MPI_Irecv(dizi, 1000, MPI_DOUBLE, 1, 777 + 1, MPI_COMM_WORLD, req);) (12 1,     MPI_Isend(dizi, 1000, MPI_DOUBLE, 0, 777 + 1, MPI_COMM_WORLD, req);) (12 2,     MPI_Irecv(dizi, 1000, MPI_DOUBLE, 0, 777, MPI_COMM_WORLD, req);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Type_create_hindexed_block(buffer_sent, 1, int_address_pack, MPI_INT, &int_int_type);) (19 2,       MPI_Type_commit(&int_int_type);) (20 1,       MPI_Send(&buffer_sent, 1, int_int_type, RECEIVER, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&received, 1, int_int_type, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Type_contiguous(2, MPI_INT, &double_int_type);) (8 2,   MPI_Type_commit(&double_int_type);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,       MPI_Send(&buffer_sent, 1, double_int_type, RECEIVER, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&received, 1, double_int_type, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Type_free(&double_int_type);) (32 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,   MPI_Sendrecv(smsg, n, MPI_DOUBLE, right, tag, rmsg, n, MPI_DOUBLE, left, tag, MPI_COMM_WORLD, &rstat);) (24 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,   MPI_Ssend(smsg, n, MPI_DOUBLE, right, tag, MPI_COMM_WORLD);) (23 2,   MPI_Recv(rmsg, n, MPI_DOUBLE, left, tag, MPI_COMM_WORLD, &rstat);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arceive_data(rank, working_data_set, next_working_data_set);) (5 1,   MPI_Comm_rank(comm, &rank);) (5 2,   MPI_Comm_size(comm, &size);) (11 1,     MPI_Finalize();) (47 1,   MPI_Iallgather(&local_data_set, 1, MPI_INT, next_working_data_set, 1, MPI_INT, MPI_COMM_WORLD, &recv_comm);) (47 2,   MPI_Barrier(MPI_COMM_WORLD);) (47 3,   MPI_Ialltoall(&next_working_data_set, 1, MPI_INT, &next_working_data_set, 1, MPI_INT, MPI_COMM_WORLD, &recv_comm);) (47 4,   MPI_Barrier(MPI_COMM_WORLD);) (47 5,   MPI_Ialltoall(&next_working_data_set, 1, MPI_INT, &next_working_data_set, 1, MPI_INT, MPI_COMM_WORLD, &recv_comm);) (47 6,   MPI_Wait(&recv_comm, MPI_STATUS_IGNORE);) (47 7,   MPI_Wait(&recv_comm, MPI_STATUS_IGNORE);) (47 8,   MPI_Barrier(MPI_COMM_WORLD);) (47 9,   MPI_Ialltoall(&next_working_data_set, 1, MPI_INT, &next_working_data_set, 1, MPI_INT, MPI_COMM_WORLD, &recv_comm);) (47 10,   MPI_Wait(&recv_comm, MPI_STATUS_IGNORE);) (47 11,   MPI_Barrier(MPI_COMM_WORLD);) (47 12,   MPI_Ialltoall(&next_working_data_set, 1, MPI_INT, &", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(comm, &rank);) (5 2,   MPI_Comm_size(comm, &size);) (11 1,     MPI_Finalize();) (46 1,   MPI_Irecv(working_data_set[5], 8, MPI_INT, source_rank, send_up_tag, comm, &sent_from_source[0]);) (46 2,   MPI_Irecv(working_data_set[0], 8, MPI_INT, source_rank, send_down_tag, comm, &sent_from_source[1]);) (48 1,   MPI_Isend(working_data_set[1], 8, MPI_INT, destination_rank, send_up_tag, comm, &sent_to_destination[0]);) (48 2,   MPI_Isend(working_data_set[4], 8, MPI_INT, destination_rank, send_down_tag, comm, &sent_to_destination[1]);) (50 1,   MPI_Wait(&sent_from_source[0], MPI_STATUS_IGNORE);) (50 2,   MPI_Wait(&sent_from_source[1], MPI_STATUS_IGNORE);) (52 1,   MPI_Wait(&sent_to_destination[0], MPI_STATUS_IGNORE);) (52 2,   MPI_Wait(&sent_to_destination[1], MPI_STATUS_IGNORE);) (95 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant2d_Init(MPI_COMM_WORLD, 1, number_of_indexes_retrieved);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,   MPI_Graph_create(MPI_COMM_WORLD, comm_size, indexes, edges, reorder, &new_communicator);) (15 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,   MPI_Graph_create(MPI_COMM_WORLD, comm_size, indexes, edges, reorder, &new_communicator);) (14 1,   MPI_Graphdims_get(new_communicator, &number_of_indexes_retrieved, &number_of_edge_retrieved);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (21 1,   MPI_Scatter(vec, nsend, MPI_DOUBLE, &vec[nrecv], nrecv, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (26 1,   MPI_Gather(&vec[nrecv], nrecv, MPI_DOUBLE, vec, nrecv, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (25 1,     MPI_Send(&vec[startsend], nsend, MPI_DOUBLE, 0, 11, MPI_COMM_WORLD);) (29 1,     MPI_Probe(-1, -1, MPI_COMM_WORLD, &stat);) (29 2,     MPI_Get_count(&stat, MPI_DOUBLE, &nrecv);) (30 1,     MPI_Recv(&vec[startrecv], nrecv, MPI_DOUBLE, -1, -1, MPI_COMM_WORLD, &stat);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (35 1,   MPI_Scatter(full_vector1, array_size, MPI_FLOAT, begin_my_value1, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (35 2,   MPI_Scatter(full_vector2, array_size, MPI_FLOAT, begin_my_value2, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (41 1,   MPI_Gather(my_values1, array_size, MPI_FLOAT, full_vector1, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (41 2,   MPI_Gather(my_values2, array_size, MPI_FLOAT, full_vector2, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (48 0,  MPI_Wtime();) (51 1,   MPI_Barrier(MPI_COMM_WORLD);) (51 2,   MPI_Scatter(full_vector1, array_size, MPI_FLOAT, begin_my_value1, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (51 2,   MPI_", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (43 1,   MPI_Scatter(full_vector1, array_size, MPI_FLOAT, begin_my_value1, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (43 2,   MPI_Scatter(full_vector2, array_size, MPI_FLOAT, begin_my_value2, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (48 0,  MPI_Wtime();) (58 0,  MPI_Wtime();) (63 1,   MPI_Gather(begin_my_value1, array_size, MPI_FLOAT, full_vector1, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (63 2,   MPI_Gather(begin_my_value2, array_size, MPI_FLOAT, full_vector2, array_size, MPI_FLOAT, 0, MPI_COMM_WORLD);) (71 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(shortIntsToSend, 2, MPI_SHORT, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(shortIntsReceived, 2, MPI_SHORT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(shortIntsToSend, 2, MPI_SHORT, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(shortIntsReceived, 2, MPI_SHORT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>antow(2, myid);) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (16 0,  MPI_Wtime();) (17 1,   MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 1,   MPI_Scatter(data, N, MPI_INT, &local, N, MPI_INT, 0, MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (31 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (16 0,  MPI_Wtime();) (17 1,   MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 1,   MPI_Reduce(&local, &SqrtSum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (30 0,  MPI_Wtime();) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (29 1,     MPI_Bcast(&job_count, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 2,     MPI_Bcast(&next_job, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 3,     MPI_Bcast(&min_workload, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 4,     MPI_Bcast(&max_workload, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,   MPI_Bcast(workloads, 20 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (36 2,   MPI_Bcast(workloads, 20 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (36 3,   MPI_Bcast(workloads, 20 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (36 4,   MPI_Bcast(workloads, 20 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (36 5,   MPI_Bcast(workloads, 20 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (56 1,   MPI_Gather(&my_workload, 1, MPI_INT, workloads, 1, MPI_INT, 0, MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (36 1,   MPI_Bcast(&job_count, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 2,   MPI_Bcast(job_queue, job_count, MPI_INT, 0, MPI_COMM_WORLD);) (43 1,   MPI_Gather(&my_workload, 1, MPI_INT, workloads, 1, MPI_INT, 0, MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (18 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(37 0,  MPI_Wtime();) (37 1,   MPI_Init(0, 0);) (37 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (37 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (69 0,  MPI_Wtime();) (69 0,  MPI_Wtime();) (77 0,  MPI_Wtime();) (84 0,  MPI_Wtime();) (84 1,         MPI_Send(sendbuf, send_i, MPI_BYTE, 1, i, MPI_COMM_WORLD);) (84 2,         MPI_Recv(recvbuf, recv_i, MPI_BYTE, 1, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (84 0,  MPI_Wtime();) (84 1,         MPI_Send(sendbuf, send_i, MPI_BYTE, 0, i, MPI_COMM_WORLD);) (84 2,         MPI_Recv(recvbuf, recv_i, MPI_BYTE, 0, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (84 0,  MPI_Wtime();) (84 1,         MPI_Recv(recvbuf, recv_i, MPI_BYTE, 0, i, MPI_COMM_WORLD, MPI_STATUS_", "label": " (37 1,   MPI_Init(&argc, &argv);) (37 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (37 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (37 0,  MPI_Wtime();) (66 1,   MPI_Allreduce(&send_i, &max_send_i, 1, MPI_UNSIGNED, MPI_MAX, MPI_COMM_WORLD);) (75 1,   MPI_Gather(sendbuf, send_i, MPI_UNSIGNED, recvbuf, max_send_i, MPI_UNSIGNED, 0, MPI_COMM_WORLD);) (75 0,  MPI_Wtime();) (76 1,   MPI_Reduce(&loc_p1, &time_for_p1, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (78 0,  MPI_Wtime();) (115 0,  MPI_Wtime();) (117 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sort(max, max, 0, MPI_COMM_WORLD);) (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 0,  MPI_Wtime();) (35 1,       MPI_Finalize();) (66 1,         MPI_Send(&array[index], n, MPI_INT, i, 0, MPI_COMM_WORLD);) (69 1,       MPI_Recv(&array[index], n, MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (78 0,  MPI_Wtime();) (106 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 0,  MPI_Wtime();) (66 1,         MPI_Send(arrays[i % m], n, MPI_INT, i + 1, i % m, MPI_COMM_WORLD);) (71 1,       MPI_Recv(&temp, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (85 1,     MPI_Recv(array, n, MPI_INT, 0, -1, MPI_COMM_WORLD, &status);) (94 1,     MPI_Send(&_max, 1, MPI_INT, 0, rank, MPI_COMM_WORLD);) (95 0,  MPI_Wtime();) (105 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (17 1,         MPI_Send(&elements_per_process, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (17 2,         MPI_Send(&a[index], elements_per_process, MPI_INT, i, 0, MPI_COMM_WORLD);) (20 1,       MPI_Send(&elements_left, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (20 2,       MPI_Send(&a[index], elements_left, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&tmp, 1, MPI_INT,", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (18 1,         MPI_Send(&elements_per_process, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (18 2,         MPI_Send(&a[index], elements_per_process, MPI_INT, i, 0, MPI_COMM_WORLD);) (22 1,       MPI_Send(&elements_left, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (22 2,       MPI_Send(&a[index], elements_left, MPI_INT, i, 0, MPI_COMM_WORLD);) (30 1,       MPI_Recv(&tmp, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (38 1,     MPI_Recv(&n_elements_recieved, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (38 2,     MPI_Recv(&a2, n_elements_recieved, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (42 1,     MPI_Send(&partial_sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_17 1,   MPI_Init(&argc, &argv);) (23 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 2,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (57 1,   MPI_Reduce(&fx, &best_fx, 1, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (57 2,   MPI_Reduce(&trial, &best_trial, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (74 1,   MPI_Finalize();)", "label": " (31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (31 3,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada();\n64:   dspls[myid] = dspls[myid] + 1;\n65:   counts[myid] = dspls[myid] + counts[myid];\n66:   dspls[myid] = dspls[myid] + counts[myid];\n67:   counts[myid] = dspls[myid] + dspls[myid];\n68:   dspls[myid] = dspls[myid] + dspls[myid];\n69:   counts[myid] = dspls[myid] + counts[myid];\n70:   dspls[myid] = dspls[myid] + counts[myid];\n71:   counts[myid] = dspls[myid] + counts[myid];\n72:   dspls[myid] = dspls[myid] + counts[myid];\n73:   counts[myid] = dspls[myid] + counts[myid];\n74:   dspls[myid] = dspls[myid] + counts[myid];\n75:   counts[myid] = dspls[myid] + counts[myid];\n76:   dspls[myid] = dspls[myid] + counts[myid];\n77:   counts[myid] = dspls[myid] + counts[myid];\n78:   dspls[myid] = dspls[myid] + counts[myid];\n79:   counts[myid] = dspls[myid] + counts[myid];\n80:   if (myid == 0)\n81:   {\n82:     printf(\"v_glb on %d >> \", myid);\n83:     for (i = 0; i < nglb; i++)\n84:     {\n85:       printf(\"  %2.0f\", v_glb[i]);\n86:       printf(\"  %2.0", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (44 1,   MPI_Buffer_attach(temp, (8 * nglb) + 128);) (46 1,     MPI_Bsend(v_lcl, counts[myid], MPI_DOUBLE, ip, 0, MPI_COMM_WORLD);) (50 1,     MPI_Recv(&v_glb[dspls[ip]], counts[ip], MPI_DOUBLE, ip, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (52 1,   MPI_Buffer_detach(&temp, &bsize);) (59 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,", "label": " (15 1,   MPI_Init(&argc, &argv);) (16 1,   MPI_Comm_rank(comm, &rank);) (16 2,   MPI_Comm_size(comm, &size);) (28 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (29 1,       MPI_Isend(buf, n, MPI_CHAR, dest, (cs + n) + 1, comm, &req);) (29 2,       MPI_Cancel(&req);) (29 3,       MPI_Wait(&req, &status);) (29 4,       MPI_Test_cancelled(&status, &flag);) (39 1,       MPI_Send(&n, 1, MPI_INT, dest, 123, comm);) (40 1,       MPI_Send(&n, 1, MPI_INT, dest, 123, comm);) (48 1,       MPI_Recv(&n, 1, MPI_INT, 0, 123, comm, &status);) (48 2,       MPI_Recv(&tag, 1, MPI_INT, 0, 123, comm, &status);) (55 1,           MPI_Abort(MPI_COMM_WORLD, 1);) (56 1,         MPI_Recv(btemp, n, MPI_CHAR, 0, tag, comm, &status);) (59 1,     MPI_Barrier(comm);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>\u00e9 1,   MPI_Init(0, 0);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (21 0,  MPI_Wtime();) (22 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&loc_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (22 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&loc_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (23 2,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_type MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_commit(&MPI_type_", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(comm, &size);) (5 2,   MPI_Comm_rank(comm, &rank);) (11 1,     MPI_Finalize();) (24 1,     MPI_Send(buffer, 5, MPI_INT, 1, 0, comm);) (27 1,     MPI_Recv(buffer, 5, MPI_INT, 0, 0, comm, &status);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &new_rank);) (11 1,     MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (16 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myFirstComm);) (17 1,     MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &myThirdComm);) (22 1,     MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &mySecondComm);) (25 1,     MPI_Comm_split(MPI_COMM_WORLD, 2, new_rank, &myThirdComm);) (29 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &mySecondComm);) (31 1,       MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &myThirdComm);) (33 1,       MPI_Comm_split(MPI_COMM_WORLD, 2, new_rank, &mySecondComm);) (35 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(0, &rank);) (9 1,   MPI_Comm_split(0, membershipKey, rank, &myComm);) (11 1,     MPI_Intercomm_create(myComm, 0, 0, 1, 1, &myFirstComm);) (11 2,     MPI_Comm_size(myFirstComm, &new_rank);) (16 1,     MPI_Intercomm_create(myComm, 0, 0, 0, 1, &myFirstComm);) (16 2,     MPI_Intercomm_create(myComm, 0, 0, 2, 12, &mySecondComm);) (16 3,     MPI_Comm_size(myFirstComm, &new_rank);) (17 1,     MPI_Comm_size(mySecondComm, &new_rank);) (22 1,     MPI_Intercomm_create(myComm, 0, 0, 1, 12, &myFirstComm);) (22 2,     MPI_Comm_size(myFirstComm, &new_rank);) (27 1,       MPI_Comm_free(&mySecondComm);) (31 1,       MPI_Comm_free(&myFirstComm);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>44 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_size(world, &size);) (6 2,   MPI_Comm_rank(world, &rank);) (14 1,   MPI_Isend(&myval, 1, MPI_INT, (rank + 1) % size, 0, world, &request[rank]);) (14 2,   MPI_Irecv(&recieved[rank], 1, MPI_INT, ((rank - 1) + size) % size, 0, world, &request[rank]);) (18 1,   MPI_Waitall(size, request, status);) (22 1,     MPI_Isend(&myval, 1, MPI_INT, (rank + 1) % size, 0, world, &request[rank]);) (22 2,     MPI_Irecv(&recieved[rank], 1, MPI_INT, (rank + 1) % size, 0, world, &request[rank]);) (23 1,     MPI_Waitall(size, request, status);) (25 1,     MPI_Isend(&myval, 1, MPI_INT, (rank + 1) % size, 0, world, &request[rank]);) (27 1,   MPI_Waitall(size, request, status);) (29 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_size(world, &size);) (7 2,   MPI_Comm_rank(world, &rank);) (23 1,     MPI_Issend(&myval, 1, MPI_INT, neighbourRight, tag, world, &request[neighbourRight]);) (23 2,     MPI_Irecv(&recdval, 1, MPI_INT, neighbourLeft, tag, world, &request[rank]);) (23 3,     MPI_Wait(&request[rank], MPI_STATUS_IGNORE);) (35 1,   MPI_Reduce(&total, &recieved, size, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_gatherv(&my_values, 1, MPI_INT, buffer, counts, displacements, MPI_INT, root_rank, MPI_COMM_WORLD);) (46 1,   MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Igatherv(my_values, 2, MPI_INT, 0, 0, 0, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (46 1,       MPI_Igatherv(my_values, 2, MPI_INT, 0, 0, 0, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (46 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (46 3,       MPI_Igatherv(my_values, 2, MPI_INT, 0, 0, 0, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (46 4,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (46 5,       MPI_Igatherv(my_values, 2, MPI_INT, 0, 0, 0, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (46 6,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (46 7,", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (25 1,       MPI_Iscatterv(buffer, counts, displacements, MPI_INT, &my_value, 1, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (25 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (32 1,       MPI_Iscatterv(0, 0, 0, MPI_INT, my_values, 2, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (32 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (39 1,       MPI_Iscatterv(0, 0, 0, MPI_INT, &my_value, 1, MPI_INT, root_rank, MPI_COMM_WORLD, &request);) (39 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>eff(4, nproc, gridr, gridc, nproc, dimSubatrix, &gridr);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &menum);) (60 0,  MPI_Wtime();) (66 0,  MPI_Wtime();) (69 1,   MPI_Finalize();)", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &menum);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (50 1,   MPI_Bcast(&check, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 1,     MPI_Bcast(&dimMat, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 2,     MPI_Bcast(&dimGrid, 1, MPI_INT, 0, MPI_COMM_WORLD);) (66 0,  MPI_Wtime();) (68 0,  MPI_Wtime();) (73 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_init(&buffer, &flag, &status);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Ssend(&buffer, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (11 2,     MPI_Recv(&buffer, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,     MPI_Recv(&buffer, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 2,     MPI_Ssend(&buffer, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 1,     MPI_Barrier(MPI_COMM_WORLD);) (12 1,     MPI_Send(&buffer, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Iprobe(0, 0, MPI_COMM_WORLD, &flag, MPI_STATUS_IGNORE);) (24 1,     MPI_Barrier(MPI_COMM_WORLD);) (25 1,     MPI_Recv(&buffer, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(0, 0);) (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 2,   MPI_Bcast(&passGrade, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 3,   MPI_Bcast(&maxData, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 4,   MPI_Bcast(&maxLineSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 5,   MPI_Bcast(&passSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 6,   MPI_Bcast(&maxData, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 7,   MPI_Bcast(&passSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 8,   MPI_Barrier(MPI_COMM_WORLD);) (12 9,   MPI_Bcast(&maxData, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 10,   MPI_Bcast(&passSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 11,   MPI_Bcast(&passSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 12,   MPI_Barrier(MPI_COMM_WORLD);) (12 13,   MPI_Bcast(&passSize, 1, MPI_INT, 0, MPI_COMM_WORLD);", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (30 1,   MPI_Bcast(&Dataset_Size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,       MPI_Send(ids + newStart, segmentSize, MPI_INT, i, 0, MPI_COMM_WORLD);) (40 2,       MPI_Send(grades + newStart, segmentSize, MPI_INT, i, 0, MPI_COMM_WORLD);) (51 1,     MPI_Recv(ids + my_start, segmentSize, MPI_INT, 0, 0, MPI_COMM_WORLD, status);) (51 2,     MPI_Recv(grades + my_start, segmentSize, MPI_INT, 0, 0, MPI_COMM_WORLD, status);) (66 1,   MPI_Reduce(&passers, &totalPassers, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (70 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_id);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (40 1,   MPI_Gather(result, rows * cols, MPI_FLOAT, matrix, rows * cols, MPI_FLOAT, 0, MPI_COMM_WORLD);) (54 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_id);) (40 1,   MPI_Bcast(vector, 1000, MPI_FLOAT, 0, MPI_COMM_WORLD);) (40 2,   MPI_Scatter(matrix, rows * 1000, MPI_FLOAT, matrix, rows * 1000, MPI_FLOAT, 0, MPI_COMM_WORLD);) (57 1,   MPI_Gather(result, rows, MPI_FLOAT, result, rows, MPI_FLOAT, 0, MPI_COMM_WORLD);) (71 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_File_open(MPI_COMM_WORLD, \"data.txt\", 1 | 4, MPI_INFO_NULL, &fh);) (10 1,   MPI_File_set_view(fh, 0, MPI_CHAR, MPI_CHAR, \"native\", MPI_INFO_NULL);) (10 2,   MPI_File_write(fh, buf, n, MPI_CHAR, MPI_STATUS_IGNORE);) (10 3,   MPI_File_close(&fh);) (10 4,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_File_open(MPI_COMM_SELF, \"test.txt\", 1 | 4, MPI_INFO_NULL, &fh);) (9 1,     MPI_File_iwrite_all(fh, buf, strlen(buf), MPI_CHAR, &request);) (9 2,     MPI_File_close(&fh);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,  MPI_Init(&argc, &argv);) (3 1,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(longArblesToSend, 2, MPI_LONG, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(longArblesReceived, 2, MPI_LONG, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(longDoublesToSend, 2, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(longDoublesReceived, 2, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (9 1,   MPI_Reduce(&my_value, &part_sum, 1, MPI_INT, MPI_SUM, MASTER_RANK, MPI_COMM_WORLD);) (9 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (8 1,   MPI_Scan(&my_value, &part_sum, 1, MPI_INTEGER, MPI_SUM, MPI_COMM_WORLD);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2d_sort(local_vector, local_n, MPI_COMM_WORLD);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (31 1,         MPI_Recv(temp_vector, local_n, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,     MPI_Send(local_vector, local_n, MPI_INT, 0, 0, MPI_COMM_WORLD);) (59 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 1,   MPI_Scatter(vector, local_n, MPI_INT, local_vector, local_n, MPI_INT, 0, MPI_COMM_WORLD);) (18 1,         MPI_Send(local_vector, local_n, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD);) (20 1,         MPI_Recv(temp_vector, local_n, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,         MPI_Send(&temp_vector[local_n], local_n, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD);) (31 1,         MPI_Recv(local_vector, local_n, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 1,         MPI_Send(local_vector, local_n, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD);) (37 2,         MPI_Recv(local_vector, local_n, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 1,         MPI_Recv(temp_vector, local_n, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (49 1,         MPI_Send(&temp_vector[local_n], local_n, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD);) (53 1,   MPI_Barrier(MPI_COMM_WORLD);) (53 2,   MPI_Gather(local_vector, local_n, MPI_INT, vector, local_n, MPI_INT, 0, MPI_COMM_WORLD);) (59 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_world_group);) (18 1,     MPI_Group_incl(world_group, 2, ranks_subgroup, &subgroup);) (18 2,     MPI_Group_rank(subgroup, &my_world_group_rank);) (19 1,     MPI_Group_rank(subgroup, &my_subgroup_rank);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (10 1,   MPI_Group_incl(world_group, 2, ranks_subgroup, &subgroup);) (11 1,   MPI_Group_rank(world_group, &my_world_group_rank);) (12 1,   MPI_Group_rank(subgroup, &my_subgroup_rank);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4 1,   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &MyRank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &Numprocs);) (18 1,     MPI_Send(Message, strlen(Message) + 1, MPI_CHAR, Destination, Destination_tag, MPI_COMM_WORLD);) (23 1,       MPI_Recv(Message, 20, MPI_CHAR, Source, Source_tag, MPI_COMM_WORLD, &status);) (29 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &MyRank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &Numprocs);) (18 1,     MPI_Send(Message, 20, MPI_CHAR, Destination, Destination_tag, MPI_COMM_WORLD);) (25 1,       MPI_Recv(Message, 20, MPI_CHAR, Source, Source_tag, MPI_COMM_WORLD, &status);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace(name, &name_length, MPI_COMM_WORLD);) (4 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_get_name(MPI_COMM_WORLD, name, &name_length);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,   MPI_Ireduce_scatter(data, reduction_results, counts, MPI_INT, MPI_SUM, root_rank, MPI_COMM_WORLD, &request);) (12 2,   MPI_Wait(&request, MPI_STATUS_IGNORE);) (17 1,   MPI_Op_create(my_rank, 2, &operation);) (17 2,   MPI_Reduce(data, reduction_results, counts, MPI_INT, MPI_SUM, root_rank, MPI_COMM_WORLD);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 1,   MPI_Op_create(&my_sum_function, 1, &operation);) (12 1,   MPI_Reduce(data, reduction_results, 2, MPI_INT, operation, root_rank, MPI_COMM_WORLD);) (17 1,   MPI_Op_free(&operation);) (17 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (27 1,         MPI_Send(array + (division * i), sub_array_extra[i], MPI_INT, i, 0, MPI_COMM_WORLD);) (27 2,         MPI_Send(sub_array, division, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 1,         MPI_Recv(sub_array, division, MPI_INT, i, 0, MPI_COMM_WORLD, &Stat);) (36 2,         MPI_Recv(sub_array, division, MPI_INT, i, 0, MPI_COMM_WORLD, &Stat);) (40 1,         MPI_Recv(sub_array, division, MPI_INT, 0, 0, MPI_COMM_WORLD, &Stat);) (40 2,         MPI_Recv(sub_array, division, MPI_INT, 0, 0, MPI_COMM_WORLD, &Stat);) (80 1,     MPI_Send(sub_array, division, MPI_INT, 0, 0, MPI_COMM_WORLD);) (90 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (27 1,         MPI_Send(sub_array, division, MPI_INT, rank, rank, MPI_COMM_WORLD);) (39 1,           MPI_Send(sub_array_extra, division + rest, MPI_INT, rank, rank, MPI_COMM_WORLD);) (43 1,           MPI_Send(sub_array, division, MPI_INT, rank, rank, MPI_COMM_WORLD);) (49 1,       MPI_Recv(&array_return[rank - 1], 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &Stat);) (49 2,       MPI_Get_count(&Stat, MPI_INT, &counter);) (67 1,     MPI_Recv(sub_array_extra, division + rest, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (67 2,     MPI_Get_count(&Stat, MPI_INT, &counter);) (76 1,     MPI_Send(&min, 1, MPI_INT, 0, myrank, MPI_COMM_WORLD);) (80 1,     MPI_Recv(sub_array, division, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (80 2,     MPI_Get_count(&Stat, MPI_INT, &counter);) (89 1,     MPI_Send(&min, 1, MPI_INT, 0, myrank, MPI_COMM_WORLD);) (90 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 1,       MPI_Send(&element_count, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 2,       MPI_Send(&arr1[start], element_count, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 3,       MPI_Send(&arr2, element_count, MPI_INT, i, 0, MPI_COMM_WORLD);) (33 1,       MPI_Recv(&element_count, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (33 2,       MPI_Recv(&arr3, element_count, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (33 3,       MPI_Recv(&arr4, element_count, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (58 1,     MPI_Send(&element_count, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (58 2,", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (37 1,       MPI_Send(&element_count, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (37 2,       MPI_Send(arr1 + start, element_count, MPI_INT, i, 1, MPI_COMM_WORLD);) (42 1,       MPI_Recv(&var, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &status);) (47 1,         MPI_Recv(&arr3, var, MPI_INT, i, 1, MPI_COMM_WORLD, &status);) (59 1,     MPI_Recv(&element_count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (60 1,     MPI_Recv(arr1, element_count, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (74 1,       MPI_Send(&notFound, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (76 1,       MPI_Send(&k, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (79 1,       MPI_Send(&posArr, k, MPI_INT, 0, 1, MPI_COMM_WORLD);) (83 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 0,  MPI_Wtime();) (22 1,   MPI_Scatter(globaldata, 1, MPI_INT, &localdata, 1, MPI_INT, 0, MPI_COMM_WORLD);) (22 2,   MPI_Scatter(globaldata, 1, MPI_INT, &localdata, 1, MPI_INT, 0, MPI_COMM_WORLD);) (24 1,   MPI_Gather(&localdata, 1, MPI_INT, globaldata, 1, MPI_INT, 0, MPI_COMM_WORLD);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 0,  MPI_Wtime();) (21 1,   MPI_Scatter(globaldata, 1, MPI_INT, &localdata, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&localdata, 1, MPI_INT, globaldata, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 0,  MPI_Wtime();) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (24 1,     MPI_Isend(&count, 1, MPI_INT, 0, rank, MPI_COMM_WORLD, &requests[0]);) (24 2,     MPI_Isend(&iterations[1], 1, MPI_INT, 0, rank + 1, MPI_COMM_WORLD, &requests[1]);) (24 3,     MPI_Waitall(size - 1, requests, MPI_STATUS_IGNORE);) (31 1,       MPI_Recv(&tmp_count, size, MPI_INT, i, rank - 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (36 1,       MPI_Recv(&count, 1, MPI_INT, i, rank - 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 0,  MPI_Wtime();) (49 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (30 1,       MPI_Irecv(&tmp_count[i - 1], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &requests[i - 1]);) (32 1,     MPI_Waitall(size - 1, requests, MPI_STATUS_IGNORE);) (39 0,  MPI_Wtime();) (47 1,     MPI_Send(&count, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (48 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (23 1,     MPI_Type_vector(nrows, 1, ncols, (MPI_Datatype) 0x4c000405, &column[j]);) (23 2,     MPI_Type_hvector(ncols, 1, sizeof(int), column[j], &xpose[j]);) (23 3,     MPI_Type_commit(&xpose[j]);) (23 4,     MPI_Type_free(&xpose[j]);) (23 5,     MPI_Type_free(&column[j]);) (23 6,     MPI_Type_free(&xpose[j]);) (57 1,   MPI_Finalize();)         MPI_Type_free(&column[j]);) (59 1,   MPI_Finalize();)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);)         MPI_Type_free(&xpose[j]);)         MPI_Type_free(&column[j]);", "label": " (18 1,   MPI_Init(&argc, &argv);) (23 0,  MPI_Wtime();) (25 1,       MPI_Type_vector(nrows, 1, ncols, (MPI_Datatype) 0x4c000405, &column[j]);) (25 2,       MPI_Type_hvector(ncols, 1, sizeof(int), column[j], &xpose[j]);) (25 3,       MPI_Type_commit(&xpose[j]);) (34 1,       MPI_Type_free(&xpose[j]);) (34 2,       MPI_Type_free(&column[j]);) (57 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (12 1,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (16 1,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (12 1,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (16 1,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_gatherv(comm, 1, value, &rank, 1, MPI_INT, MPI_SUM, comm);) (4 1,   MPI_Comm_size(comm, &size);) (5 1,   MPI_Comm_rank(comm, &rank);) (8 1,     MPI_Abort(comm, 1);) (14 1,     MPI_Abort(comm, 1);) (20 1,       MPI_Abort(comm, 1);) (28 1,     MPI_Gatherv(buffer, value, MPI_INT, buffer, value, MPI_INT, 0, comm);) (37 1,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 2,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 3,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 4,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 5,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 6,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 7,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 8,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 9,     MPI_Gatherv(comm, 1, value, &rank, 1, MPI_INT, 0, comm);) (37 10,     MPI_Gatherv(comm, 1, value, &", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(comm, &rank);) (5 2,   MPI_Comm_size(comm, &size);) (8 1,     MPI_Abort(comm, 1);) (17 1,     MPI_Gatherv(&value, 1, MPI_INT, buffer, count_array, displacements, MPI_INT, 0, comm);) (30 1,     MPI_Gatherv(&value, 1, MPI_INT, 0, 0, 0, MPI_INT, 0, comm);) (36 1,     MPI_Gatherv(&values[0], 2, MPI_INT, 0, 0, 0, MPI_INT, 0, comm);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,     MPI_Pack(&size, 1, MPI_INT, buff, BUFFER_SIZE, &position, MPI_COMM_WORLD);) (17 2,     MPI_Pack(&halfSize, 1, MPI_INT, buff, BUFFER_SIZE, &position, MPI_COMM_WORLD);) (17 3,     MPI_Pack(&maxIterations, 1, MPI_INT, buff, BUFFER_SIZE, &position, MPI_COMM_WORLD);) (17 4,     MPI_Bcast(numbers, size, MPI_INT, MASTER, MPI_COMM_WORLD);) (18 1,     MPI_Bcast(workerArray, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (18 2,     MPI_Bcast(workerArray, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (18 3,     MPI_Bcast(numbers, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (18 4,     MPI_Bcast(workerArray, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (18 5,     MPI_Bcast(workerArray, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (18 6,     MPI_Bcast(numbers, size, MPI_DOUBLE, MASTER, MPI_COMM_WORLD);) (", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (20 1,     MPI_Pack(&halfSize, 1, MPI_INT, buff, BUFFER_SIZE, &position, MPI_COMM_WORLD);) (20 2,     MPI_Pack((numbers + halfSize) + (size % 2), halfSize, MPI_DOUBLE, buff, BUFFER_SIZE, &position, MPI_COMM_WORLD);) (20 3,     MPI_Send(buff, position, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), WORKER, 0, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&sumFromSlave, 1, MPI_DOUBLE, WORKER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,     MPI_Recv(buff, BUFFER_SIZE, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), MASTER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 2,     MPI_Unpack(buff, BUFFER_SIZE, &position, &halfSize, 1, MPI_INT, MPI_COMM_WORLD);) (34 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (35 1,     MPI_Unpack(buff, BUFFER_SIZE, &position, workerArray, halfSize, MPI_DOUBLE, MPI_COMM_WORLD);) (36 1,     MPI_Send(&sumSlave, 1, MPI_DOUBLE, MASTER, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo_global);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &p_global);) (22 1,     MPI_Comm_group(MPI_COMM_WORLD, &grupo_global);) (22 2,     MPI_Group_incl(grupo_global, 1, p_global, &grupo_par);) (22 3,     MPI_Comm_create(MPI_COMM_WORLD, a, &cidar);) (22 4,     MPI_Comm_create(MPI_COMM_WORLD, b, &cidar);) (22 5,     MPI_Comm_create(MPI_COMM_WORLD, c, &cidar);) (33 1,     MPI_Comm_rank(cidar, &yo_global);) (33 2,     MPI_Comm_size(cidar, &p_global);) (38 1,     MPI_Comm_free(&cidar);) (39 1,   MPI_Group_free(&grupo_global);) (39 2,   MPI_Group_free(&cidar);) (39 3,   MPI_Comm_free(&cidar_par);) (39 4,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo_global);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &p_global);) (22 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,   MPI_Comm_group(MPI_COMM_WORLD, &grupo_global);) (23 2,   MPI_Group_excl(grupo_global, 2, quitar_par, &grupo_par);) (23 3,   MPI_Group_excl(grupo_global, 2, quitar_impar, &grupo_impar);) (23 4,   MPI_Comm_create(MPI_COMM_WORLD, grupo_par, &par);) (23 5,   MPI_Comm_create(MPI_COMM_WORLD, grupo_impar, &impar);) (25 1,     MPI_Comm_rank(par, &yo_par);) (25 2,     MPI_Comm_size(par, &p_par);) (26 1,     MPI_Allreduce(&yo_global, &total, 1, MPI_INT, MPI_SUM, par);) (33 1,     MPI_Comm_rank(impar, &yo_impar);) (33 2,     MPI_Comm_size(impar, &p_impar);) (34 1,     MPI_Allreduce(&yo_global, &total, 1, MPI_INT, MPI_SUM, impar);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &total_process);) (18 1,     MPI_Send(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (18 2,     MPI_Send(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (21 1,     MPI_Recv(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (21 2,     MPI_Recv(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (24 1,     MPI_Recv(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (24 2,     MPI_Recv(color_map, 3, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (26 1,       MPI_Send(color_map, 3, MPI_INT, i, 0, MPI_COMM_WORLD);) (28 1,       MPI_Send(color_map, 3, MPI_INT, i, 0, MPI_COMM_WORLD);) (33 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &total_process);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Bcast(&colors, 3, MPI_INT, 0, MPI_COMM_WORLD);) (20 1,     MPI_Send(&color, 1, MPI_INT, 0, rank, MPI_COMM_WORLD);) (27 1,       MPI_Recv(&c, 1, MPI_INT, i, -1, MPI_COMM_WORLD, &status);) (36 1,     MPI_Send(&color, 1, MPI_INT, 0, rank, MPI_COMM_WORLD);) (43 1,       MPI_Recv(&c, 1, MPI_INT, i, -1, MPI_COMM_WORLD, &status);) (49 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>5 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &Mi_ID);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &Proc_tot);) (6 3,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &Mi_ID);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &Proc_tot);) (6 4,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sum(local_fib, n, my_rank, MPI_COMM_WORLD);) (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (21 1,   MPI_Reduce(&local_sum, &total_sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (21 1,   MPI_Scatter(&fib, local_n, MPI_INT, &local_fib, local_n, MPI_INT, 0, MPI_COMM_WORLD);) (26 1,   MPI_Reduce(&local_sum, &total_sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 0,  MPI_Init(&argc, &argv);) (9 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (11 0,  MPI_Comm_size(MPI_COMM_WORLD, &uniSize);) (12 0,  MPI_Type_vector(uniSize, 1, 10, MPI_INT, &newtype);) (12 0,  MPI_Type_commit(&newtype);) (12 0,  MPI_Sendrecv(sBuf, 2, newtype, dest, 0, rBuf, 0, MPI_COMM_WORLD, &status);) (20 0,  MPI_Type_free(&newtype);) (20 0,  MPI_Finalize();)", "label": " (8 0,  MPI_Init(&argc, &argv);) (8 0,  MPI_Comm_size(MPI_COMM_WORLD, &uniSize);) (8 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (12 0,  MPI_Type_contiguous(2, MPI_INT, &newtype);) (12 0,  MPI_Type_commit(&newtype);) (14 0,  MPI_Sendrecv(sBuf, 1, newtype, dest, 100, rBuf, 1, newtype, src, 100, MPI_COMM_WORLD, &status);) (19 0,  MPI_Type_free(&newtype);) (19 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_split(MPI_COMM_WORLD, nrows, ncols, my_cart_rank, comm2D);) (14 1,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (22 1,     MPI_Cart_create(MPI_COMM_WORLD, ndims, dims, wrap_around, reorder, &comm2D);) (29 1,     MPI_Comm_rank(comm2D, &my_rank);) (29 2,     MPI_Cart_coords(comm2D, my_rank, ndims, coords);) (33 1,   MPI_Cart_shift(comm2D, 0, 1, &nrows, &ncols);) (36 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (24 1,       MPI_Finalize();) (32 1,   MPI_Dims_create(p, ndims, dims);) (37 0,  MPI_Cart_create(MPI_COMM_WORLD, ndims, dims, wrap_around, reorder, &comm2D);) (39 1,   MPI_Cart_coords(comm2D, my_rank, ndims, coord);) (39 2,   MPI_Cart_rank(comm2D, coord, &my_cart_rank);) (40 1,   MPI_Comm_free(&comm2D);) (40 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_mpi_comm_world(MPI_COMM_WORLD, &world);) (11 1,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,       MPI_Send(&i, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (13 2,       MPI_Comm_spawn(argv[0], child_argv, 1, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &children[i], (int *) 0);) (15 1,       MPI_Recv(&msg, 1, MPI_INT, 0, 1, children[i], MPI_STATUS_IGNORE);) (24 1,       MPI_Comm_disconnect(&children[i]);) (26 1,       MPI_Send(&i, 1, MPI_INT, 0, 1, children[i]);) (27 1,       MPI_Comm_disconnect(&children[i]);) (29 1,     MPI_Barrier(MPI_COMM_WORLD);) (36 1,     MPI_Barrier(MPI_COMM_WORLD);) (42 1,       MPI_Recv(&msg, 1, MPI_INT, 0, 1, parent, MPI_STATUS_IGNORE);) (44 1,       MPI_Comm_disconnect(&parent);) (46 1,       MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (46 2,       MPI_Comm_size(MPI_COMM_WORLD, &size);) (50 1,     MPI_Send(&i, 1, MPI_INT, 0, 1, parent);) (51 1,     MPI_Comm_disconnect(&parent);", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank((MPI_Comm) (&ompi_mpi_comm_world), &rank);) (11 3,   MPI_Comm_size((MPI_Comm) (&ompi_mpi_comm_world), &size);) (11 4,   MPI_Comm_get_parent(&parent);) (18 1,       MPI_Comm_spawn(argv[0], child_argv, 1, (MPI_Info) (&ompi_mpi_info_null), 0, (MPI_Comm) (&ompi_mpi_comm_world), &children[i], (int *) 0);) (26 1,         MPI_Send(&i, 1, (MPI_Datatype) (&ompi_mpi_int), 0, 1, children[i]);) (32 1,       MPI_Comm_disconnect(&children[i]);) (52 1,       MPI_Recv(&msg, 1, (MPI_Datatype) (&ompi_mpi_int), 0, 1, parent, MPI_STATUS_IGNORE);) (58 1,     MPI_Comm_disconnect(&parent);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(world, &worldSize);) (6 3,   MPI_Comm_rank(world, &myRank);) (11 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(world, &worldSize);) (11 1,   MPI_Allreduce(&num, &max, 1, MPI_INT, MPI_MAX, world);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &node);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &node);) (4 4,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &node);) (4 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(mycellworld, mycellworldSize, worldsize, worldsize, comm_sz);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (23 1,     MPI_Finalize();) (32 1,     MPI_Finalize();) (38 1,     MPI_Finalize();) (47 1,     MPI_Finalize();) (57 1,     MPI_Finalize();) (58 0,  MPI_Wtime();) (63 1,   MPI_Barrier(MPI_COMM_WORLD);) (64 1,   MPI_Barrier(MPI_COMM_WORLD);) (66 0,  MPI_Wtime();) (78 1,   MPI_Barrier(MPI_COMM_WORLD);) (78 0,  MPI_Wtime();) (81 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (43 0,  MPI_Wtime();) (43 1,   MPI_Bcast(ruleset, 512, MPI_CHAR, 0, MPI_COMM_WORLD);) (55 1,       MPI_Gather(expandedWorld + (worldsize * (sizeof(char))), worldsize * slicesize, MPI_CHAR, permutedWorld, worldsize * slicesize, MPI_CHAR, 0, MPI_COMM_WORLD);) (62 0,  MPI_Wtime();) (65 1,     MPI_Gather(mycellworld, worldsize * slicesize, MPI_CHAR, permutedWorld, worldsize * slicesize, MPI_CHAR, 0, MPI_COMM_WORLD);) (78 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 0,  MPI_Init(&argc, &argv);) (10 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (10 0,  MPI_Get_processor_name(myName, &iMyName);) (14 0,  MPI_Get_version(&version, &subversion);) (17 0,  MPI_Get_version(&version, &subversion);) (19 0,  MPI_Finalize();)", "label": " (10 0,  MPI_Initialized(&flag);) (14 0,  MPI_Init(&argc, &argv);) (14 0,  MPI_Comm_size(MPI_COMM_WORLD, &uniSize);) (14 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (14 0,  MPI_Get_processor_name(myName, &iMyName);) (14 0,  MPI_Get_version(&version, &subversion);) (15 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sort(MPI_COMM_WORLD, 0, MPI_COMM_WORLD);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (9 0,  MPI_Wtime();) (23 1,       MPI_Send(array + (array_size * n1), n2, MPI_INT, left_child, 0, MPI_COMM_WORLD);) (23 2,       MPI_Send(array + (array_size * n1), n2, MPI_INT, right_child, 0, MPI_COMM_WORLD);) (23 3,       MPI_Send(array + (array_size * n1), n2, MPI_INT, bottom_child, 0, MPI_COMM_WORLD);) (23 4,       MPI_Send(array + (array_size * n1), n2, MPI_INT, top_child, 0, MPI_COMM_WORLD);) (23 5,       MPI_Recv(array, array_size * n1, MPI_INT, parent, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 6,       MPI_Recv(array, array_size * n1, MPI_INT, parent, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 7,       MPI_Recv(array, array_size * n1, MPI_INT, parent, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 8,       MPI_Recv(array, array_size * n1, MPI_INT, parent, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 9,       MPI_", "label": " (3 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (9 1,     MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (23 1,       MPI_Recv(&array_size, 1, MPI_INT, parent, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,       MPI_Recv(array, array_size, MPI_INT, parent, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,       MPI_Send(&n1, 1, MPI_INT, left_child, 0, MPI_COMM_WORLD);) (30 2,       MPI_Send(array, n1, MPI_INT, left_child, 1, MPI_COMM_WORLD);) (30 3,       MPI_Send(&n2, 1, MPI_INT, right_child, 0, MPI_COMM_WORLD);) (30 4,       MPI_Send(array + n1, n2, MPI_INT, right_child, 1, MPI_COMM_WORLD);) (31 1,       MPI_Recv(arr_left_child, n1, MPI_INT, left_child, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,       MPI_Recv(arr_right_child, n2, MPI_INT, right_child, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 1,       MPI_Send(&n2, 1, MPI_INT, left_child, 0, MPI_COMM_WORLD);) (40 2,       MPI_Send(array + n1, n2, MPI_INT, left_child, 1, MPI_COMM_WORLD);) (46 1,       MPI_Recv(arr_left_child, n1, MPI_INT, left_child, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 1,       MPI_Send(array, array_size, MPI_INT, parent, 2, MPI_COMM_WORLD);) (55 1,     MPI_Barrier(MPI_COMM_WORLD);) (55 0,  MPI_Wtime();) (63 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 4,   MPI_Pack_size(1, MPI_INT, commsize, &a);) (13 5,   MPI_Pack_size(1, MPI_INT, commsize, &b);) (13 6,   MPI_Buffer_attach(buffer, a);) (13 7,   MPI_Bsend(&a, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (13 8,   MPI_Bsend(&b, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (13 9,   MPI_Buffer_detach(buffer, &a);) (13 10,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Pack(&a, 1, MPI_INT, buffer, 1000, &position, MPI_COMM_WORLD);) (13 2,     MPI_Pack(&b, 1, MPI_DOUBLE, buffer, 1000, &position, MPI_COMM_WORLD);) (13 3,     MPI_Pack(c, 100, MPI_CHAR, buffer, 1000, &position, MPI_COMM_WORLD);) (13 4,     MPI_Send(buffer, 1000, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 1, tag, MPI_COMM_WORLD);) (17 1,     MPI_Recv(buffer, 1000, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 0, tag, MPI_COMM_WORLD, &status);) (17 2,     MPI_Unpack(buffer, 1000, &position, &a, 1, MPI_INT, MPI_COMM_WORLD);) (17 3,     MPI_Unpack(buffer, 1000, &position, &b, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (17 4,     MPI_Unpack(buffer, 1000, &position, c, 100, MPI_CHAR, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (69 1,       MPI_Send(&cal[i], 1, MPI_INT, i + 1, 0, MPI_COMM_WORLD);) (69 2,       MPI_Send(&cal[j], 1, MPI_INT, j + 1, 0, MPI_COMM_WORLD);) (69 3,       MPI_Send(&cal[i + 1][j + 1], 1, MPI_INT, j + 1, 0, MPI_COMM_WORLD);) (69 4,", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (65 1,   MPI_Bcast(&len, 1, MPI_INT, 0, MPI_COMM_WORLD);) (65 2,   MPI_Bcast(&h1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (65 3,   MPI_Bcast(&w1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (65 4,   MPI_Bcast(kernel, 49, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (65 5,   MPI_Bcast(rgb_image, (550 * 550) * 3, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), 0, MPI_COMM_WORLD);) (65 6,   MPI_Bcast(output_image, len * size, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), 0, MPI_COMM_WORLD);) (65 7,   MPI_Scatter(in_image, len, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), cal, len, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), 0, MPI_COMM_WORLD);) (65 8,   MPI_Barrier(MPI_COMM_WORLD);) (79 1,   MPI_Gather(cal, len, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), output_image, len, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), 0, MPI_COMM_WORLD);) (87 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &", "label": " (29 1,   MPI_Init(0, 0);) (29 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (29 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (38 1,     MPI_Send(file_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);) (41 1,     MPI_Recv(file_size, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (43 1,   MPI_Barrier(MPI_COMM_WORLD);) (49 1,     MPI_Barrier(MPI_COMM_WORLD);) (52 1,       MPI_Send(buff, MSGSIZE, MPI_BYTE, (i % (world_size - 1)) + 1, 0, MPI_COMM_WORLD);) (58 1,       MPI_Send(buff, O, MPI_BYTE, 1, 0, MPI_COMM_WORLD);) (68 1,     MPI_Barrier(MPI_COMM_WORLD);) (72 1,         MPI_Recv(buff, MSGSIZE, MPI_BYTE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (82 1,       MPI_Recv(buff, O, MPI_BYTE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (91 1,   MPI_Barrier(MPI_COMM_WORLD);) (91 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &number_of_processes);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (50 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (58 1,   MPI_Scatterv(A, sendcounts, displs, MPI_FLOAT, A_local, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (59 2,   MPI_Scatterv(y, sendcounts, displs, MPI_FLOAT, y_local, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (59 3,   MPI_Scatterv(A_local, sendcounts, displs, MPI_FLOAT, A_local, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (59 4,   MPI_Scatterv(y, sendcounts, displs, MPI_FLOAT, y_local, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (59 5,   MPI_Scatterv(A_local, sendcounts, displs, MPI_FLOAT, A_local, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (59 6,   MPI_Scatterv(y, sendcounts, displs, MPI_FLOAT, y_local, sendcount", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &number_of_processes);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(qnt, numprocs, myid, numprocs, MPI_COMM_WORLD);) (29 1,   MPI_Init(&argc, &argv);) (29 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (29 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (47 1,       MPI_Send(&suma, sizeof(int), MPI_INT, i, 0, MPI_COMM_WORLD);) (47 2,       MPI_Send(&qnt, sizeof(int), MPI_INT, i, 0, MPI_COMM_WORLD);) (47 3,       MPI_Send(&qnt, sizeof(int), MPI_INT, i, 0, MPI_COMM_WORLD);) (52 1,       MPI_Recv(&suma, sizeof(int), MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (52 2,       MPI_Recv(&qnt, sizeof(int), MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (62 1,     MPI_Recv(&suma, sizeof(int), MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (62 2,     MPI_Recv(&qnt, sizeof(int), MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (74 1,     MPI_Send(&suma, sizeof(int), MPI_INT, 0, 0, MPI_COMM_WORLD);) (75 1,   MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize", "label": " (28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (28 3,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (34 1,       MPI_Recv(&quant, 24, MPI_INT, i, 4, MPI_COMM_WORLD, &status);) (47 1,       MPI_Send(maiores, 5, MPI_INT, i, 4, MPI_COMM_WORLD);) (51 1,       MPI_Recv(&quantmaior, 5, MPI_INT, i, 4, MPI_COMM_WORLD, &status);) (74 1,     MPI_Send(quan, 24, MPI_INT, 0, 4, MPI_COMM_WORLD);) (75 1,     MPI_Recv(&biggest, 5, MPI_INT, 0, 4, MPI_COMM_WORLD, &status);) (76 1,     MPI_Send(quan1, 5, MPI_INT, 0, 4, MPI_COMM_WORLD);) (77 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 4,   MPI_Scatter(a, (4 * 4) / size, MPI_INT, aa, (4 * 4) / size, MPI_INT, 0, MPI_COMM_WORLD);) (15 5,   MPI_Bcast(b, 4 * 4, MPI_INT, 0, MPI_COMM_WORLD);) (15 6,   MPI_Barrier(MPI_COMM_WORLD);) (26 1,   MPI_Gather(cc, (4 * 4) / size, MPI_INT, c, (4 * 4) / size, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Barrier(MPI_COMM_WORLD);) (26 3,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 4,   MPI_Scatter(a, (4 * 4) / size, MPI_INT, aa, (4 * 4) / size, MPI_INT, 0, MPI_COMM_WORLD);) (15 5,   MPI_Bcast(b, 4 * 4, MPI_INT, 0, MPI_COMM_WORLD);) (15 6,   MPI_Barrier(MPI_COMM_WORLD);) (26 1,   MPI_Gather(cc, (4 * 4) / size, MPI_INT, c, (4 * 4) / size, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Barrier(MPI_COMM_WORLD);) (26 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcs);) (26 1,   MPI_Bcast(&result, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (78 1,       MPI_Send(&result, 1, MPI_BYTE, slaveNumber, 0, MPI_COMM_WORLD);) (78 2,       MPI_Send(&result.weights, 3, MPI_FLOAT, slaveNumber, 0, MPI_COMM_WORLD);) (78 3,       MPI_Send(&result.offset, 1, MPI_INT, slaveNumber, 0, MPI_COMM_WORLD);) (78 4,       MPI_Send(&result.score, 1, MPI_INT, slaveNumber, 0, MPI_COMM_WORLD);) (78 5,       MPI_Send(&result.offset, 1, MPI_INT, slaveNumber, 0, MPI_COMM_WORLD);) (78 6,", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcesses);) (22 1,   MPI_Type_create_struct(7, blocklen, disp, type, &ResultMPIType);) (22 2,   MPI_Type_commit(&ResultMPIType);) (37 1,         MPI_Send(&result, 1, ResultMPIType, slaveNumber, 0, MPI_COMM_WORLD);) (42 1,         MPI_Send(&result, 1, ResultMPIType, slaveNumber, 0, MPI_COMM_WORLD);) (51 1,       MPI_Recv(&tempResult, 1, ResultMPIType, -1, -1, MPI_COMM_WORLD, &status);) (54 1,       MPI_Send(&result, 1, ResultMPIType, status.MPI_SOURCE, 0, MPI_COMM_WORLD);) (64 1,       MPI_Recv(&tempResult, 1, ResultMPIType, -1, -1, MPI_COMM_WORLD, &status);) (66 1,       MPI_Send(&tempResult, 1, ResultMPIType, status.MPI_SOURCE, 1, MPI_COMM_WORLD);) (76 1,       MPI_Recv(&resultSlave, 1, ResultMPIType, 0, -1, MPI_COMM_WORLD, &status);) (81 1,         MPI_Send(&resultSlave, 1, ResultMPIType, 0, 0, MPI_COMM_WORLD);) (85 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (12 1,     MPI_Finalize();) (16 1,     MPI_Barrier(MPI_COMM_WORLD);) (16 2,     MPI_Bcast(&nprocs, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 3,     MPI_Barrier(MPI_COMM_WORLD);) (16 4,     MPI_Bcast(&nprocs, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 5,     MPI_Barrier(MPI_COMM_WORLD);) (16 6,     MPI_Bcast(&nprocs, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 7,     MPI_Barrier(MPI_COMM_WORLD);) (16 8,     MPI_Bcast(&nprocs, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 9,     MPI_Barrier(MPI_COMM_WORLD);) (16 10,     MPI_Bcast(&nprocs, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 11,     MPI_Barrier(MPI_COMM_WORLD);) (", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,   MPI_Comm_group(MPI_COMM_WORLD, &worldgroup);) (10 2,   MPI_Barrier(MPI_COMM_WORLD);) (12 1,     MPI_Group_excl(worldgroup, 1, &rank, &newgroup[i]);) (16 1,     MPI_Group_free(&newgroup[i]);) (18 1,   MPI_Group_free(&worldgroup);) (18 2,   MPI_Barrier(MPI_COMM_WORLD);) (18 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,   MPI_Win_allocate_shared(my_size, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (19 2,   MPI_Win_fence(0, window);) (22 1,     MPI_Get(&my_value, 1, MPI_INT, 1, 0, 1, MPI_INT, window);) (23 1,   MPI_Win_fence(0, window);) (23 2,   MPI_Win_free(&window);) (23 3,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 1,   MPI_Win_create(&window_buffer, sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (14 1,   MPI_Win_fence(0, window);) (17 1,     MPI_Put(&my_value, 1, MPI_INT, 1, 0, 1, MPI_INT, window);) (19 1,   MPI_Win_fence(0, window);) (23 1,   MPI_Win_free(&window);) (23 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (36 1,   MPI_Type_vector(8 * 8, 1, 2, MPI_INT, &col);) (36 2,   MPI_Type_commit(&col);) (36 3,   MPI_Type_extent(MPI_INT, &extent);) (36 4,   MPI_Type_hvector(8 * 8, 1, 2 * (sizeof(int)), &row);) (36 5,   MPI_Type_commit(&row);) (36 6,   MPI_Type_hvector(8 * 8, 1, 2, MPI_INT, &xpose);) (36 7,   MPI_Type_commit(&xpose);) (38 1,   MPI_Bcast(&X, 1, xpose, 0, MPI_COMM_WORLD);) (43 1,   MPI_Type_free(&col);) (", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (13 1,   MPI_Bcast(Y, 8 * 8, MPI_INT, root, MPI_COMM_WORLD);) (13 2,   MPI_Scatter(X, part_size, MPI_INT, X[from], part_size, MPI_INT, root, MPI_COMM_WORLD);) (23 1,   MPI_Gather(Z[from], part_size, MPI_INT, Z, part_size, MPI_INT, root, MPI_COMM_WORLD);) (23 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(35 2,   MPI_Bcast(m->SquareMatrix, m->order * m->order, MPI_DOUBLE", "label": " (12 1,   MPI_Init(0, 0);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (33 1,     MPI_Bcast(m->SquareMatrix[i], m->order, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (36 0,  MPI_Wtime();) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (35 1,   MPI_Scatter(a, local_els, MPI_DOUBLE, c, local_els, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (35 2,   MPI_Scatter(b, local_els, MPI_DOUBLE, c, local_els, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (47 1,   MPI_Gather(c, local_els, MPI_DOUBLE, c, local_els, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (57 1,   MPI_Finalize();)", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (37 1,   MPI_Alltoallv(c_part_out, cnt_out, disp_out, MPI_DOUBLE, c_part_in, cnt_in, disp_in, MPI_DOUBLE, MPI_COMM_WORLD);) (47 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 0,  MPI_File_open(MPI_COMM_WORLD, (char *) \"temp\", (8 | 16) | 1, MPI_INFO_NULL, &cFile);) (15 0,  MPI_File_c2f(cFile);) (15 0,  MPI_File_c2f(cFile);) (21 1,   MPI_File_close(&cFile);) (32 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 0,  MPI_File_open(MPI_COMM_WORLD, \"temp\", (8 | 16) | 1, MPI_INFO_NULL, &cFile);) (15 0,  MPI_File_c2f(cFile);) (15 0,  MPI_File_c2f(cFile);) (21 1,   MPI_File_close(&cFile);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>icaqsort(0, 0, 16 / size, sizeof(int), compare_int);) (7 1,   MPI_Allgather(data, 8 / size, 16 / size, MPI_INT, shou, 8 / size, MPI_INT, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,     MPI_Scatter(data, (8 / size) * j, MPI_INT, shou, (8 / size) * j, MPI_INT, 0, MPI_COMM_WORLD);) (18 1,     MPI_Gather(shou, (8 / size) * j, MPI_INT, data, (8 / size) * j, MPI_INT, 0, MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>atoi(myrank);) (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,     MPI_Send(my_message, strlen(my_message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(my_message, 1024, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (21 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (15 1,     MPI_Send(my_message, strlen(my_message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(dest_message, 1024, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (19 1,     MPI_Recv(dest_message, 1024, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (19 2,     MPI_Send(my_message, strlen(my_message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rc);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &rem_type);) (19 4,   MPI_Type_contiguous(2147483647, MPI_BYTE, &inner_type);) (19 5,   MPI_Type_contiguous(1, MPI_BYTE, &rem_type);) (19 6,   MPI_Type_commit(&inner_type);) (42 1,     MPI_Type_struct(2, block_len, disp, type, &mem_type);) (42 2,     MPI_Type_commit(&mem_type);) (42 3,     MPI_Type_free(&rem_type);) (42 4,     MPI_Type_free(&inner_type);) (42 0,  MPI_File_open(MPI_COMM_WORLD, \"testfile\", 8 | 1, MPI_INFO_NULL, &fh);) (45 0,  MPI_File_set_view(fh, 2144, MPI_BYTE, file_type, \"native\", MPI_INFO_NULL);) (47 0,  MPI_File_iwrite_at_all(fh, 0, buf_write, 1, mem_type, &request);) (51 1,   MPI_Wait(&request, &status);) (51 0,  MPI_File_set_view(fh, 2144, MPI_BYTE, file_type, \"native\", MPI_INFO_NULL);) (53 0,  MPI_File_iread_at_all(fh, 0, buf_read, 1, mem_type, &request);) (54 1,   MPI_Wait(&request, &status);) (54 0,", "label": " (19 1,   MPI_Init(&argc, &argv);) (37 1,   MPI_Type_contiguous(2147483647, MPI_BYTE, &inner_type);) (37 2,   MPI_Type_contiguous(1, MPI_BYTE, &rem_type);) (43 1,   MPI_Type_struct(2, block_len, disp, type, &mem_type);) (43 2,   MPI_Type_commit(&mem_type);) (43 3,   MPI_Type_free(&rem_type);) (43 4,   MPI_Type_free(&inner_type);) (43 5,   MPI_Type_contiguous(4, MPI_BYTE, &int_type);) (44 1,     MPI_Type_vector(1, 536870912, 1, int_type, &file_type);) (45 1,   MPI_Type_commit(&file_type);) (45 2,   MPI_Type_free(&int_type);) (45 0,  MPI_File_open(MPI_COMM_WORLD, \"testfile\", 8 | 1, MPI_INFO_NULL, &fh);) (50 0,  MPI_File_set_view(fh, 2144, MPI_BYTE, file_type, \"native\", MPI_INFO_NULL);) (55 0,  MPI_File_iwrite_at_all(fh, 0, buf_write, 1, mem_type, &request);) (60 1,   MPI_Wait(&request, &status);) (60 0,  MPI_File_set_view(fh, 2144, MPI_BYTE, file_type, \"native\", MPI_INFO_NULL);) (65 0,  MPI_File_iread_at_all(fh, 0, buf_read, 1, mem_type, &request);) (70 1,   MPI_Wait(&request, &status);) (81 1,   MPI_File_close(&fh);) (81 2,   MPI_Type_free(&mem_type);) (81 3,   MPI_Type_free(&file_type);) (82 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace10(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Get_processor_name(name, &length);) (10 0,  MPI_Wtime();) (18 0,  MPI_Wtime();) (18 1,   MPI_Reduce(&value, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (18 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 4,   MPI_Get_processor_name(name, &length);) (10 0,  MPI_Wtime();) (18 0,  MPI_Wtime();) (18 1,   MPI_Reduce(&value, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,     MPI_Win_allocate_shared(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (21 1,     MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (35 1,   MPI_Win_fence(0, shwin);) (35 2,   MPI_Win_fence(0, shwin);) (35 3,   MPI_Win_free(&shwin);) (35 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,   MPI_Win_allocate_shared((rank == 0)? (sizeof(int)) : (0), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (10 1,   MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,     MPI_Win_lock(1, 0, 0, shwin);) (17 1,     MPI_Win_unlock(0, shwin);) (23 1,   MPI_Win_lock(1, 0, 0, shwin);) (24 1,   MPI_Win_unlock(0, shwin);) (35 1,   MPI_Win_free(&shwin);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &group);) (5 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_group(MPI_COMM_WORLD, &group);) (4 1,   MPI_Group_rank(group, &my_rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (13 1,   MPI_Comm_size(comm, &comm_sz);) (13 2,   MPI_Comm_rank(comm, &my_rank);) (20 1,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, comm);) (22 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(0, 0);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (20 1,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, comm);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Recv(&b, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n39:   MPI_Init(&argc, &argv);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &msglen);) (34 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (17 1,   MPI_Get_processor_name(name, &resultlen);) (19 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (8 4,   MPI_Get_processor_name(name, &resultlen);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,   MPI_Address(&value_to_send, &value_received);) (19 1,   MPI_Address(&value_received, &value_received);) (20 1,   MPI_Type_create_struct(3, value_count, value_received, &MPI_point);) (20 2,   MPI_Type_commit(&MPI_point);) (22 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, -1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Send(&value_to_send, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,     MPI_Send(&num, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&num, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,     MPI_Send(&num, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&num, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (23 1,     MPI_Abort(MPI_COMM_WORLD, rc);) (46 1,       MPI_Send(&offset, 1, MPI_INT, dest, mtype, MPI_COMM_WORLD);) (46 2,       MPI_Send(&rows, 1, MPI_INT, dest, mtype, MPI_COMM_WORLD);) (46 3,       MPI_Send(&c[offset][0], rows * 15, MPI_DOUBLE, dest, mtype, MPI_COMM_WORLD);) (64 1,       MPI_Recv(&offset, 1, MPI_INT, source, mtype, MPI_COMM_WORLD, &status);) (64 2,       MPI_Recv(&rows, 1, MPI_INT, source, mtype, MPI", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (23 1,     MPI_Abort(MPI_COMM_WORLD, rc);) (48 1,       MPI_Send(&offset, 1, MPI_INT, dest, mtype, MPI_COMM_WORLD);) (48 2,       MPI_Send(&rows, 1, MPI_INT, dest, mtype, MPI_COMM_WORLD);) (48 3,       MPI_Send(&a[offset][0], rows * 15, MPI_DOUBLE, dest, mtype, MPI_COMM_WORLD);) (48 4,       MPI_Send(&b, 15 * 7, MPI_DOUBLE, dest, mtype, MPI_COMM_WORLD);) (55 1,       MPI_Recv(&offset, 1, MPI_INT, source, mtype, MPI_COMM_WORLD, &status);) (55 2,       MPI_Recv(&rows, 1, MPI_INT, source, mtype, MPI_COMM_WORLD, &status);) (55 3,       MPI_Recv(&c[offset][0], rows * 7, MPI_DOUBLE, source, mtype, MPI_COMM_WORLD, &status);) (74 1,     MPI_Recv(&offset, 1, MPI_INT, 0, mtype, MPI_COMM_WORLD, &status);) (74 2,     MPI_Recv(&rows, 1, MPI_INT, 0, mtype, MPI_COMM_WORLD, &status);) (74 3,     MPI_Recv(&a, rows * 15, MPI_DOUBLE, 0, mtype, MPI_COMM_WORLD, &status);) (74 4,     MPI_Recv(&b, 15 * 7, MPI_DOUBLE, 0, mtype, MPI_COMM_WORLD, &status);) (85 1,     MPI_Send(&offset, 1, MPI_INT, 0, mtype, MPI_COMM_WORLD);) (85 2,     MPI_Send(&rows, 1, MPI_INT, 0, mtype, MPI_COMM_WORLD);) (85 3,     MPI_Send(&c, rows * 7, MPI_DOUBLE, 0, mtype, MPI_COMM_WORLD);) (86 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (10 1,     MPI_Recv(&buff_number, 2, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (10 2,     MPI_Recv(&buff_number, 2, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (15 1,     MPI_Send(&number, 1, MPI_INT, dest, 0, MPI_COMM_WORLD);) (17 1,       MPI_Send(&number, 1, MPI_INT, dest, 0, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MP", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (17 1,       MPI_Rsend(&number, 1024, MPI_INT, dest, i, MPI_COMM_WORLD);) (17 2,       MPI_Rsend(&number, 1024, MPI_INT, dest, i + 100, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,     MPI_Send(&a, 20, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 2,     MPI_Send(&a, 20, MPI_INT, 2, 0, MPI_COMM_WORLD);) (23 3,     MPI_Send(&a, 20, MPI_INT, 2, 1, MPI_COMM_WORLD);) (23 4,     MPI_Send(&a, 20, MPI_INT, 3, 2, MPI_COMM_WORLD);) (23 5,     MPI_Recv(&a, 20, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 6,     MPI_Recv(&a, 20, MPI_INT, 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 7,     MPI_Recv(&a, 20, MPI_INT, 2, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 8,     MPI_Recv(&a, 20, MPI_INT, 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 9,     MPI_Recv(&a, 20, MPI_INT, 2, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 10,     MPI_Recv(&a, 20, MPI_INT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,     MPI_Send(&a, 20, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 2,     MPI_Recv(&a, 20, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,     MPI_Recv(&a, 20, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,     MPI_Send(&a, 20, MPI_INT, 0, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4] = {1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &wsize);) (8 1,   MPI_Graph_create(MPI_COMM_WORLD, wsize, index, edges, 1, &graph_comm);) (8 2,   MPI_Comm_rank(graph_comm, &pi);) (12 1,   MPI_Graph_neighbors_count(graph_comm, pi, &neighborsCount);) (12 2,   MPI_Graph_neighbors(graph_comm, pi, maxNeighbors, neighbors);) (25 1,     MPI_Recv(&message, 1, MPI_INT, -1, 0, graph_comm, &status);) (73 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &toterrs);) (10 4,   MPI_Errhandler_set(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (10 5,   MPI_Bcast(str, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (10 6,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (11 0,  MPI_Bcast(0, 0, MPI_CHAR, 0, MPI_COMM_WORLD);) (12 1,   MPI_Error_class(ierr, &errclass);) (14 1,       MPI_Error_string(ierr, str, &slen);) (16 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Errhandler_set(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (10 0,  MPI_Reduce(&a, &b, 1, MPI_BYTE, MPI_MAX, 0, MPI_COMM_WORLD);) (19 1,       MPI_Error_string(ierr, str, &slen);) (22 1,   MPI_Errhandler_set(MPI_COMM_WORLD, MPI_ERRORS_ARE_FATAL);) (22 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 3,   MPI_Allreduce(&errs, &toterrs, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations(argc, argv);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Reduce(&t.sum, &reply, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Win_create(&window_buf, sizeof(long), sizeof(long), MPI_INFO_NULL, MPI_COMM_WORLD, &buf);) (7 1,   MPI_Win_fence(0, win);) (9 1,     MPI_Get(&new_value, 1, MPI_LONG, 0, 0, 1, MPI_LONG, win);) (9 2,     MPI_Win_fence(0, win);) (9 3,     MPI_Win_fence(0, win);) (9 4,     MPI_Win_fence(0, win);) (9 5,     MPI_Win_fence(0, win);) (9 6,     MPI_Win_fence(0, win);) (9 7,     MPI_Win_fence(0, win);) (9 8,     MPI_Win_fence(0, win);) (9 9,     MPI_Win_fence(0, win);) (9 10,     MPI_Win_fence(0, win);) (9 11,     MPI_Win_fence(0, win);) (9 12,     MPI_Win_fence(0, win);) (9 13,     MPI_Win_fence(0, win);) (9 14,     MPI_Win_fence(0, win);) (9 15,     MPI_Win_fence(0, win);) (9 16,     MPI_Win_fence(0, win);) (9 17,     MPI", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 0,  MPI_Win_create(&window_buf, sizeof(long), sizeof(long), MPI_INFO_NULL, MPI_COMM_WORLD, &buf);) (7 1,   MPI_Win_fence(0, buf);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Put(&initial, 1, MPI_LONG, 1, 0, 1, MPI_LONG, buf);) (12 1,   MPI_Win_fence(0, buf);) (23 1,       MPI_Put(&new_value, 1, MPI_LONG, next_rank, 0, 1, MPI_LONG, buf);) (25 1,     MPI_Win_fence(0, buf);) (29 1,   MPI_Win_free(&buf);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &number_of_processes);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (48 1,   MPI_Barrier(MPI_COMM_WORLD);) (49 0,  MPI_Wtime();) (55 1,   MPI_Barrier(MPI_COMM_WORLD);) (58 1,   MPI_Scatterv(A, sendcounts, displs, MPI_FLOAT, &x, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (58 2,   MPI_Scatterv(x, sendcounts, displs, MPI_FLOAT, &y, sendcounts[rank], MPI_FLOAT, 0, MPI_COMM_WORLD);) (60 1,   MPI_Gatherv(y, sendcounts[rank], MPI_FLOAT, y_local, sendcounts, displs, MPI_FLOAT, 0, MPI_COMM_WORLD);) (80 1,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &number_of_processes);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (49 1,   MPI_Barrier(MPI_COMM_WORLD);) (49 0,  MPI_Wtime();) (63 1,   MPI_Reduce(&t, &t_max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (68 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (29 1,         MPI_Send(A, N, MPI_DOUBLE, 1, tag1, MPI_COMM_WORLD);) (29 2,         MPI_Recv(A, N, MPI_DOUBLE, 1, tag2, MPI_COMM_WORLD, &stat);) (33 1,         MPI_Recv(A, N, MPI_DOUBLE, 0, tag1, MPI_COMM_WORLD, &stat);) (33 2,         MPI_Send(A, N, MPI_DOUBLE, 0, tag2, MPI_COMM_WORLD);) (39 0,  MPI_Wtime();) (43 1,         MPI_Send(A, N, MPI_DOUBLE, 1, tag1, MPI_COMM_WORLD);) (43 2,         MPI_Recv(A, N, MPI_DOUBLE, 1, tag2, MPI_COMM_WORLD, &stat);) (43 3,         MPI_Recv(A, N, MPI_DOUBLE, 1, tag1, MPI_COMM_WORLD, &stat);) (48 0,  MPI_Wtime();) (53 1,         MPI_Send(A, N, MPI_DOUBLE, 0, tag1, MPI_COMM_WORLD);) (53 2,", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (29 1,         MPI_Send(A, N, MPI_DOUBLE, 1, tag1, MPI_COMM_WORLD);) (29 2,         MPI_Recv(A, N, MPI_DOUBLE, 1, tag2, MPI_COMM_WORLD, &stat);) (33 1,         MPI_Recv(A, N, MPI_DOUBLE, 0, tag1, MPI_COMM_WORLD, &stat);) (33 2,         MPI_Send(A, N, MPI_DOUBLE, 0, tag2, MPI_COMM_WORLD);) (39 0,  MPI_Wtime();) (43 1,         MPI_Send(A, N, MPI_DOUBLE, 1, tag1, MPI_COMM_WORLD);) (43 2,         MPI_Recv(A, N, MPI_DOUBLE, 1, tag2, MPI_COMM_WORLD, &stat);) (47 1,         MPI_Recv(A, N, MPI_DOUBLE, 0, tag1, MPI_COMM_WORLD, &stat);) (47 2,         MPI_Send(A, N, MPI_DOUBLE, 0, tag2, MPI_COMM_WORLD);) (50 0,  MPI_Wtime();) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_receive(buffer, 10, MPI_CHAR, 0, MPI_COMM_WORLD);) (4 1,   MPI_Barrier(MPI_COMM_WORLD);) (4 2,   MPI_Finalize();)       MPI_Error_string(errors, error, &buffer[i]);) (30 1,   MPI_Finalize();)       MPI_Error_string(errors, error, &buffer[i]);)     MPI_Error_string(30, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(30, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer[9 - 1]);)       MPI_Error_string(errors, error, &buffer", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (15 1,   MPI_Type_size(type, &size);) (17 1,  \"MPI_Type_size of MPI_INT incorrect size (%d);) (20 1,   MPI_Type_get_extent(type, &lb, &extent);) (22 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect extent (%d);) (23 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect lb (%d);) (26 1,   MPI_Type_ub(type, &ub);) (27 1,  \"MPI_Type_ub of MPI_INT returned incorrect ub (%d);) (30 1,   MPI_Type_size(type, &size);) (32 1,  \"MPI_Type_size of", "label": " (14 1,   MPI_Init(&argc, &argv);) (15 1,   MPI_Type_size(type, &size);) (17 1,  \"MPI_Type_size of MPI_INT incorrect size (%d);) (20 1,   MPI_Type_get_extent(type, &lb, &extent);) (22 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect extent (%d);) (27 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect lb (%d);) (30 1,   MPI_Type_ub(type, &ub);) (32 1,  \"MPI_Type_ub of MPI_INT returned incorrect ub (%d);) (36 1,   MPI_Type_size(type, &size);) (38 1,  \"MPI_Type_size of MPI_FLOAT_INT returned incorrect size (%d);) (41 1,   MPI_Type_get_extent(type, &lb, &extent);) (43 1,  \"MPI_Type_get_extent of MPI_FLOAT_INT returned incorrect extent (%d);) (48 1,  \"MPI_Type_get_extent of MPI_FLOAT_INT returned incorrect lb (%d);) (51 1,   MPI_Type_ub(type, &ub);) (53 1,  \"MPI_Type_ub of MPI_FLOAT_INT returned incorrect ub (%d);) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 3,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (44 1,   MPI_Barrier(MPI_COMM_WORLD);) (44 0,  MPI_Wtime();) (44 1,   MPI_Reduce(&count[rank], &count, 1, MPI_LONG_LONG_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (44 2,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 4,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (44 1,   MPI_Barrier(MPI_COMM_WORLD);) (44 0,  MPI_Wtime();) (48 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);) (28 2,   MPI_Finalize();)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);)             MPI_Bcast(buf, n, MPI_CHAR, 0, MPI_COMM_WORLD);)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (12 1,     MPI_Isend(&x, 1, MPI_INT, 1, 20, MPI_COMM_WORLD, &request);) (12 2,     MPI_Wait(&request, &status);) (17 1,     MPI_Irecv(&x, 1, MPI_INT, 0, 23, MPI_COMM_WORLD, &request);) (18 1,     MPI_Wait(&request, &status);) (21 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (12 1,     MPI_Isend(&x, 1, MPI_INT, 1, 20, MPI_COMM_WORLD, &request);) (12 2,     MPI_Wait(&request, &status);) (17 1,     MPI_Irecv(&x, 1, MPI_INT, 0, 20, MPI_COMM_WORLD, &request);) (18 1,     MPI_Wait(&request, &status);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (47 1,   MPI_Finalize();)             MPI_Send(&numberArray[u], 1, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD);)         MPI_Recv(&numberArray[u], 1, MPI_INT, size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (47 2,     MPI_Finalize();)             MPI_Send(&numberArray[u], 1, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD);)         MPI_Recv(&numberArray[u], 1, MPI_INT, size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Finalize();)             MPI_Send(&numberArray[u], 1, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD);)         MPI_Recv(&numberArray[u], 1, MPI_INT, size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Finalize();)             MPI_Send(&numberArray[u], 1, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD);)         MPI_Recv(&numberArray[u], 1, MPI_INT, size - 1, 0, MPI_COMM_WORLD, MP", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (47 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[1] = 0;\n13:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 0,  MPI_Wtime();) (17 1,       MPI_Isend(&low_bound, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &request);) (17 2,       MPI_Isend(&upper_bound, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &request);) (17 3,       MPI_Isend(&mat_a[low_bound][0], (upper_bound - low_bound) * NUM_COLUMNS", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 0,  MPI_Wtime();) (17 1,       MPI_Isend(&low_bound, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &request);) (17 2,       MPI_Isend(&upper_bound, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &request);) (17 3,       MPI_Isend(&mat_a[low_bound][0], (upper_bound - low_bound) * NUM_COLUMNS_A, MPI_DOUBLE, i, 1 + 2, MPI_COMM_WORLD, &request);) (20 1,   MPI_Bcast(&mat_b, NUM_ROWS_B * NUM_COLUMNS_B, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&low_bound, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (22 2,     MPI_Recv(&upper_bound, 1, MPI_INT, 0, 1 + 1, MPI_COMM_WORLD, &status);) (22 3,     MPI_Recv(&mat_a[low_bound][0], (upper_bound - low_bound) * NUM_COLUMNS_A, MPI_DOUBLE, 0, 1 + 2, MPI_COMM_WORLD, &status);) (35 1,     MPI_Isend(&low_bound, 1, MPI_INT, 0, 4, MPI_COMM_WORLD, &request);) (35 2,     MPI_Isend(&upper_bound, 1, MPI_INT, 0, 4 + 1, MPI_COMM_WORLD, &request);) (35 3,     MPI_Isend(&mat_result[low_bound][0], (upper_bound - low_bound) * NUM_COLUMNS_B, MPI_DOUBLE, 0, 4 + 2, MPI_COMM_WORLD, &request);) (40 1,       MPI_Recv(&low_bound, 1, MPI_INT, i, 4, MPI_COMM_WORLD, &status);) (40 2,       MPI_Recv(&upper_bound, 1, MPI_INT, i, 4 + 1, MPI_COMM_WORLD, &status);) (40 3,       MPI_Recv(&mat_result[low_bound][0], (upper_bound - low_bound) * NUM_COLUMNS_B, MPI_DOUBLE, i, 4 + 2, MPI_COMM_WORLD, &status);) (42 0,  MPI_Wtime();) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(comm, &rank);) (4 2,   MPI_Comm_size(comm, &size);) (11 1,     MPI_Type_create_hindexed_block(count, 1, 10, MPI_INT, &MPI_ENTRY_WORD);) (11 2,     MPI_Type_commit(&MPI_ENTRY_WORD);) (11 3,     MPI_Win_create(buf, (sizeof(int)) * 10, sizeof(int), MPI_INFO_NULL, comm, &win);) (13 1,   MPI_Win_fence(0, win);) (13 2,   MPI_Win_lock(2, 0, 0, win);) (13 3,   MPI_Get(buf, 10, MPI_INT, 0, 0, 10, MPI_INT, win);) (17 1,     MPI_Win_unlock(0, win);) (17 2,     MPI_Win_lock(2, 0, 0, win);) (17 3,     MPI", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(comm, &rank);) (14 1,   MPI_Win_create(buf, (sizeof(int)) * 10, sizeof(int), MPI_INFO_NULL, comm, &win);) (21 1,   MPI_Win_fence(2, win);) (23 1,     MPI_Get(buf, 10, MPI_INT, 0, 0, 10, MPI_INT, win);) (24 1,   MPI_Win_fence(16, win);) (31 1,   MPI_Win_free(&win);) (31 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (15 0,  MPI_Wtime();) (22 0,  MPI_Wtime();) (25 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (28 0,  MPI_Wtime();) (30 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (26 0,  MPI_Recv(&dummy, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (26 0,  MPI_Wtime();) (26 0,  MPI_Send(outmsg, msgsize, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (26 0,  MPI_Recv(inmsg, msgsize, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (26 0,  MPI_Wtime();) (33 0,  MPI_Send(&dummy, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (33 0,  MPI_Recv(inmsg, msgsize, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (33 0,  MPI_Send(outmsg, msgsize, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,     MPI_Irecv(buffer, 2, MPI_INT, 1, 0, MPI_COMM_WORLD, &requests[0]);) (14 2,     MPI_Test(&requests[0], &index, requests[0]);) (18 1,     MPI_Waitall(2, requests, MPI_STATUS_IGNORE);) (24 1,     MPI_Irecv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &requests[1]);) (24 2,     MPI_Test(&requests[1], &index, requests[1]);) (26 1,     MPI_Waitall(2, requests, MPI_STATUS_IGNORE);) (26 2,     MPI_Send(&buffer, 2, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 3,     MPI_Waitall(2, requests, MPI_STATUS_IGNORE);) (26 4,     MPI_Send(&buffer, 2, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 5,     MPI_Waitall(2, requests, MPI_STATUS_IGNORE);) (26 6,     MPI_Send(&buffer, 2, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 7,     MPI_Waitall(2, requests, MPI_", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,     MPI_Isend(&buffer[0], 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &requests[0]);) (16 1,     MPI_Isend(&buffer[1], 1, MPI_INT, 2, 0, MPI_COMM_WORLD, &requests[1]);) (18 1,     MPI_Waitany(2, requests, &index, MPI_STATUS_IGNORE);) (19 1,     MPI_Waitany(2, requests, &index, MPI_STATUS_IGNORE);) (24 1,     MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Get_address(&a[2], &addr);) (5 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Get_address(&a[2], &addr);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &numeroDeTarefas);) (17 1,       MPI_Recv(&matrizVizinhos, 1, MPI_INT, -1, tag, MPI_COMM_WORLD, &status);) (21 1,       MPI_Send(&myNumeroDeVizinhos, 1, MPI_INT, i, tag, MPI_COMM_WORLD);) (28 1,     MPI_Send(&myNumeroDeVizinhos, 1, MPI_INT, i, tag, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&matrizVizinhos, 1, MPI_INT, -1, tag, MPI_COMM_WORLD, &status);) (34 1,       MPI_Send(&myNumeroDeVizinhos, 1, MPI_INT, i, tag, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (17 1,       MPI_Send(message, strlen(message) + 1, MPI_CHAR, i, tag, MPI_COMM_WORLD);) (21 1,       MPI_Recv(message, 100, MPI_CHAR, -1, tag, MPI_COMM_WORLD, &status);) (28 1,     MPI_Recv(message, 100, MPI_CHAR, -1, tag, MPI_COMM_WORLD, &status);) (34 1,       MPI_Send(message, strlen(message) + 1, MPI_CHAR, i, tag, MPI_COMM_WORLD);) (37 1,       MPI_Recv(message, 100, MPI_CHAR, -1, tag, MPI_COMM_WORLD, &status);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = rank;\n30:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,   MPI_Scatter(A, R * chunk, MPI_FLOAT, A_local, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 2,   MPI_Scatter(x, chunk, MPI_FLOAT, x, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 3,   MPI_Scatter(b, chunk, MPI_FLOAT, b_local, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 4,   MPI_Scatter(x, chunk, MPI_FLOAT, x + 1, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 5,   MPI_Scatter(x, chunk, MPI_FLOAT, x + 1, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 6,   MPI_Scatter(x, chunk, MPI_FLOAT, x + 1, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 7,   MPI_Scatter(x, chunk, MPI_FLOAT, x + 1, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,   MPI_Scatter(A, chunk * C, MPI_FLOAT, A_local, chunk * C, MPI_FLOAT, 0, MPI_COMM_WORLD);) (22 2,   MPI_Bcast(x, C, MPI_FLOAT, 0, MPI_COMM_WORLD);) (24 1,   MPI_Gather(b_local, chunk, MPI_FLOAT, b, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &numWorkers);) (27 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &numWorkers);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[6 1] = (MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (20 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &contis[i]);) (20 2,   MPI_Type_commit(&contis[i]);) (28 1,     MPI_Send(outbuf, 9, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 1, 0, MPI_COMM_WORLD);) (33 1,     MPI_Recv(recvcnts, 3, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Type_free(&contis[i]);) (35 2,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (27 1,     MPI_Type_contiguous(typesize, MPI_INT, contis + i);) (27 2,     MPI_Type_commit(contis + i);) (31 1,   MPI_Alltoallw(outbuf, sendcnts, displs, contis, inbuf, recvcnts, displs, contis, MPI_COMM_WORLD);) (33 1,     MPI_Type_free(contis + i);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(&buf, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (14 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(&buf, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace1d_mpi(MPI_COMM_WORLD, &size);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Bcast(&num1, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 2,   MPI_Bcast(&num2, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 3,   MPI_Bcast(&num1, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 4,   MPI_Bcast(&num2, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 5,   MPI_Bcast(&num1, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 6,   MPI_Bcast(&num2, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 7,   MPI_Bcast(&num1, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 8,   MPI_Bcast(&num2, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (10 9,   MPI_Win_allocate(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window_buffer, &win);) (15 1,     MPI_Barrier(MPI_COMM_WORLD);) (15 0,  MPI_Wtime();) (17 1,     MPI_Win_lock(2, 0, 0, win);) (17 2,     MPI_Put(&finalSum, 1, MPI_LONG, 1, 0, 1, MPI_", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 0,  MPI_Wtime();) (66 1,   MPI_Win_create(window_buffer, arraySize * (sizeof(unsigned long)), sizeof(unsigned long), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (66 2,   MPI_Win_fence(0, win);) (66 3,   MPI_Accumulate(&comp_array[0], arraySize, MPI_INT, 0, 0, arraySize, MPI_INT, MPI_SUM, win);) (70 1,   MPI_Win_fence(0, win);) (81 0,  MPI_Wtime();) (86 1,   MPI_Win_free(&win);) (86 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (10 4,   MPI_Alloc_mem(8 * 262144, MPI_INFO_NULL, &orig_buf);) (10 5,   MPI_Alloc_mem(8 * 262144, MPI_INFO_NULL, &tar_buf);) (10 6,   MPI_Win_create(tar_buf, (sizeof(int)) * 262144, sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (10 7,   MPI_Win_fence(0, win);) (18 1,           MPI_Accumulate(orig_buf, data_size, MPI_BYTE, 0, 0, data_size, MPI_BYTE, MPI_SUM, win);) (18 2,           MPI_Accumulate(orig_buf, data_size, MPI_BYTE, 0, 0, data_size, MPI_BYTE, MPI_SUM, win);) (19 1,         MPI_Win_fence(0, win);) (22 1,       MPI_Win_fence(0, win);) (22 2,       MPI_Win_fence(0, win);) (22 3,       MPI_Win_fence(0, win);) (22 4,       MPI_Win_fence(0, win);) (22 5,       MPI_Win_fence(0, win);) (22 6,       MPI_Win_fence(0, win);) (26 1,   MPI_Win_free(&win);) (26 2,   MPI_Free_", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (10 3,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 4,   MPI_Alloc_mem(8 * 262144, (MPI_Info) 0x1c000000, &orig_buf);) (10 5,   MPI_Alloc_mem(8 * 262144, (MPI_Info) 0x1c000000, &tar_buf);) (12 1,     MPI_Win_create(tar_buf, 8 * 262144, 1, (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &win);) (12 2,     MPI_Win_lock_all(0, win);) (18 1,           MPI_Accumulate(orig_buf, data_size, (MPI_Datatype) 0x4c00010d, 0, 0, data_size, (MPI_Datatype) 0x4c00010d, (MPI_Op) 0x58000003, win);) (18 2,           MPI_Win_flush_local(0, win);) (20 1,         MPI_Win_flush(0, win);) (23 1,     MPI_Win_unlock_all(win);) (23 2,     MPI_Win_free(&win);) (27 1,   MPI_Free_mem(orig_buf);) (27 2,   MPI_Free_mem(tar_buf);) (27 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 1,     MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, reorder, &new_communicator);) (10 2,     MPI_Comm_rank(new_communicator, &my_rank);) (10 3,     MPI_Cart_coords(new_communicator, my_rank, 2, my_coords);) (24 1,     MPI_Cart_rank(new_communicator, my_rank, &my_rank_new_communicator);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, reorder, &new_communicator);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 1,   MPI_Reduce(&sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (20 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (20 2,   MPI_Type_commit(&conti);) (20 3,   MPI_Alltoall(outbuf, 6 / (3 - rank), conti, inbuf, 6 + (rank % 2), MPI_INT, MPI_COMM_WORLD);) (20 4,   MPI_Type_free(&conti);) (20 5,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (20 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (20 2,   MPI_Type_commit(&conti);) (20 3,   MPI_Reduce_scatter_block(outbuf, inbuf, 6 + (rank % 2), MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (20 4,   MPI_Type_free(&conti);) (20 5,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (36 1,   MPI_Scatter(myVectorSlice, myVectorSliceSize, MPI_DOUBLE, myVectorSlice, myVectorSliceSize, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (36 2,   MPI_Barrier(MPI_COMM_WORLD);) (36 0,  MPI_Wtime();) (49 1,   MPI_Reduce(&localSum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (49 2,   MPI_Barrier(MPI_COMM_WORLD);) (49 0,  MPI_Wtime();) (73 1,   MPI_Finalize();)", "label": " (35 1,   MPI_Init(&argc, &argv);) (35 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (35 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (61 1,   MPI_Allreduce(&localSum, &sum, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (68 1,   MPI_Reduce(&localCal, &calcu, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (76 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcess);) (23 1,   MPI_Bcast(&numOfIntervals, 1, MPI_LONG_LONG_INT, 0, MPI_COMM_WORLD);) (37 1,   MPI_Reduce(&sumLocal, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcess);) (21 1,   MPI_Reduce(&sumLocal, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ationsBarrier(MPI_COMM_WORLD);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &globalArray);) (10 0,  MPI_Wtime();) (11 0,  MPI_Wtime();) (12 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (10 0,  MPI_Wtime();) (11 0,  MPI_Wtime();) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andMPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(floatsToSend, 2, MPI_DOUBLE, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(floatsReceived, 2, MPI_DOUBLE, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(doublesToSend, 2, MPI_DOUBLE, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(doublesReceived, 2, MPI_DOUBLE, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_processor);) (35 1,       MPI_Recv(&delta, 1, MPI_DOUBLE, i, tag, MPI_COMM_WORLD, &status);) (48 1,     MPI_Send(&converged, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)             MPI_Send(&converged, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_processor);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 1,     MPI_Reduce(&y_rank_now, &y_now, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (41 1,     MPI_Bcast(&converged, 1, MPI_INT, 0, MPI_COMM_WORLD);) (45 1,   MPI_Barrier(MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &type);) (15 1,     MPI_Type_contiguous(1, MPI_INT, old_ty);) (15 2,     MPI_Type_commit(&type);) (15 3,     MPI_Type_free(&type);) (16 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (15 1,     MPI_Type_vector(2, 3, 4, old_ty, &type);) (15 2,     MPI_Type_commit(&type);) (15 3,     MPI_Type_free(&type);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (37 1,   MPI_Scatter(image_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 2,   MPI_Scatter(sub_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 3,   MPI_Gather(sub_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 4,   MPI_Scatter(sub_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 5,   MPI_Gather(sub_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 6,   MPI_Scatter(sub_data, sub_data_length, MPI_UNSIGNED_LONG, sub_data, sub_data_length, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (37 7,   MPI_", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 1,   MPI_Scatter(image_data, sub_data_length, MPI_UNSIGNED, sub_image_data, sub_data_length, MPI_UNSIGNED, root, MPI_COMM_WORLD);) (30 1,   MPI_Reduce(sub_histogram, histogram, (255 * 3) + 1, MPI_UNSIGNED_LONG, MPI_SUM, root, MPI_COMM_WORLD);) (31 1,   MPI_Gather(sub_image_data, sub_data_length, MPI_UNSIGNED, image_data, sub_data_length, MPI_UNSIGNED, root, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ThisTask);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &NTask);) (13 1,   MPI_Finalize();)         MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (12 1,   MPI_Init(0, 0);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (8 0,  MPI_Wtime();) (53 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (8 0,  MPI_Wtime();) (52 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = 1;\n26:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 0,  MPI_Wtime();) (13 1,   MPI_Type_vector(dim, 1, dim, MPI_DOUBLE, &MPI_DATA);) (13 2,   MPI_Type_commit(&MPI_DATA);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 1,     MPI_Send(set, 1, MPI_DATA, 1, 0, MPI_COMM_WORLD);) (17 1,     MPI_Recv(set, 1, MPI_DATA, 0, 0, MPI_COMM_WORLD, &status);) (17 2,   MPI_Type_free(&MPI_DATA);) (17 3,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 0,  MPI_Wtime();) (15 1,     MPI_Send(set, dim, MPI_DATA, 1, 0, MPI_COMM_WORLD);) (18 1,     MPI_Recv(set, dim, MPI_DATA, 0, 0, MPI_COMM_WORLD, &status);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, size);) (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (29 1,       MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (29 2,       MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (33 1,         MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (33 2,         MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (34 1,         MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (34 2,         MPI_Win_create(A, N * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (35 1,       MPI_Win_fence(0, win);) (36 1,       MPI_Get(A, N, MPI_INT, 1, tag1, N, N, MPI_INT, win);) (36 2,     MPI_Win_fence(0, win);) (38 1,     MPI_Win_fence(0, win);", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (21 1,     MPI_Win_allocate((sizeof(double)) * N, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &A, &win);) (28 1,       MPI_Win_fence(0, win);) (30 1,         MPI_Get(A, N, MPI_DOUBLE, 1, 0, N, MPI_DOUBLE, win);) (34 1,         MPI_Get(A, N, MPI_DOUBLE, 0, 0, N, MPI_DOUBLE, win);) (35 1,       MPI_Win_fence(0, win);) (40 0,  MPI_Wtime();) (42 1,       MPI_Win_fence(0, win);) (44 1,         MPI_Get(A, N, MPI_DOUBLE, 1, 0, N, MPI_DOUBLE, win);) (48 1,         MPI_Get(A, N, MPI_DOUBLE, 0, 0, N, MPI_DOUBLE, win);) (49 1,       MPI_Win_fence(0, win);) (51 0,  MPI_Wtime();) (58 1,     MPI_Win_free(&win);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18 1,   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (28 1,     MPI_Bcast(&sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 2,     MPI_Bcast(&count, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 3,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 1,     MPI_Reduce(&my_sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (44 2,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 3,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,     MPI_Reduce(&my_sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (47 2,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 3,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 4,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 5,     MPI_Bcast(&my_sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 6,     MPI_Bcast(&my_sum, 1", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (26 1,   MPI_Bcast(&count, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Bcast(ids, count, MPI_INT, 0, MPI_COMM_WORLD);) (26 3,   MPI_Bcast(grades, count, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,       MPI_Send(&myFirstIdx, 1, MPI_INT, dest, tag, MPI_COMM_WORLD);) (40 2,       MPI_Send(&myLastIdx, 1, MPI_INT, dest, tag, MPI_COMM_WORLD);) (47 1,     MPI_Recv(&myFirstIdx, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (47 2,     MPI_Recv(&myLastIdx, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (61 1,   MPI_Reduce(&my_sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (65 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 0,  MPI_Wtime();) (11 1,   MPI_Bcast(&data, 1, MPI_INT, 0, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (8 0,  MPI_Wtime();) (8 1,   MPI_Bcast(&data, 1, MPI_INT, 0, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_type_3D(3, MPI_COMM_WORLD, &size);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,         MPI_Ssend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);) (21 1,         MPI_Recv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (44 1,   MPI_Finalize();)             MPI_Irecv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, &request);)       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Status_free(&request);)       MPI_Finalize();)             MPI_Ssend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);)             MPI_Recv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Wait(&request, MPI_STATUS_IGNORE);)         MPI_Status_free(&request);)       MPI_Finalize();)         MPI_Ssend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Rsend_init(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD, &request);) (22 1,         MPI_Barrier(MPI_COMM_WORLD);) (24 1,         MPI_Start(&request);) (24 2,         MPI_Wait(&request, MPI_STATUS_IGNORE);) (35 1,         MPI_Irecv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, &request);) (36 1,         MPI_Barrier(MPI_COMM_WORLD);) (36 2,         MPI_Wait(&request, MPI_STATUS_IGNORE);) (44 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada6(my_rank, MPI_COMM_WORLD, resultado);) (13 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (35 1,       MPI_Send(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD);) (35 2,       MPI_Send(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD);) (35 3,       MPI_Send(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD);) (35 4,       MPI_Send(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD);) (40 1,       MPI_Recv(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 2,       MPI_Recv(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 3,       MPI_Recv(&suma, 1, MPI_INT, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,     MPI_Reduce(&suma, &resultado, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (50 2,     MPI_Reduce(&suma, &resultado, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (50 3,     MPI_Reduce(&suma, &resultado, 1, MPI_INT, MPI_SUM, 0, MPI_COM", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (34 1,         MPI_Send(&recorrido, 1, MPI_INT, q, 0, MPI_COMM_WORLD);) (34 2,         MPI_Send(&arreglo_enteros[recorrido], tamanioDePedazos, MPI_INT, q, 0, MPI_COMM_WORLD);) (37 1,       MPI_Reduce(&suma, &resultado, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (42 1,       MPI_Recv(&recorrido, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (42 2,       MPI_Recv(&arreglo_enteros[recorrido], tamanioDePedazos, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (48 1,       MPI_Reduce(&suma, &resultado, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &npr);) (12 1,     MPI_Type_vector(10 / 4, 1, 10, MPI_INT, &A[0][0]);) (12 2,     MPI_Type_commit(&A[0]);) (17 1,     MPI_Type_create_resized(A[0], 0, 10 * (sizeof(int)), &T[0]);) (17 2,     MPI_Type_commit(&T[0]);) (18 1,     MPI_Type_create_indexed_block(10 / 4, 1, 14, (MPI_Datatype) ((void *) (&ompi_mpi_real)), &info);) (18 2,     MPI_Type_commit(&info);) (22 1,     MPI_Send(A, 1, info, 1, 123, MPI_COMM_WORLD);) (23 1,     MPI_Recv(B, 1, info, 0, 123, MPI_COMM_WORLD, &info);) (27 1,     MPI_Type_free(&info);) (29 1,     MPI_Type_free(&info);) (29 2,     MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &npr);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (16 1,     MPI_Type_create_struct(3, blocklen, disp, type, &Particletype);) (16 2,     MPI_Type_commit(&Particletype);) (16 3,     MPI_Send(&particle, 1, Particletype, 1, 0, MPI_COMM_WORLD);) (20 1,     MPI_Recv(&particle, 1, Particletype, 0, 0, MPI_COMM_WORLD, &status);) (21 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (14 1,   MPI_Type_create_struct(3, blocklen, disp, type, &Particletype);) (14 2,   MPI_Type_commit(&Particletype);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (16 1,     MPI_Send(particle, 1000, Particletype, 1, 123, MPI_COMM_WORLD);) (20 1,     MPI_Recv(particle, 1000, Particletype, 0, 123, MPI_COMM_WORLD, &status);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_diff(&data, &world_size, MPI_INT, 1, MPI_COMM_WORLD);) (8 0,  MPI_Wtime();) (13 0,  MPI_Wtime();) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 0,  MPI_Wtime();) (18 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 0,  MPI_Wtime();) (24 1,       MPI_Isend(&data[i * 200], 200, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (26 1,       MPI_Irecv(&mlocal, 200, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (26 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (33 0,", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 0,  MPI_Wtime();) (24 1,       MPI_Isend(data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (24 2,       MPI_Irecv(data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &request);) (24 0,  MPI_Wtime();) (31 1,     MPI_Buffer_attach(data, 600);) (33 1,       MPI_Irecv(data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &request);) (33 2,       MPI_Isend(data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4: {\n8:   int size;\n9:   int rank;\n10:   int i;\n11:   int count;\n12:   int root = 0;\n13:   int res;\n14:   MPI_Status status;\n15:   MPI_Datatype mpi_res;\n16:   int res_res;\n17:   int res_rank;\n18:   double res_time;\n19:   double res_time_mpi;\n20:   double res_time_mpi_recv;\n21:   double res_time_mpi_recv;\n22:   double mpi_res_time;\n23:   double mpi_res_time;\n24:   double mpi_res_time;\n25:   double mpi_res_time_mpi;\n26:   double mpi_res_time_mpi_recv;\n27:   double mpi_res_time_mpi_recv;\n28:   double mpi_res_time_mpi_recv;\n29:   double mpi_res_time_mpi_recv;\n30:   double mpi_res_time_mpi_recv;\n31:   double mpi_res_time_mpi_recv;\n32:   double mpi_res_time_mpi_recv;\n33:   double mpi_res_time_mpi_recv;\n34:   mpi_res =\n35:   mpi_res =\n36:   mpi_res =\n37:   mpi_res =\n38:   mpi_res =\n39:   mpi_res =\n40:   mpi_res_time_mpi = mpi_res_time_mpi_recv;\n41:   mpi_res_time_mpi_recv = mpi_res_time_mpi_recv;\n42:   mpi_res_time_mpi_recv = mpi_res_time_mpi_recv;", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 1,   MPI_File_close(&handle);) (15 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 0,  MPI_Wtime();) (20 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (27 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (30 0,  MPI_Wtime();) (32 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (33 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (50 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 0,  MPI_Wtime();) (20 1,       MPI_Bcast(board, 9, MPI_INT, 0, MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arct(0, 0, MPI_COMM_WORLD);) (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (43 1,         MPI_min(&min, &max, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (43 2,         MPI_max(&min, &max, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (43 3,         MPI_min(&min, &min, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (52 1,       MPI_min(&max, &max, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (52 2,       MPI_max(&max, &min, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (52 3,       MPI_min(&min, &max, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (52 4,       MPI_max(&max, &min, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (55 1,     MPI_Reduce(&pixel_value, &output_array[y][x], (width - 1) * height, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (83 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &size);) (36 1,   MPI_Bcast(*input_array, 128 * 128, MPI_CHAR, 0, MPI_COMM_WORLD);) (54 1,   MPI_Reduce(&min, &g_min, 1, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (54 2,   MPI_Reduce(&max, &g_max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (58 1,   MPI_Barrier(MPI_COMM_WORLD);) (82 1,   MPI_Barrier(MPI_COMM_WORLD);) (82 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,   MPI_Win_create(B, 200 * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (16 2,   MPI_Win_fence(0, win);) (16 3,   MPI_Put(A, 200, MPI_INT, 1, 0, 200, MPI_INT, win);) (16 4,   MPI_Win_fence(0, win);) (16 5,   MPI_Win_fence(0, win);) (16 6,   MPI_Win_fence(0, win);) (16 7,   MPI_Win_free(&win);) (17 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,     MPI_Win_create(0, 0, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (23 1,       MPI_Win_lock(2, 1, 0, win);) (23 2,       MPI_Put(A + i, 1, MPI_INT, 1, i, 1, MPI_INT, win);) (23 3,       MPI_Win_unlock(1, win);) (27 1,       MPI_Win_lock(2, 1, 0, win);) (27 2,       MPI_Get(B + i, 1, MPI_INT, 1, 100 + i, 1, MPI_INT, win);) (27 3,       MPI_Win_unlock(1, win);) (29 1,     MPI_Win_free(&win);) (43 1,     MPI_Win_create(B, 200 * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (43 2,     MPI_Win_free(&win);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Finalize();) (17 1,     MPI_Sendrecv(buf1, 128, MPI_INT, 1, 0, buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (17 2,     MPI_Sendrecv(buf0, 128, MPI_INT, 2, 0, buf1, 128, MPI_INT, 2, 0, MPI_COMM_WORLD, &status);) (22 1,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (22 2,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (27 1,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (27 2,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 2,   MPI_Finalize();", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 1,     MPI_Recv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (17 2,     MPI_Send(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (17 3,     MPI_Recv(buf0, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (22 1,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 2,     MPI_Recv(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (27 1,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (32 1,     MPI_Irecv(&row_sum[0][0], count, MPI_INT, 1, 124, MPI_COMM_WORLD, &req_s);) (32 2,     MPI_Wait(&req_s, &status);) (54 1,       MPI_Isend(&row_sum[i][0], count, MPI_INT, i, 124, MPI_COMM_WORLD, &req_s);) (54 2,       MPI_Wait(&req_s, &status);) (54 3,       MPI_Isend(&row_sum[i][0], count, MPI_INT, i, 125, MPI_COMM_WORLD, &req_s);) (54 4,       MPI_Wait(&req_s, &status);) (57 1,         MPI_Irecv(&row_sum[i][0], count, MPI_INT, i, 125, MPI_COMM_WORLD, &req_r);) (57 2,         MPI_Wait(&req_r, &status);) (72 1,", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (26 1,     MPI_Isend(data, 5000, MPI_INT, 1, mtag, MPI_COMM_WORLD, &req_s);) (39 1,     MPI_Wait(&req_s, &status);) (40 1,     MPI_Recv(row_sum, 50, MPI_INT, 1, mtag, MPI_COMM_WORLD, &status);) (51 1,     MPI_Irecv(data, 5000, MPI_INT, 0, mtag, MPI_COMM_WORLD, &req_r);) (51 2,     MPI_Wait(&req_r, &status);) (72 1,     MPI_Isend(row_sum, 50, MPI_INT, 0, mtag, MPI_COMM_WORLD, &req_s);) (72 2,     MPI_Wait(&req_s, &status);) (73 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &total_procs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &this_proc);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &total_procs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &this_proc);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 0,  MPI_Init(&argc, &argv);) (18 0,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 0,  MPI_Recv(&sum, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 0,  MPI_Recv(arr, 64, MPI_INT, 2, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 0,  MPI_Recv(arr, 64, MPI_INT, 3, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 0,  MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (33 0,  MPI_Send(arr, 64, MPI_INT, 0, 0, MPI_COMM_WORLD);) (42 0,  MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (42 0,  MPI_Send(arr, 64, MPI_INT, 0, 0, MPI_COMM_WORLD);) (54 0,  MPI_Recv(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 0,  MPI_Recv(arr, 64, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 0,  MPI_Recv(arr, 64, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 0,  MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (58 0,  MPI_Finalize();)     ier", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 0,  MPI_Send(&arr, 64, MPI_INT, 1, 69, MPI_COMM_WORLD);) (23 0,  MPI_Send(&arr, 64, MPI_INT, 2, 69, MPI_COMM_WORLD);) (28 0,  MPI_Send(&arr, 64, MPI_INT, 3, 69, MPI_COMM_WORLD);) (41 0,  MPI_Recv(&arr, 64, MPI_INT, 0, 69, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 0,  MPI_Recv(&arr, 64, MPI_INT, 0, 69, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (66 0,  MPI_Recv(&arr, 64, MPI_INT, 0, 69, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (75 1,   MPI_Reduce(&sum, &total_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (77 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, size);) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Send(&outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (21 1,     MPI_Recv(&inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (22 1,     MPI_Send(&outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (23 1,   MPI_Get_count(&Stat, MPI_CHAR, &count);) (26 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Send(&outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (22 1,     MPI_Recv(&inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (24 1,     MPI_Send(&outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (25 1,   MPI_Get_count(&Stat, MPI_CHAR, &count);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (23 1,     MPI_Bcast(&p[0][0], ROW_TAG, MPI_COMM_WORLD);) (23 2,     MPI_Bcast(&p[1][0], ROW_TAG, MPI_COMM_WORLD);) (23 3,     MPI_Bcast(&p[2][0], ROW_TAG, MPI_COMM_WORLD);) (23 4,     MPI_Bcast(&p[3][0], ROW_TAG, MPI_COMM_WORLD);) (23 5,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 6,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 7,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 8,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 9,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 10,     MPI_Bcast(p, ROW_TAG, MPI_COMM_WORLD);) (23 11,     MPI_Bcast(p, ROW_TAG", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 1,       MPI_Send(times_table[rank], size, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), partner, ROW_TAG, MPI_COMM_WORLD);) (31 1,     MPI_Recv(times_table[partner], size, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), partner, ROW_TAG, MPI_COMM_WORLD, &status);) (33 1,       MPI_Send(times_table[rank], size, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), partner, ROW_TAG, MPI_COMM_WORLD);) (42 1,   MPI_Gather(&grade, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), grades, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), ROOT, MPI_COMM_WORLD);) (54 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>icaoMPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (10 1,     MPI_Bcast(&buf, count, MPI_INT, root, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 0,  MPI_Wtime();) (17 1,   MPI_Scatter(initial_array, 30000, MPI_INT, local_array, 30000, MPI_INT, 0, MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (24 1,   MPI_Reduce(&start, &sorted_array[0], 30000 * 4, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (27 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,   MPI_Bcast(initial_array, 30000, MPI_INT, 0, MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (27 1,   MPI_Reduce(initial_array, sorted_array, 30000, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Issend(&to_send, 1, MPI_INT, vois, 1000, MPI_COMM_WORLD, &req[0]);) (11 2,     MPI_Recv(&to_recv, 1, MPI_INT, vois, 1000, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 3,     MPI_Waitall(2, req, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Issend(&to_send, 1, MPI_INT, vois, 1000, MPI_COMM_WORLD, req + 0);) (11 2,     MPI_Irecv(&to_recv, 1, MPI_INT, vois, 1000, MPI_COMM_WORLD, req + 1);) (11 3,     MPI_Waitall(2, req, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (14 1,     MPI_Win_create(&value_fetched, sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (15 1,     MPI_Group_incl(world_group, 1, &incl, &new_group);) (16 1,     MPI_Win_start(new_group, 0, win);) (17 1,       MPI_Put(&value_fetched, 1, MPI_INT, 1, 0, 1, MPI_INT, win);) (18 1,     MPI_Win_complete(win);) (18 0,  MPI_Wtime();) (21 1,       MP", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 0,  MPI_Wtime();) (18 1,     MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&message, 1, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 0,  MPI_Wtime();) (27 1,       MPI_Send(&message, 1, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (24 1,   MPI_Scatterv(data, sendcounts, displs, MPI_INT, local_data, sendcounts[world_rank], MPI_INT, 0, MPI_COMM_WORLD);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 3,   MPI_Bcast(&local_data, 1, MPI_INT, 0, MPI_COMM_WORLD);) (24 4,   MPI_Barrier(MPI_COMM_WORLD);) (24 5,   MPI_Scatterv(data, sendcounts, displs, MPI_INT, local_data, sendcounts[world_rank], MPI_INT, 0, MPI_COMM_WORLD);) (24 6,   MPI_Barrier(MPI_COMM_WORLD);) (24 7,   MPI_Gatherv(local_data, sendcounts[world_rank], MPI_INT, data, sendcounts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (24 8,   MPI_Barrier(MPI_COMM_WORLD);) (24 9,   MPI_", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (55 1,   MPI_Scatterv(data, sendcounts, displs, MPI_INT, local_data, localnum, MPI_INT, 0, MPI_COMM_WORLD);) (90 1,   MPI_Reduce(&local_A_cnt, &A_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (90 2,   MPI_Reduce(&local_B_cnt, &B_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (90 3,   MPI_Reduce(&local_C_cnt, &C_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (90 4,   MPI_Reduce(&local_D_cnt, &D_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (90 5,   MPI_Reduce(&local_F_cnt, &F_cnt, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (15 4,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 5,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 6,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 7,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 8,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 9,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 10,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 11,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (sizeof(char)), MPI_CHAR, 0, MPI_COMM_WORLD);) (15 12,   MPI_Bcast(&matrix[0][0], (mySize * numProcs) * (size", "label": " (28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (28 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 0,  MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (31 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 1, &myComm);) (31 2,   MPI_Comm_rank(myComm, &myComm_rank);) (31 3,   MPI_Cart_coords(myComm, myComm_rank, 2, coords);) (36 1,   MPI_Cart_shift(myComm, 0, 1, &source, &dest);) (36 2,   MPI_Cart_shift(myComm, 1, 1, &source, &dest);) (36 3,   MPI_Cart_shift(myComm, 2, -1, &source, &dest);) (36 4,   MPI_Cart_shift(myComm, 3, -1, &source, &dest);) (36 5,   MPI_Cart_shift(myComm, 4, -1, &source, &dest);) (36 6,   MPI_Cart_shift(myComm, 5, -", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 0,  MPI_Wtime();) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (17 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &myComm);) (18 1,   MPI_Cart_coords(myComm, ProcRank, 2, coords);) (20 1,   MPI_Cart_sub(myComm, remain_dims, &newComm);) (20 2,   MPI_Comm_size(newComm, &ProcNum);) (20 3,   MPI_Comm_rank(newComm, &ProcRank);) (30 1,   MPI_Scatter(values, N, MPI_INT, res, N, MPI_INT, 0, newComm);) (38 1,  MPI_Wtime() - t);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1", "label": " (34 1,   MPI_Init(&argc, &argv);) (34 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (34 4,   MPI_Barrier(MPI_COMM_WORLD);) (34 0,  MPI_Wtime();) (53 1,     MPI_Finalize();) (61 1,     MPI_Finalize();) (122 1,   MPI_Reduce(&myPrimes, &totalPrimes, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (122 0,  MPI_Wtime();) (127 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,  MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&intToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_int32_t)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&intReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_int32_t)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&intToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_int32_t)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&intReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_int32_t)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,   MPI_Type_contiguous(2, ty, & ty);) (16 2,   MPI_Type_commit(& ty);) (16 3,   MPI_Type_contiguous(3, ty, & ty);) (16 4,   MPI_Type_commit(& ty);) (18 1,     MPI_Send(buf, 1, ty, 1, 0, MPI_COMM_WORLD);) (22 1,     MPI_Recv(buf, 1, ty, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Type_free(& ty);) (23 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,   MPI_Type_contiguous(4, ty, &four_ints);) (16 2,   MPI_Type_commit(&four_ints);) (18 1,     MPI_Send(buf, 1, four_ints, 1, 0, MPI_COMM_WORLD);) (22 1,     MPI_Recv(buf, 1, four_ints, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Type_free(&four_ints);) (23 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,     MPI_Bcast(&alphabet_length, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 2,     MPI_Bcast(&md5_input, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (24 1,   MPI_Bcast(&md5_input, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (24 2,   MPI_Bcast(&md5_input, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (28 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (33 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (39 1,     MPI_Bcast(&alphabet_length, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 2,     MPI_Bcast(&md5_input, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (39 3,     MPI_Bcast(&wanted_length, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 4,     MPI_Bcast(&wanted_length, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 5,     MPI_Bcast(&wanted_length, 1, MPI_INT, 0,", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (16 1,       MPI_Send(&alphabet_length, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (16 2,       MPI_Send(alphabet, alphabet_length, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (16 3,       MPI_Send(&md5_input, 16, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (16 4,       MPI_Send(&wanted_length, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&alphabet_length, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (22 1,     MPI_Recv(alphabet, alphabet_length, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (22 2,     MPI_Recv(&md5_input, 16, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (22 3,     MPI_Recv(&wanted_length, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (52 1,   MPI_Barrier(MPI_COMM_WORLD);) (53 1,   MPI_Barrier(MPI_COMM_WORLD);) (55 1,   MPI_Barrier(MPI_COMM_WORLD);) (63 1,   MPI_Barrier(MPI_COMM_WORLD);) (63 2,   MPI_Allreduce(&key_found_loc, &key_found_reduce, 1, MPI_INT, MPI_MAX, MPI_COMM_WORLD);) (65 1,   MPI_Barrier(MPI_COMM_WORLD);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,       MPI_Finalize();) (19 1,     MPI_Recv(&tmp, 1, MPI_LONG, size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 0,  MPI_Send(&local_sum, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);) (38 0,  MPI_Send(&local_sum, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD);) (48 1,       MPI_Recv(&tmp, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 0,  MPI_Recv(&local_sum, 1, MPI_LONG, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,     MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 0,  MPI_Recv(&tmp, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), -1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 0,  MPI_Send(&local_sum, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD);) (47 0,  MPI_Send(&local_sum, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD);) (49 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (8 0,  MPI_Wtime();) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 1,   MPI_Reduce(&solutions_process, &solutions, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (15 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Barrier(MPI_COMM_WORLD);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 4,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (8 0,  -MPI_Wtime();) (14 1,   MPI_Reduce(&solutions_process, &solutions_total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (2 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_dup(MPI_COMM_WORLD, 0);) (2 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &cntOfProcesses);) (14 0,  MPI_Wtime();) (16 1,   MPI_Scatter(A, N, MPI_DOUBLE, A[rank], N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (16 2,   MPI_Scatter(B, N, MPI_DOUBLE, B[rank], N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (18 1,   MPI_Gather(X, N, MPI_DOUBLE, X, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (18 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &cntOfProcesses);) (14 0,  MPI_Wtime();) (15 1,   MPI_Scatterv(A, sended_size, started_positions, MPI_DOUBLE, aPart, sended_size[rank], MPI_DOUBLE, 0, MPI_COMM_WORLD);) (15 2,   MPI_Bcast(B, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (15 3,   MPI_Bcast(X, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (19 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD,", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 0,  MPI_Send((void *) msg, 10, MPI_CHAR, my_rank + 1, 1, MPI_COMM_WORLD);) (15 0,  MPI_Recv((void *) msg, 10, MPI_CHAR, commsize - 1, 1, MPI_COMM_WORLD, &status);) (26 0,  MPI_Recv((void *) msg, 10, MPI_CHAR, my_rank - 1, 1, MPI_COMM_WORLD, &status);) (36 0,  MPI_Send((void *) msg, 10, MPI_CHAR, 0, 1, MPI_COMM_WORLD);) (45 0,  MPI_Recv((void *) msg, 10, MPI_CHAR, my_rank - 1, 1, MPI_COMM_WORLD, &status);) (55 0,  MPI_Send((void *) msg, 10, MPI_CHAR, my_rank + 1, 1, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (10 1,     MPI_Send(&send, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&receive, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (10 1,     MPI_Send(&send, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&receive, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arsing (50 1,   MPI_Init(&argc, &argv);) (50 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (50 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (54 1,   MPI_Comm_split(MPI_COMM_WORLD, initiator_or_target, rank, &initiator_target_group);) (57 1,   MPI_Comm_size(initiator_group, &size);) (63 1,   MPI_Finalize();)", "label": " (50 1,   MPI_Init(&argc, &argv);) (50 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (53 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (55 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (56 1,   MPI_Comm_split(MPI_COMM_WORLD, initiator_or_target, rank, &initiator_target_group);) (57 1,   MPI_Comm_split(MPI_COMM_WORLD, my_pair, rank, &my_pair_group);) (63 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Finalize();) (17 1,     MPI_Sendrecv(buf0, 128, MPI_INT, 1, 0, buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (17 2,     MPI_Sendrecv(buf1, 128, MPI_INT, 1, 0, buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (23 1,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 2,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 3,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 4,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 5,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 1,     MPI_Recv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (17 2,     MPI_Recv(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (23 1,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 2,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &processId);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcesses);) (31 0,  MPI_Wtime();) (32 1,   MPI_Scatter(buffer, size, MPI_CHAR, localBuffer, size, MPI_CHAR, 0, MPI_COMM_WORLD);) (32 0,  MPI_Wtime();) (52 1,   MPI_Reduce(&localMaxArraySize, &lastLocalSize, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (52 2,   MPI_Reduce(&localBuffer, &lastBuffer, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (53 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &processId);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcesses);) (31 1,   MPI_Bcast(&size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (31 0,  MPI_Wtime();) (34 1,   MPI_Scatter(buffer, localMaxArraySize, MPI_CHAR, localBuffer, localMaxArraySize, MPI_CHAR, 0, MPI_COMM_WORLD);) (39 1,   MPI_Gather(localBuffer, localMaxArraySize, MPI_CHAR, operatedBuffer, localMaxArraySize, MPI_CHAR, 0, MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (14 1,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &buf);) (21 1,       MPIX_Irsend_x(buf, n, MPI_CHAR, 0, r, MPI_COMM_WORLD, &req);) (25 1,       MPIX_Irecv_x(buf, n, MPI_CHAR, r, r, MPI_COMM_WORLD, &req);) (28 1,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (39 1,   MPI_Free_mem(buf);) (43 1,   MPI_Finalize();)         MPI_Error_class(rc, &err);) (43 2,   MPI_Finalize();)         MPI_Error_string(rc, buf, &len);) (43 3,   MPI_Finalize();)         MPI_Error_string(rc, buf, &len);) (47 1,   MPI_Free_mem(buf);) (47 2,   MPI_Free_mem(buf);) (47 3,   MPI_Finalize();)       MPI_Error_class(rc, &err);) (47 4,   MPI_Finalize();)         MPI_Error_string(rc, buf, &len);) (47 5,   MPI_Finalize();)       MPI_Error_string", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (14 1,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &buf);) (21 1,       MPIX_Issend_x(buf, n, MPI_CHAR, 0, r, MPI_COMM_WORLD, &req);) (25 1,       MPIX_Irecv_x(buf, n, MPI_CHAR, r, r, MPI_COMM_WORLD, &req);) (28 1,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (39 1,   MPI_Free_mem(buf);) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_3d_Init(&argc, &argv);) (24 1,   MPI_Type_contiguous(2, MPI_DOUBLE, &columna);) (24 2,   MPI_Type_commit(&columna);) (38 1,   MPI_Type_contiguous(M, MPI_DOUBLE, &columna_resized);) (38 2,   MPI_Type_commit(&columna_resized);) (44 1,   MPI_Type_free(&columna);) (44 2,   MPI_Type_free(&columna_sol);) (44 3,   MPI_Type_free(&columna_resized);) (58 1,   MPI_Finalize();)       MPI_Type_free(&columna);)     MPI_Type_free(&columna_sol_resized);)     MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_sol_resized);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);)       MPI_Type_free(&columna_resized_matrix);) (60 1,   MPI_Finalize();)       MPI_Type_free", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (38 1,   MPI_Type_vector(N + 2, 1, ld, MPI_DOUBLE, &columna);) (38 2,   MPI_Type_commit(&columna);) (40 1,   MPI_Type_create_resized(columna, 0, sizeof(double), &columna_resized);) (40 2,   MPI_Type_commit(&columna_resized);) (41 1,   MPI_Type_vector(N + 2, 1, M, MPI_DOUBLE, &columna_sol);) (41 2,   MPI_Type_commit(&columna_sol);) (42 1,   MPI_Type_create_resized(columna_sol, 0, sizeof(double), &columna_sol_resized);) (42 2,   MPI_Type_commit(&columna_sol_resized);) (43 1,   MPI_Gather(&x[(0 * ld) + 1], m, columna_resized, sol, m, columna_sol_resized, 0, MPI_COMM_WORLD);) (57 1,   MPI_Type_free(&columna);) (57 2,   MPI_Type_free(&columna_resized);) (57 3,   MPI_Type_free(&columna_sol);) (57 4,   MPI_Type_free(&columna_sol_resized);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,       MPI_Send(&x, 1, MPI_DOUBLE, sender, 0, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&x, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 0,  MPI_Wtime();) (33 1,     MPI_Send(&local_cos, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (41 1,       MPI_Recv(&local_cos, 1, MPI_DOUBLE, sender, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI", "label": " (15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,       MPI_Send(&n, 1, MPI_INT, dist, 0, MPI_COMM_WORLD);) (24 2,       MPI_Send(&x, 1, MPI_INT, dist, 0, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&n, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 2,     MPI_Recv(&x, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 0,  MPI_Wtime();) (39 1,       MPI_Recv(&local_cos, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), sender, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (49 1,     MPI_Send(&local_cos, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 1,   MPI_Scatter(data, 3, MPI_INT, &size, MPI_INT, 0, MPI_COMM_WORLD);) (37 1,   MPI_Gather(result, 3, MPI_INT, data, 3, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,   MPI_Finalize();)             MPI_Finalize", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(0, &rank);) (4 2,   MPI_Comm_size(0, &size);) (9 1,       MPI_Send(data, 3, 2, rank + 1, 123, 0);) (14 1,       MPI_Recv(data, 3, 2, rank - 1, 123, 0, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Get_processor_name(processor_name, &namelen);) (7 5,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (7 6,   MPI_Type_commit(&newtype);) (7 7,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (7 8,   MPI_Type_commit(&newtype);) (7 9,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (7 10,   MPI_Type_commit(&newtype);) (7 11,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (7 12,   MPI_Type_commit(&newtype);) (7 13,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (7 14,   MPI_Type_commit(&newtype);) (7 15,   MPI_Type_free(&newtype);) (7 16,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Get_processor_name(processor_name, &namelen);) (8 1,   MPI_Barrier(MPI_COMM_WORLD);) (8 2,   MPI_Type_contiguous(128, MPI_INT, &newtype);) (8 3,   MPI_Type_commit(&newtype);) (8 4,   MPI_Barrier(MPI_COMM_WORLD);) (8 5,   MPI_Type_free(&newtype);) (8 6,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &N);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ole_and_run_test(my_running_config.base_communicator, 0);) (3 1,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 2,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 3,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 4,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 5,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 6,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 7,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 8,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 9,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 10,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 11,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 12,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 13,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 14,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 15,   MPIDYNRES_SIM_start(my_running_config.base_communicator, 0);) (3 16,   MPIDYNRES_SIM_stop(my_running_config.base_communicator, 0);) (3 17,   MPIDYNRES_SIM_start(my_running_config.base_communicator,", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPIDYNRES_SIM_start(my_running_config, argc, argv, MPIDYNRES_main);) (3 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 5,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,     MPI_Irecv(buf0, buf_size, MPI_INT, -1, 0, MPI_COMM_WORLD, &req);) (19 2,     MPI_Send(buf0, buf_size, MPI_INT, 1, 0, MPI_COMM_WORLD);) (19 3,     MPI_Wait(&req, &status);) (23 1,     MPI_Irecv(buf0, buf_size, MPI_INT, -1, 0, MPI_COMM_WORLD, &req);) (23 2,     MPI_Send(buf0, buf_size, MPI_INT, 2, 0, MPI_COMM_WORLD);) (23 3,     MPI_Wait(&req, &status);) (23 4,     MPI_Send(buf0, buf_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 5,     MPI_Wait(&req, &status);) (23 6,     MPI_Send(buf0, buf_size, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 7,     MPI_Wait(&req, &status);) (23 8,     MPI_Send(buf0, buf_size, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 9,     MP", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Get_processor_name(processor_name, &namelen);) (15 1,     MPI_Finalize();) (19 1,     MPI_Recv(&buf0, buf_size, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (19 2,     MPI_Send(&buf0, buf_size, MPI_INT, 3, 0, MPI_COMM_WORLD);) (19 3,     MPI_Recv(&buf0, buf_size, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (24 1,     MPI_Send(&buf0, buf_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (24 2,     MPI_Send(&buf0, buf_size, MPI_INT, 3, 0, MPI_COMM_WORLD);) (28 1,     MPI_Recv(&buf0, buf_size, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (28 2,     MPI_Send(&buf0, buf_size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 1,     MPI_Recv(&buf0, buf_size, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (32 2,     MPI_Recv(&buf0, buf_size, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (36 1,     MPI_Send(&buf0, buf_size, MPI_INT, 2, 0, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica4qsort(0, 0, sizeof(char), \"\");) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (54 1,   MPI_Bcast(seq1, 3000, MPI_CHAR, 0, MPI_COMM_WORLD);) (54 2,   MPI_Bcast(seq2, 3000, MPI_CHAR, 0, MPI_COMM_WORLD);) (85 1,   MPI_Gather(results, 4, MPI_CHAR, results, 4, MPI_CHAR, 0, MPI_COMM_WORLD);) (85 2,   MPI_Finalize();)", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,     MPI_Abort(MPI_COMM_WORLD, 32);) (25 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (41 1,       MPI_Send(w, 4, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (41 2,       MPI_Send(seq1, 3000, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (41 3,       MPI_Send(seq2, 2000, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (47 1,       MPI_Recv(answer, 70, MPI_CHAR, i, 1, MPI_COMM_WORLD, &status);) (56 1,       MPI_Abort(MPI_COMM_WORLD, 71);) (56 2,     MPI_Recv(w, 4, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &status);) (56 3,     MPI_Recv(seq1, 3000, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status);) (56 4,     MPI_Recv(seq2, 2000, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status);) (62 1,       MPI_Abort(MPI_COMM_WORLD, 85);) (85 1,     MPI_Send(answer, 70, MPI_CHAR, 0, 1, MPI_COMM_WORLD);) (86 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_size(comm, &np);) (17 2,   MPI_Comm_rank(comm, &me);) (22 1,     MPI_Bcast(&n, 1, MPI_INT, 0, comm);) (22 2,     MPI_Bcast(&n, 1, MPI_INT, 0, comm);) (22 3,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 4,     MPI_Bcast(&n, 1, MPI_INT, 0, comm);) (22 5,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 6,     MPI_Bcast(&n, 1, MPI_INT, 0, comm);) (22 7,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 8,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 9,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 10,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 11,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 12,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 13,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 14,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0, comm);) (22 15,     MPI_Bcast(&pia, 1, MPI_DOUBLE, 0", "label": " (16 1,   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_size(comm, &np);) (17 2,   MPI_Comm_rank(comm, &me);) (26 1,       MPI_Send(&n, 1, MPI_INT, ip, 0, comm);) (30 1,     MPI_Recv(&n, 1, MPI_INT, 0, 0, comm, MPI_STATUS_IGNORE);) (42 1,     MPI_Send(&pial, 1, MPI_DOUBLE, 0, 0, comm);) (48 1,       MPI_Recv(&pial, 1, MPI_DOUBLE, ip, 0, comm, MPI_STATUS_IGNORE);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_init_success(0, 0);) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Get_processor_name(processor_name, &namelen);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 2,   MPI_Irecv(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[0]);) (12 3,   MPI_Irecv(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[1]);) (12 4,   MPI_Waitall(2, reqs, status);) (12 5,   MPI_Barrier(MPI_COMM_WORLD);) (12 6,   MPI_Send(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD);) (12 7,   MPI_Barrier(MPI_COMM_WORLD);) (12 8,   MPI_Send(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 9,   MPI_Waitall(2, reqs, status);) (12 10,   MPI_Barrier(MPI_COMM_WORLD);) (12 11,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Get_processor_name(processor_name, &namelen);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,     MPI_Irecv(buf0, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &reqs[0]);) (19 2,     MPI_Irecv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &reqs[1]);) (19 3,     MPI_Waitany(2, reqs, &done, &status);) (19 4,     MPI_Send(buf1, 128, MPI_INT, 1, 1, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf1, 128, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (24 2,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (25 1,   MPI_Barrier(MPI_COMM_WORLD);) (25 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>, \"MPI_Init\\n\");) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &n_proc);) (10 1,   MPI_Sendrecv(rank, 65536, MPI_INT, left, 0, &buf[0], 65536, MPI_INT, right, 0, MPI_COMM_WORLD, &stat);) (10 2,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &n_proc);) (10 1,   MPI_Send(buf, 65536, MPI_INT, right, 0, MPI_COMM_WORLD);) (10 2,   MPI_Recv(buf, 65536, MPI_INT, left, 0, MPI_COMM_WORLD, &stat);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(dataRecv, dataRecvRecv, M, size, rank, rankRecv);) (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (30 0,  MPI_Wtime();) (39 1,         MPI_Send(data + ((j * K) + i), M, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD);) (43 1,         MPI_Recv(data + ((j * K) + i), M, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (45 1,       MPI_Send(data + ((j * K) + i), M, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD);) (47 1,       MPI_Recv(data + ((j * K) + i), M, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (48 1,       MPI_Send(data + ((j * K) + i), M, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD);) (53 1,       MPI_Recv(data + ((j * K) + i), M, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (56 1,       MPI_Send(data + ((j * K) + i), M, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD);)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (35 0,  MPI_Wtime();) (43 1,         MPI_Send(&data[((cnt - 1) * K) + i], 1, MPI_DOUBLE, 1, i, MPI_COMM_WORLD);) (45 1,     MPI_Allgatherv(&data[shift * K], cnt * K, MPI_DOUBLE, dataRecv, counts, shifts, MPI_DOUBLE, MPI_COMM_WORLD);) (51 0,  MPI_Wtime();) (59 1,     MPI_Finalize();) (70 1,         MPI_Send(&data[(j * K) + i], 1, MPI_DOUBLE, rank + 1, i, MPI_COMM_WORLD);) (73 1,       MPI_Recv(&data[((shift - 1) * K) + i], 1, MPI_DOUBLE, rank - 1, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (76 1,     MPI_Allgatherv(&data[shift * K], cnt * K, MPI_DOUBLE, dataRecv, counts, shifts, MPI_DOUBLE, MPI_COMM_WORLD);) (76 2,     MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (20 1,     MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,     MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 0,  MPI_Wtime();) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 0,  MPI_Wtime();) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &node);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_barrier(&status);) (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Finalize();) (19 1,       MPI_Send(&buf[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (19 2,       MPI_Recv(&buf[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (19 3,       MPI_Recv(&buf[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (25 1,     MPI_Recv(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (25 2,     MPI_Send(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)         MPI_Send(&buf[i], 1, MPI_INT, 0, 0, MPI_COMM_WORLD);)       MPI_Recv(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (26 2,     MPI_Send(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);)     MPI_Recv(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (26 3,     MPI_Send(buf, 128, MPI_INT, 0, 0,", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,       MPI_Recv(buf, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (25 1,     MPI_Send(buf, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &count);) (21 1,   MPI_File_open(MPI_COMM_WORLD, \"output.dat\", 1 | 4, MPI_INFO_NULL, &fh);) (21 2,   MPI_File_write_at(fh, 0, &n, 1, MPI_INT, &status);) (21 3,   MPI_Get_count(&status, MPI_INT, &count);) (28 1,   MPI_File_close(&fh);) (28 2,   MPI_Allreduce(&errs, &toterrs, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (33 1,   MPI_File_open(MPI_COMM_WORLD, \"output.dat\", 2, MPI_INFO_NULL, &fh);) (33 2,   MPI_File_read_at(fh, 0, &n, 1, MPI_INT, &status);) (33 3,   MPI_Get_count(&status, MPI_INT, &count);) (42 1,   MPI_File_close(&fh);) (42 2,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 1,   MPI_File_open(MPI_COMM_WORLD, argv[1], 1 | 8, MPI_INFO_NULL, &fh);) (15 2,   MPI_File_set_errhandler(fh, MPI_ERRORS_ARE_FATAL);) (22 1,     MPI_File_write(fh, buffer, 10 - 5, MPI_CHAR, &status);) (28 1,   MPI_File_sync(fh);) (28 2,   MPI_Barrier(MPI_COMM_WORLD);) (28 3,   MPI_File_sync(fh);) (28 4,   MPI_File_seek(fh, 0, 600);) (28 5,   MPI_File_read_all(fh, buffer, 10, MPI_BYTE, &status);) (28 6,   MPI_Get_count(&status, MPI_CHAR, &count);) (42 1,   MPI_Allreduce(&errs, &toterrs, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (53 1,   MPI_File_close(&fh);) (53 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(ptr, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &req);) (13 1,     MPI_Wait(&req, &stat);) (13 2,     MPI_Wait(&req, &stat);) (14 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Type_contiguous(2, MPI_INT, &null_type);) (16 2,   MPI_Type_commit(&null_type);) (16 3,   MPI_Send(buffer, 1, null_type, 1, 124523, MPI_COMM_WORLD);) (16 4,   MPI_Recv(buffer, 1, MPI_INT, 0, 1245", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(buffer, 1000, null_type, 1, 124523, MPI_COMM_WORLD, &req);) (9 2,     MPI_Wait(&req, &stat);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (34 1,   MPI_Bcast(& WORLDSIZE, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 2,   MPI_Bcast(&maxiters, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 1,     MPI_Gather(localcells + curiters, localsize, MPI_INT, mycellworld, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,     MPI_Gather(localcells, localsize, MPI_INT, newcellworld, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (55 1,     MPI_Gather(newcellworld, localsize, MPI_INT, mycellworld, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (56 1,     MPI_Gather(localcells, localsize, MPI_INT, 0, 0, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (59 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (40 1,     MPI_Finalize();) (45 1,     MPI_Finalize();) (58 1,   MPI_Scatter(mycellworld, localsize, MPI_INT, localcells, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (64 1,     MPIRunCellWorld(id, p, localcells, paddedsize, iterstep, rule);) (65 1,     MPI_Gather(localcells, localsize, MPI_INT, newcellworld, localsize, MPI_INT, 0, MPI_COMM_WORLD);) (79 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_tasks(MPI_COMM_WORLD, &comm_size);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (19 1,       MPI_Send(&part_sum, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD);) (22 1,       MPI_Recv(&value, 1, MPI_INT, MPI_ANY_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,     MPI_Recv(&part_sum, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (11 1,     MPI_Send(&part_sum, 1, MPI_INTEGER, my_rank + 1, 0, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&part_sum, 1, MPI_INTEGER, my_rank - 1, 0, MPI_COMM_WORLD, &recv_status);) (19 1,       MPI_Send(&part_sum, 1, MPI_INTEGER, my_rank + 1, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(0, 0);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,     MPI_Scatter(send, 4, MPI_INT, recv, 4, MPI_INT, 0, MPI_COMM_WORLD);) (18 1,     MPI_Scatter(send, 4, MPI_INT, recv, 4, MPI_INT, 0, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,     MPI_Alltoall(&send, 1, MPI_FLOAT, &recv, 1, MPI_INT, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant=1;\n79:   if (myRank == 0)\n80:   {\n81:     for (i = 0; i < (numProcs - 1); i++)\n82:     {\n83:       for (j = 0; j < (numProcs - 1); j++)\n84:       {\n85:         sum = 0;\n86:         for (k = 0; k < matrixSize; ++k)\n87:         {\n88:           sum += aMatrix[i][k] * bMatrix[k][j];\n89:         }\n90: \n91:         cMatrix[i][j] = sum;\n92:       }\n93: \n94:     }\n95: \n96:   }\n97:   else\n98:   {\n99:     for (i = 0; i < (numProcs - 1); i++)\n100:     {\n101:       for (j = 0; j < (numProcs - 1); j++)\n102:       {\n103:         sum = 0;\n104:         for (c = 0; c < matrixSize; ++c)\n105:         {\n106:           sum += aMatrix[i][j] * bMatrix[j][c];\n107:         }\n108: \n109:         cMatrix[i][j] = sum;\n110:       }\n111: \n112:     }\n113: \n114:   }\n115:   free(aMatrix);\n116:   free(bMatrix);\n117:   free(cMatrix);\n118:   free(cMatrix);", "label": " (34 1,   MPI_Init(&argc, &argv);) (34 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (34 0,  MPI_Wtime();) (41 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (57 0,  MPI_Wtime();) (57 0,  MPI_Wtime();) (58 0,  MPI_Wtime();) (59 0,  MPI_Wtime();) (69 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>icaMPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nProcesses);) (21 1,   MPI_Scatter(a, polynomialSize, MPI_FLOAT, &polynomialSize, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&sum, 1, MPI_FLOAT, sum, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (33 1,       MPI_Recv(&sum, 1, MPI_FLOAT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 2,       MPI_Recv(&sum, 1, MPI_FLOAT, i, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 3,       MPI_Recv(&sum, 1, MPI_FLOAT, i, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 4,       MPI_Recv(&sum, 1, MPI_FLOAT, i, 3, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &nProcesses);) (17 1,       MPI_Send(&a[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (20 1,     MPI_Send(&a[0], 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (20 2,     MPI_Send(&x, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (26 1,     MPI_Recv(&val, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 2,     MPI_Recv(&sum, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 3,     MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 1,       MPI_Send(&sum, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (33 2,       MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &wsize);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &pi);) (30 1,     MPI_Bcast(&message, 2, MPI_INT, 0, MPI_COMM_WORLD);) (34 1,       MPI_Send(&msg_temp, 2, MPI_INT, 0, msg_temp, MPI_COMM_WORLD);) (38 1,         MPI_Recv(&msg_temp, 2, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (45 1,           MPI_Send(&msg_temp, 2, MPI_INT, status.MPI_SOURCE, msg_temp, MPI_COMM_WORLD);) (50 1,         MPI_Recv(&msg_temp, 2, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (59 1,       MPI_Send(&msg_temp, 2, MPI_INT, status.MPI_SOURCE, msg_temp, MPI_COMM_WORLD);) (64 1,", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &wsize);) (7 1,   MPI_Graph_create(MPI_COMM_WORLD, wsize, index, edges, 1, &graph_comm);) (7 2,   MPI_Comm_rank(graph_comm, &pi);) (12 1,   MPI_Graph_neighbors_count(graph_comm, pi, &neighborsCount);) (12 2,   MPI_Graph_neighbors(graph_comm, pi, maxNeighbors, neighbors);) (29 1,     MPI_Recv(&message, 2, MPI_INT, -1, 0, graph_comm, &status);) (81 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 1,     MPI_Isend(&arr[0], 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &requests[0]);) (13 2,     MPI_Isend(&arr[1], 1, MPI_INT, 2, 0, MPI_COMM_WORLD, &requests[1]);) (13 3,     MPI_Isend(&arr[2], 1, MPI_INT, 3, 0, MPI_COMM_WORLD, &requests[2]);) (13 4,     MPI_Irecv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &requests[3]);) (15 1,       MPI_Irecv(&received, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[4]);) (15 2,       MPI_Waitall(np - 1, requests, MPI_STATUS_IGNORE);) (22 1,     MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,     MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,       MPI_Isend(&arr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &requests[i]);) (18 1,     MPI_Waitall(np - 1, requests, MPI_STATUS_IGNORE);) (23 1,     MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nbProc);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (10 4,   MPI_Get_processor_name(procname, &l);) (12 1,     MPI_Send(&a, 1, MPI_INT, 1, tag1, MPI_COMM_WORLD);) (12 2,     MPI_Recv(&a, 1, MPI_INT, 1, tag2, MPI_COMM_WORLD, &status);) (15 1,     MPI_Recv(&a, 1, MPI_INT, 0, tag1, MPI_COMM_WORLD, &status);) (15 2,     MPI_Send(&a, 1, MPI_INT, 0, tag2, MPI_COMM_WORLD);) (24 1,     MPI_Send(&a, 1, MPI_INT, 0, tag1, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nbProc);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (10 4,   MPI_Get_processor_name(procname, &l);) (14 1,     MPI_Send(&a, 1, MPI_INT, 1, tag1, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&a, 1, MPI_INT, 0, tag1, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Open_port(MPI_INFO_NULL, port_name);) (9 1,   MPI_Comm_accept(port_name, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm);) (10 1,   MPI_Send(&r, 1, MPI_INT, 0, 0, intercomm);) (10 2,   MPI_Recv(&r, 1, MPI_INT, 0, 0, intercomm, &status);) (11 1,   MPI_Comm_free(&intercomm);) (11 2,   MPI_Close_port(port_name);) (12 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_connect(port_name, MPI_INFO_NULL, 0, MPI_COMM_SELF, &intercomm);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Send(&r, 1, MPI_INT, 0, 0, intercomm);) (9 1,   MPI_Recv(&r, 1, MPI_INT, 0, 0, intercomm, &status);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_get_parent(&master);) (3 2,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_get_parent(&master);) (3 3,   MPI_Barrier(master);) (3 4,   MPI_Comm_disconnect(&master);) (3 5,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arq_vector_sum(local_x, local_n, n, \"x\", my_rank, comm);) (5 1,   MPI_Comm_size(comm, &comm_sz);) (5 2,   MPI_Comm_rank(comm, &my_rank);) (22 1,   MPI_Barrier(comm);) (22 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (24 1,   MPI_Reduce(&totalTime, &totalTime, 1, MPI_DOUBLE, MPI_MAX, 0, comm);) (29 0,  MPI_Wtime();) (35 0,  MPI_Wtime();) (37 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(0, 0);) (16 1,   MPI_Comm_size(comm, &comm_sz);) (16 2,   MPI_Comm_rank(comm, &my_rank);) (22 0,  MPI_Wtime();) (24 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (17 1,     MPI_Send(&x, 5, MPI_INT, 1, 55, MPI_COMM_WORLD);) (23 1,       MPI_Recv(&x, 5, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (34 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (16 1,     MPI_Send(&x, 1, MPI_INT, 1, 55, MPI_COMM_WORLD);) (26 1,     MPI_Recv(&x, 1, MPI_INT, 0, 55, MPI_COMM_WORLD, &status);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (19 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Dims_create(nproc, 3, ret);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (33 1,   MPI_Gather(&a_recv, 3, MPI_INT, a_recv2, 3, MPI_INT, 0, MPI_COMM_WORLD);) (46 1,   MPI_Finalize();)         MPI_Send(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Send(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Send(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Send(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD);)         MPI_Send(&a_recv2[0][0], 3, MPI_INT, 0, 0, MPI_COMM_WORLD);)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 4,   MPI_Gather(&a, m * n, MPI_INT, &a_recv, n * m, MPI_INT, 0, MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (47 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,   MPI_Bcast(buffer, count, MPI_INT, root, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,   MPI_Bcast(&buffer[count - 1], 1, MPI_INT, root, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (13 3,     MPI_Status_free(&stat);) (13 4,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 5,     MPI_Wait(&req, &stat);) (13 6,     MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 1,     MPI_Irecv(buffer, 1000, MPI_DOUBLE, 0, 124523, MPI_COMM_WORLD, &req);) (12 2,     MPI_Wait(&req, &stat);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[0] = length;\n68:   for (i = 1; i <= 4; i++)\n69:   {\n70:     for (n = 1; n <= 10; n++)\n71:     {\n72:       if (n > 0)\n73:       {\n74:         bw = (((2.0 * ((double) n)) / (1024.0 * 1024.0)) + 1.0e-7;\n75:         fromttime = 100 * length;\n76:         tottime += (1.0 * ((double) n)) / (1024.0 * 1024.0);\n77:       }\n78:       else\n79:       {\n80:         for (n = 1; n <= 10; n++)\n81:         {\n82:           if (n > 0)\n83:           {\n84:             bw = (((2.0 * ((double) n)) / (1024.0 * 1024.0)) + 1.0e-7;\n85:             tottime += (1.0 * ((double) n)) / (1024.0 * 1024.0);\n86:           }\n87:         }\n88: \n89:         for (n = 1; n <= 10; n++)\n90:         {\n91:           if (n > 0)\n92:           {\n93:             bw = (((2.0 * ((double) n)) / (1024.0 * 1024.0)) + 1.0e-7;\n94:", "label": " (19 0,  MPI_Init(&argc, &argv);) (19 0,  MPI_Comm_size(MPI_COMM_WORLD, &mysize);) (19 0,  MPI_Comm_rank(MPI_COMM_WORLD, &mypid);) (20 0,  MPI_Barrier(MPI_COMM_WORLD);) (30 0,  MPI_Wtime();) (32 0,  MPI_Send(&inmsg[0], length, MPI_INT, 1, 0, MPI_COMM_WORLD);) (32 0,  MPI_Recv(&inmsg[0], length, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (34 0,  MPI_Wtime();) (47 0,  MPI_Recv(&inmsg[0], length, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (47 0,  MPI_Send(&inmsg[0], length, MPI_INT, 0, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(26 1,   MPI_Init(&argc, &argv);) (26 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (26 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (69 0,  MPI_Wtime();) (77 1,   MPI_Allgather(&sz, 1, MPI_INT, &s, 1, MPI_INT, MPI_COMM_WORLD);) (84 1,     MPI_Allgatherv(xloc, n, MPI_DOUBLE, x, nloc, MPI_DOUBLE, MPI_COMM_WORLD);) (84 2,     MPI_Allgatherv(xloc, n, MPI_DOUBLE, x, nloc, MPI_DOUBLE, MPI_COMM_WORLD);) (84 3,     MPI_Allgatherv(xloc, n, MPI_DOUBLE, x, nloc, MPI_DOUBLE, MPI_COMM_WORLD);) (84 4,     MPI_Allgatherv(xloc, n, MPI_DOUBLE, x, nloc, MPI_DOUBLE, MPI_COMM_WORLD);) (90 1,   MPI_Reduce(&t, &sz, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (95 0,  MPI_Wtime();) (95 1,   MPI_Finalize();)", "label": " (26 1,   MPI_Init(&argc, &argv);) (26 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (26 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (105 0,  MPI_Wtime();) (105 1,   MPI_Scatter(M, sz, MPI_DOUBLE, Mloc, sz, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (105 2,   MPI_Scatter(v, mb, MPI_DOUBLE, vloc, mb, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (105 3,   MPI_Bcast(x, n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (119 1,     MPI_Allgather(xloc, mb, MPI_DOUBLE, x, mb, MPI_DOUBLE, MPI_COMM_WORLD);) (125 1,   MPI_Reduce(&norma, &aux, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (132 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (15 0,  MPI_Type_struct(2, lower_bound, extent, &double_", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Type_contiguous(2, MPI_INT, &double_int_type);) (4 2,   MPI_Type_commit(&double_int_type);) (6 1,   MPI_Type_get_extent(double_int_type, &lower_bound, &extent);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &comm);) (14 2,   MPI_Cart_coords(comm, rank, 2, coords);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,   MPI_Barrier(MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (21 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &comm);) (21 2,   MPI_Cart_get(comm, 2, dims, periods, coords);) (22 1,     MPI_Comm_free(&comm);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_thread(num_procs, my_rank, &nthreads, &my_rank);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 0,  MPI_Wtime();) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (18 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 0,  MPI_Wtime();) (14 1,       MPI_Send(&i, 1, MPI_INT, (my_rank + 1) % commsize, 0, MPI_COMM_WORLD);) (14 2,     MPI_Recv(&i, 1, MPI_INT, ((my_rank + commsize) - 1) % commsize, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (15 1,     MPI_Send(&i, 1, MPI_INT, (my_rank + 1) % commsize, 0, MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (24 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (27 0,  MPI_Wtime();) (28 1,       MPI_Recv(buffer, tam, MPI_INT, -1, tag, MPI_COMM_WORLD, &status);) (28 2,       MPI_Get_count(&status, MPI_INT, &tam);) (40 1,       MPI_Send(buffer, tam, MPI_INT, 0, tag, MPI_COMM_WORLD);) (43 1,       MPI_Send(&tam, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (43 2,       MPI_Recv(&tam, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (45 0,  MPI_Wtime();) (53 1,   MPI_Finalize();)         MPI_Send(&tam, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);)         MPI_Send(&tam, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);)         MPI_Recv(&tam, 1, MPI_INT, -1, tag, MPI_COMM_WORLD, &status);)         MPI_Abort(MPI_COMM_WORLD, 1);) (53 2,   MPI_Finalize", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (26 0,  MPI_Wtime();) (26 1,       MPI_Send(&buffer, tam, MPI_INT, recvID, 0, MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (43 1,       MPI_Recv(&buffer, 32768 / 4, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (51 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace3D_f(&u_prev);) (83 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (87 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_init(rank, size);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (7 0,  MPI_Wtime();) (9 0,  MPI_Wtime();) (11 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (7 0,  MPI_Wtime();) (12 0,  MPI_Wtime();) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>v1glob = (int) ((myid * nproc) * nproc);) (25 1,   MPI_Finalize();)       MPI_Ssend(&myid, 1, MPI_INT, 1, 17, MPI_COMM_WORLD);)     MPI_Recv(&myid, 1, MPI_INT, nproc - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Recv(&myid, 1, MPI_INT, nproc - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&myid, 1, MPI_INT, myid + 1, 17, MPI_COMM_WORLD);)     MPI_Recv(&myid, 1, MPI_INT, myid - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&myid, 1, MPI_INT, myid + 1, 17, MPI_COMM_WORLD);)     MPI_Recv(&myid, 1, MPI_INT, myid - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&myid, 1, MPI_INT, myid + 1, 17, MPI_COMM_WORLD);)     MPI_Recv(&myid, 1, MPI_INT, myid - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&myid, 1, MPI_INT, myid + 1, 17, MPI_COMM_WORLD);)     MPI_Recv(&myid, 1, MPI_INT, myid - 1, 17, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&myid, 1, MPI_INT", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (13 1,   MPI_Bcast(&iw, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 1,     MPI_Reduce(&iex, &iexglob, 1, MPI_INT, MPI_MIN, 0, MPI_COMM_WORLD);) (16 2,     MPI_Bcast(&iexglob, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_rank);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (19 1,       MPI_Irecv(&data, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (19 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (23 1,       MPI_Irecv(&ansbuff[n], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (23 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (31 1,     MPI_Isend(&sendarr[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (31 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (15 1,     MPI_Irecv(&sendarr[0], 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (15 2,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (19 1,       MPI_Recv(&sendarr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,     MPI_Irecv(ansbuff, procs, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (21 2,     MPI_Send(sendarr, procs, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 1,       MPI_Send(sendarr, procs, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 1,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (29 2,     MPI_Recv(ansbuff, procs, MPI_INT, root, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ate(wrank, wsize);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &wrank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &wsize);) (31 1,   MPI_Barrier(MPI_COMM_WORLD);) (31 2,   MPI_Bcast(&d, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (31 3,   MPI_Barrier(MPI_COMM_WORLD);) (36 1,   MPI_Barrier(MPI_COMM_WORLD);) (36 2,   MPI_Reduce(&it, &d, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (41 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &wrank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &wsize);) (10 4,   MPI_Barrier(MPI_COMM_WORLD);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (41 1,   MPI_Barrier(MPI_COMM_WORLD);) (41 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&unsignedIntToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_int)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&unsignedIntReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_int)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&unsignedIntToSend, 1, MPI_UNSIGNED, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&unsignedIntReceived, 1, MPI_UNSIGNED, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &meu_ranque);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (21 0,  MPI_Wtime();) (31 1,     MPI_Reduce(&cont, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (36 0,  MPI_Wtime();) (42 1,   MPI_Finalize();)", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &meu_ranque);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (21 0,  MPI_Wtime();) (31 1,     MPI_Reduce(&cont, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (36 0,  MPI_Wtime();) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 2,   MPI_Barrier(MPI_COMM_WORLD);) (12 3,   MPI_Barrier(MPI_COMM_WORLD);) (12 4,   MPI_Barrier(MPI_COMM_WORLD);) (12 5,   MPI_Barrier(MPI_COMM_WORLD);) (12 6,   MPI_Barrier(MPI_COMM_WORLD);) (12 7,   MPI_Barrier(MPI_COMM_WORLD);) (12 8,   MPI_Barrier(MPI_COMM_WORLD);) (12 9,   MPI_Barrier(MPI_COMM_WORLD);) (12 10,   MPI_Barrier(MPI_COMM_WORLD);) (12 11,   MPI_Barrier(MPI_COMM_WORLD);) (12 12,   MPI_Barrier(MPI_COMM_WORLD);) (12", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (40 1,   MPI_Barrier(MPI_COMM_WORLD);) (54 1,     MPI_Barrier(MPI_COMM_WORLD);) (55 1,     MPI_Barrier(MPI_COMM_WORLD);) (57 1,     MPI_Barrier(MPI_COMM_WORLD);) (67 1,   MPI_Barrier(MPI_COMM_WORLD);) (76 1,   MPI_Reduce(&local_avg_loop_latency, &global_avg_loop_latency, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (76 2,   MPI_Reduce(&local_latency, &global_latency, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (93 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Isend_Test_Test1(errs, a, b, &flag);) (32 1,   MPI_Irecv(&a, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &requests[0]);) (32 2,   MPI_Isend(&b, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &requests[1]);) (32 3,   MPI_Waitall(2, requests, statuses);) (32 4,   MPI_Test_cancelled(&status, &flag);) (32 5,   MPI_Barrier(MPI_COMM_WORLD);) (32 6,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (16 1,     MPI_Isend(&a, 1, (MPI_Datatype) 0x4c000405, 1, 0, (MPI_Comm) 0x44000000, &requests[0]);) (16 2,     MPI_Isend(&b, 1, (MPI_Datatype) 0x4c000405, 1, 0, (MPI_Comm) 0x44000000, &requests[1]);) (16 3,     MPI_Cancel(&requests[1]);) (16 4,     MPI_Wait(&requests[1], &statuses[1]);) (16 5,     MPI_Test_cancelled(&statuses[1], &flag);) (21 1,     MPI_Barrier((MPI_Comm) 0x44000000);) (21 2,     MPI_Wait(&requests[0], (MPI_Status *) 1);) (25 1,     MPI_Barrier((MPI_Comm) 0x44000000);) (25 2,     MPI_Recv(&a, 1, (MPI_Datatype) 0x4c000405, 0, 0, (MPI_Comm) 0x44000000, (MPI_Status *) 1);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &worldSize);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &worldSize);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_COMM_WORLD, &loc_sum);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,   MPI_Reduce(&loc_sum, &glob_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Reduce(&loc_sum, &glob_Sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (32 1,   MPI_Initialized(&size_Of_Cluster);) (32 2,   MPI_Init(&argc, &argv);) (32 3,   MPI_Comm_size(MPI_COMM_WORLD, &size_Of_Cluster);) (32 4,   MPI_Comm_rank(MPI_COMM_WORLD, &process_Rank);) (36 1,       MPI_Send(&message_item, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 2,       MPI_Send(&recv, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 3,       MPI_Send(&aux, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 4,       MPI_Send(&j, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 5,       MPI_Send(&i, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 6,       MPI_Send(&i, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 7,       MPI_Send(&j, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 8,       MPI_Send(&i, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 9,       MPI_Send(&j, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 10,       MPI_Send(&j, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (36 11,       MPI_Send(&j, 1, MP", "label": " (22 1,   MPI_Init(&argc, &argv);) (22 2,   MPI_Comm_size(MPI_COMM_WORLD, &size_Of_Cluster);) (22 3,   MPI_Comm_rank(MPI_COMM_WORLD, &process_Rank);) (39 0,  MPI_Wtime();) (39 1,         MPI_Send(&inativos, size_Of_Cluster, MPI_INT, elected_process, 1, MPI_COMM_WORLD);) (45 1,         MPI_Recv(&recv, size_Of_Cluster, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (59 1,               MPI_Send(&message_Item, 1, MPI_INT, j, 1, MPI_COMM_WORLD);) (64 1,                 MPI_Recv(&message_Item, 1, MPI_INT, current_process, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (78 1,       MPI_Barrier(MPI_COMM_WORLD);) (80 0,  MPI_Wtime();) (83 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andInit(&argc, &argv);) (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &worldSize);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (10 2,   MPI_Reduce(&localSum, &globalSum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (10 3,   MPI_Barrier(MPI_COMM_WORLD);) (10 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &worldSize);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 1,   MPI_Reduce(&localSum, &globalSum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>or_Init(&argc, &argv);) (19 1,   MPI_Comm_size(MPI_COMM_WORLD, &npr);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (22 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, longi_dim, anillo, reordenar, &malla_com);) (22 2,   MPI_Comm_rank(malla_com, &pid_malla);) (22 3,   MPI_Cart_coords(malla_com, pid_malla, 2, coord);) (29 1,   MPI_Cart_sub(malla_com, coord_libre, &col_com);) (29 2,   MPI_Comm_rank(col_com, &pid_malla);) (29 3,   MPI_Comm_size(col_com, &pid_col);) (34 1,   MPI_Comm_free(&malla_com);) (34 2,   MPI_Comm_free(&col_com);) (36 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &npr);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (22 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, longi_dim, anillo, reordenar, &malla_com);) (22 2,   MPI_Comm_rank(malla_com, &pid_malla);) (22 3,   MPI_Cart_coords(malla_com, pid_malla, 2, coord);) (22 4,   MPI_Cart_rank(malla_com, coord, &pid_m);) (27 1,   MPI_Cart_sub(malla_com, coord_libre, &fila_com);) (29 1,   MPI_Bcast(&pruebaf, 1, MPI_INT, 0, fila_com);) (29 2,   MPI_Comm_rank(fila_com, &pid_fila);) (34 1,   MPI_Cart_sub(malla_com, coord_libre, &col_com);) (36 1,   MPI_Bcast(&pruebac, 1, MPI_INT, 0, col_com);) (36 2,   MPI_Comm_rank(col_com, &pid_col);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &world);) (14 0,  MPI_Wtime();) (17 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &world);) (14 0,  MPI_Wtime();) (18 1,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>kajkstraAlgorithm(my_rank, message);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_of_processes);) (18 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, destination, tag, MPI_COMM_WORLD);) (21 1,     MPI_Recv(buff, 5, MPI_CHAR, -1, tag, MPI_COMM_WORLD, &status);) (23 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, destination, tag, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_of_processes);) (12 1,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (18 1,     MPI_Send(message, ((int) strlen(message)) + 1, MPI_CHAR, destination, tag, MPI_COMM_WORLD);) (22 1,     MPI_Send(message, ((int) strlen(message)) + 1, MPI_CHAR, 1, tag, MPI_COMM_WORLD);) (22 2,     MPI_Recv(message, 100, MPI_CHAR, num_of_processes - 1, tag, MPI_COMM_WORLD, &status);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (11 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,   MPI_Reduce(&num, &red_num, 1, MPI_INT, MPI_SUM, root, MPI_COMM_WORLD);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (74 1,   MPI_Scatter(data, numprocs, MPI_INT, rec, numprocs, MPI_INT, 0, MPI_COMM_WORLD);) (78 1,   MPI_Gather(rbuf, numprocs, MPI_INT, rec, numprocs, MPI_INT, 0, MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 1,       MPI_Finalize();) (52 1,   MPI_Bcast(&size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 2,   MPI_Bcast(&interval, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 3,   MPI_Bcast(&numbars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 4,   MPI_Bcast(&threadnum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (55 1,   MPI_Scatter(data, len, MPI_INT, rec, len, MPI_INT, 0, MPI_COMM_WORLD);) (77 1,   MPI_Gather(bars, numbars, MPI_INT, rbuf, numbars, MPI_INT, 0, MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (47 1,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 2,     MPI_Send(displs, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 3,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 4,     MPI_Send(displs, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 5,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 6,     MPI_Send(displs, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 7,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 8,     MPI_Send(displs, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 9,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 10,     MPI_Send(displs, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 11,     MPI_Send(counts, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (47 12,     MPI_Send(displs, 1, MPI_INT", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (49 1,   MPI_Scatter(counts, 1, MPI_INT, &sarray, 1, MPI_INT, 0, MPI_COMM_WORLD);) (50 1,   MPI_Scatterv(big_array, counts, displs, MPI_INT, small_array, sarray, MPI_INT, 0, MPI_COMM_WORLD);) (58 1,   MPI_Gather(&counter, 1, MPI_INT, oddcounter, 1, MPI_INT, 0, MPI_COMM_WORLD);) (62 1,       MPI_Recv(oddarray + counter, oddcounter[i], MPI_INT, i, 0, MPI_COMM_WORLD, &status);) (75 1,     MPI_Send(oddarray, counter, MPI_INT, 0, 0, MPI_COMM_WORLD);) (76 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(rank, message, current_leader, rank, &size);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (10 2,   MPI_Recv(&message, 1, MPI_INT, -1, 1, MPI_COMM_WORLD, &st);) (10 3,   MPI_Send(&rank, 1, MPI_INT, next_rank, 1, MPI_COMM_WORLD);) (10 4,   MPI_Barrier(MPI_COMM_WORLD);) (10 5,   MPI_Recv(&message, 1, MPI_INT, -1, 1, MPI_COMM_WORLD, &st);) (10 6,   MPI_Barrier(MPI_COMM_WORLD);) (10 7,   MPI_Send(&rank, 1, MPI_INT, destination_rank, 1, MPI_COMM_WORLD);) (10 8,   MPI_Barrier(MPI_COMM_WORLD);) (10 9,   MPI_Barrier(MPI_COMM_WORLD);) (10 10,   MPI_Send(&rank, 1, MPI_INT, destination_rank, 1, MPI_COMM_WORLD);) (10 11,   MPI_Barrier(MPI_COMM_WORLD);) (10 12,   MPI_Barrier(MPI_COMM_WORLD);) (10 13,   MPI_Barrier(MPI_COMM_WORLD);) (10 14,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,     MPI_Send(&message, 1, MPI_INT, successor, 0, MPI_COMM_WORLD);) (23 1,     MPI_Recv(&message, 1, MPI_INT, predecessor, -1, MPI_COMM_WORLD, &st);) (46 1,     MPI_Send(&message, 1, MPI_INT, successor, st_value, MPI_COMM_WORLD);) (50 1,   MPI_Barrier(MPI_COMM_WORLD);) (50 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (33 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (33 2,   MPI_Group_incl(world_group, s, bl, &rdc_bl_type);) (33 3,   MPI_Comm_create(MPI_COMM_WORLD, rdc_bl_type, &s_com);) (33 4,   MPI_Comm_create(MPI_COMM_WORLD, rd_com, &col_com);) (33 5,   MPI_Comm_create(MPI_COMM_WORLD, rd_com, &rs_col_type);) (33 6,   MPI_Comm_create(MPI_COMM_WORLD, rd_com, &rs_col_type);) (35 1,   MPI_Comm_rank(mat_com, &rdc_bl_cnt, &rdc_bl_size);) (35 2,   MPI_Comm_rank(mat_com, &rdc_bl_size, &rdc_bl_stride);) (35 3,   MPI_Comm_size(mat_com, &rs_bl_size);) (35 4,   MPI_Comm_rank(mat_com, &rdc_bl_cnt, &rdc_bl_size);) (35 5,   MPI_Comm_rank(mat_com, &rdc_bl_stride, &rdc_bl_stride);) (35 6,   MPI_Comm_size(mat_com, &rs_bl_size);) (35 7,   MPI_Comm_rank(mat_com, &rdc_bl_cnt, &rdc_bl_size);) (35 8,   MP", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (30 1,   MPI_Type_vector(mbl_bl_cnt, mbl_bl_size, mbl_bl_stride, mbl_old_type, &mat_block);) (30 2,   MPI_Type_commit(&mat_block);) (32 1,   MPI_Type_create_resized(mat_block, bl, extent, &rs_mat_block);) (32 2,   MPI_Type_commit(&rs_mat_block);) (32 3,   MPI_Scatter(mat, 1, rs_mat_block, &loc_mat[s * my_rank], 1, rs_mat_block, 0, MPI_COMM_WORLD);) (35 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (44 1,   MPI_Group_incl(world_group, master_cnt, master_indices, &masters_group);) (44 2,   MPI_Comm_create(MPI_COMM_WORLD, world_group, &masters_comm);) (44 3,   MPI_Scatter(vec, s, MPI_INTEGER, &loc_vec[s * my_rank], s, MPI_INTEGER, 0, masters_comm);) (46 1,   MPI_Comm_split(MPI_COMM_WORLD, color, 0, &col_com);) (46 2,   MPI_Bcast(loc_vec, VEC_DIM, MPI_INTEGER, 0, col_com);) (71 1,   MPI_Reduce(loc_mat, final_vec, VEC_DIM, MPI_INTEGER, MPI_SUM, 0, MPI_COMM_WORLD);) (95 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, p, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, p, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ally_completed(&mpz_completed);) (31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (33 0,  MPI_Wtime();) (35 1,       MPI_Recv(&start_time, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD, &status);) (35 2,       MPI_Get_count(&status, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), &count);) (36 0,  MPI_Wtime();) (44 1,       MPI_Send(&section, count, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD);) (44 2,       MPI_Recv(&section, count, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD, &status);) (44 0,  MPI_Wtime();) (53 1,       MPI_Recv(&section, count, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD, &status);) (53 2,       MPI_Send(&section, count, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0, 0, MPI_COMM_WORLD);) (53 0,  MPI_Wtime();) (56 1,       MPI_Send(&section, count, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), 0,", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 1,     MPI_Finalize();) (35 0,  MPI_Wtime();) (42 0,  MPI_Wtime();) (44 1,     MPI_Finalize();) (48 0,  MPI_Wtime();) (55 1,       MPI_Probe(-1, 1, MPI_COMM_WORLD, &status);) (55 2,       MPI_Get_count(&status, MPI_LONG, &count);) (56 1,       MPI_Recv(section_buf, count, MPI_LONG, status.MPI_SOURCE, status.MPI_TAG, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (68 0,  MPI_Wtime();) (80 1,     MPI_Send(section_buf, buf_size, MPI_LONG, 0, 1, MPI_COMM_WORLD);) (82 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Send(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD);) (8 2,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 1,       MPI_Recv(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 2,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (17 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (19 1,       MPI_Recv(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (9 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 1,       MPI_Mprobe(1, 123, MPI_COMM_WORLD, &msg, MPI_STATUS_IGNORE);) (10 2,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Mrecv(&a, 1, MPI_INT, &msg, MPI_STATUS_IGNORE);) (16 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (17 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (18 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (19 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,     MPI_Win_allocate_shared(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (21 1,     MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (35 1,   MPI_Win_fence(0, shwin);) (35 2,   MPI_Win_fence(0, shwin);) (35 3,   MPI_Win_free(&shwin);) (35 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,   MPI_Win_allocate_shared((rank == 0)? (sizeof(int)) : (0), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (10 1,   MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,     MPI_Win_lock(2, 0, 0, shwin);) (17 1,     MPI_Win_unlock(0, shwin);) (23 1,   MPI_Win_lock(2, 0, 0, shwin);) (24 1,   MPI_Win_unlock(0, shwin);) (35 1,   MPI_Win_free(&shwin);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (29 1,         MPI_Send(A, n * 2, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (29 2,         MPI_Send(A, n * 2, MPI_INT, rank + 1, 1, MPI_COMM_WORLD);) (33 1,         MPI_Recv(B, n * 2, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (33 2,         MPI_Recv(A, n * 2, MPI_INT, rank - 1, 1, MPI_COMM_WORLD, &status);) (36 1,         MPI_Recv(A, n * 2, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (36 2,         MPI_Recv(B, n * 2, MPI_INT, rank - 1, 1, MPI_COMM_WORLD, &status);) (37 1,         MPI_Send(A, n * 2, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (37 2,         MPI_Send(B, n * 2, MPI_INT, rank - 1, 1, MPI_COMM_WORLD);) (37 3,         MPI_Send(A, n * 2, MPI_INT, rank - 1, 1, MPI_COMM_WORLD);) (37 4,         MPI_Send(B, n * 2, MPI_INT, rank -", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 1,         MPI_Recv(B, n, MPI_INT, rank - 1, 200, MPI_COMM_WORLD, &status);) (25 1,         MPI_Send(A, n, MPI_INT, rank - 1, 200, MPI_COMM_WORLD);) (30 1,         MPI_Send(A, n, MPI_INT, rank + 1, 200, MPI_COMM_WORLD);) (30 2,         MPI_Recv(A, n, MPI_INT, rank + 1, 200, MPI_COMM_WORLD, &status);) (39 1,         MPI_Recv(B, n, MPI_INT, rank - 1, 200, MPI_COMM_WORLD, &status);) (42 1,         MPI_Send(A, n, MPI_INT, rank - 1, 200, MPI_COMM_WORLD);) (47 1,         MPI_Send(A, n, MPI_INT, rank + 1, 200, MPI_COMM_WORLD);) (47 2,         MPI_Recv(A, n, MPI_INT, rank + 1, 200, MPI_COMM_WORLD, &status);) (49 1,     MPI_Barrier(MPI_COMM_WORLD);) (55 1,     MPI_Send(A, n, MPI_INT, 0, 200, MPI_COMM_WORLD);) (60 1,       MPI_Recv(&A[i * n], n, MPI_INT, i, 200, MPI_COMM_WORLD, &status);) (63 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (9 0,  MPI_Wtime();) (11 0,  MPI_Send(&message_to_send, 1, MPI_INT, (proc_rank + 1) % proc_num, 0, MPI_COMM_WORLD);) (14 0,  MPI_Recv(&message_to_receive, 1, MPI_INT, ((proc_rank - 1) + proc_num) % proc_num, 0, MPI_COMM_WORLD, &status);) (21 0,  MPI_Wtime();) (28 1,       MPI_Send(&message_to_send, 1, MPI_INT, (proc_rank + 1) % proc_num, 0, MPI_COMM_WORLD);) (28 2,       MPI_Recv(&message_to_receive, 1, MPI_INT, (proc_num - 1) % proc_num, 0, MPI_COMM_WORLD, &status);) (30 1,   MPI_Finalize();)             MPI_Send(&message_to_send, 1, MPI_INT, (proc_rank + 1) % proc_num, 0, MPI_COMM_WORLD);)             MPI_Recv(&message_to_receive, 1, MPI_INT, (proc_num - 1) % proc_num, 0, MPI_COMM_WORLD, &status);) (34 1,   MPI_Finalize();)             MPI_Send(&message_to_send, 1, MPI_INT, (proc_rank + 1) % proc_num, 0, MPI_COMM_WORLD);)             MPI_Recv(&message_to_receive, 1, MPI_INT, (proc_num - 1) % proc_num, 0, MPI_COMM_WORLD, &status);)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &proc_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &proc_num);) (11 0,  MPI_Barrier(MPI_COMM_WORLD);) (15 0,  MPI_Bcast(&message_to_send, 1, MPI_INT, current_proc, MPI_COMM_WORLD);) (19 0,  MPI_Bcast(&message_to_receive, 1, MPI_INT, current_proc, MPI_COMM_WORLD);) (26 0,  MPI_Barrier(MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&shortestToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&shortestReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&signedCharacterToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_signed_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&signedCharacterReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_signed_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant4(MPI_Init(&argc, &argv);) (24 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 0,  MPI_Wtime();) (36 1,   MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Scatter(data, localN, MPI_BYTE, queries, localQ, MPI_BYTE, 0, MPI_COMM_WORLD);) (38 2,   MPI_Barrier(MPI_COMM_WORLD);) (38 0,  MPI_Wtime();) (40 1,   MPI_Reduce(&localTotalTime, &totalTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Finalize();) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 0,  MPI_Wtime();) (39 1,   MPI_Reduce(&localTotalTime, &totalTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (48 1,   MPI_Reduce(&localSum, &globalSum, 1, MPI_UNSIGNED_LONG, MPI_SUM, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,     MPI_Send(mensaje, 4, MPI_INT, 0, mensaje, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Barrier(MPI_COMM_WORLD);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 4,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Send(&mensaje, 4, MPI_INT, 0, 10, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&respuesta, 2, MPI_INT, 0, -1, MPI_COMM_WORLD, &status);) (22 1,       MPI_Send(&mensaje, 4, MPI_INT, 0, 10, MPI_COMM_WORLD);) (22 2,       MPI_Recv(&respuesta, 2, MPI_INT, 0, -1, MPI_COMM_WORLD, &status);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumTasks);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &SelfTID);) (51 1,   MPI_Barrier(MPI_COMM_WORLD);) (51 2,   MPI_Scatter(buffer, 1, MPI_DOUBLE,", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumTasks);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &SelfTID);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init_args(&argc, &argv);) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 2,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (40 1,   MPI_Bcast(&counter, 1, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,       MPI_Abort(MPI_COMM_WORLD, 35);) (57 1,       MPI_Send(&counter, 1, MPI_INT, counter, 1, MPI_COMM_WORLD);) (63 1,       MPI_Recv(&passed, 1, MPI_INT, -1, 1, MPI_COMM_WORLD, &status);) (64 1,       MPI_Send(&counter, 1, MPI_INT, status.MPI_SOURCE, 2, MPI_COMM_WORLD);) (69 1,       MPI_Recv(&passed, 1, MPI_INT, -1, 1, MPI_COMM_WORLD, &status);) (79 1,         MPI_Send(&counter, 1, MPI_INT, status.MPI_SOURCE, 3, MPI_COMM_WORLD);) (93 1,         MPI_Recv(&passed, 1, MPI_INT, -1, 1, MPI_COMM_WORLD, &status);) (98 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (22 1,     MPI_Recv(&datawork, 1, MPI_INT, dest, tag, MPI_COMM_WORLD, &status);) (24 1,       MPI_Recv(id[j], 100, MPI_CHAR, dest, tag, MPI_COMM_WORLD, &status);) (24 2,       MPI_Recv(gr[j], 100, MPI_CHAR, dest, tag, MPI_COMM_WORLD, &status);) (38 1,     MPI_Send(&pass, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (72 1,         MPI_Send(&datawork, 1, MPI_INT, a, tag, MPI_COMM_WORLD);) (76 1,         MPI_Send(&datawork, 1, MPI_INT, a, tag, MPI_COMM_WORLD);) (79 1,         MPI_Send(id[j], strlen(id[j]) + 1, MPI_CHAR, a, tag, MPI_COMM_WORLD);) (79 2,         MPI_Send(gr[j], strlen(gr[j]) + 1, MPI_CHAR, a, tag, MPI_COMM_WORLD);) (93 1,       MPI_Recv(&pass, 1, MPI_INT, i, tag, MPI_COMM_WORLD, &status);) (99 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 2,       MPI_Recv(&a, 1, MPI_INT, 2, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 3,       MPI_Barrier(MPI_COMM_WORLD);) (10 4,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,       MPI_Isend(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &req[0]);) (13 2,       MPI_Isend(&a, 1, MPI_INT, 2, 123, MPI_COMM_WORLD, &req[1]);) (13 3,       MPI_Waitall(2, req, MPI_STATUS_IGNORE);) (13 4,       MPI_Barrier(MPI_COMM_WORLD);) (13 5,       MPI_Isend(&c, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &req[2]);) (13 6,       MPI_Wait(&req[2], MPI_STATUS_IGNORE);) (16 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (16 2,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 2,       MPI_Recv(&a, 1, MPI_INT, 2, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (10 3,       MPI_Barrier(MPI_COMM_WORLD);) (10 4,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,       MPI_Isend(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &req[1]);) (13 2,       MPI_Isend(&a, 1, MPI_INT, 2, 123, MPI_COMM_WORLD, &req[0]);) (13 3,       MPI_Waitall(1, req, MPI_STATUS_IGNORE);) (13 4,       MPI_Barrier(MPI_COMM_WORLD);) (13 5,       MPI_Isend(&c, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &req[2]);) (13 6,       MPI_Wait(&req[2], MPI_STATUS_IGNORE);) (16 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (16 2,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 3,       MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_size(MPI_COMM_WORLD, &procId);) (21 3,   MPI_Comm_rank(MPI_COMM_WORLD, &procId);) (41 1,   MPI_Type_contiguous(4, MPI_UNSIGNED, &mpiCell);) (41 2,   MPI_Type_commit(&mpiCell);) (41 3,   MPI_Type_create_resized(mpiCell, 0, 3 * (sizeof(double)), &mpiCell);) (41 4,   MPI_Type_commit(&mpiCell);) (41 5,   MPI_Type_size(mpiCell, &totalGetCount);) (41 6,   MPI_Type_size(mpiCell, &totalSetCount);) (51 1,   MPI_Scatter(p->p, 1, mpiPImp, &mpiArray[0], 1, mpiPImp, 0, MPI_COMM_WORLD);) (51 2,   MPI_Scatter(p->p, 1, mpiPImp, &mpiArray[0], 1, mpiPImp, 0, MPI_COMM_WORLD);) (51 3,   MPI_Gather(p->p, 1, mpiPImp, &mpiArray[0], 1, mpiPImp, 0, MPI_COMM_WORLD);) (51 4,   MPI_Gather(p->p, 1, mpiPImp, &mpiArray[0], 1, mpiPImp, 0, MPI_COMM_WORLD);) (51 5,   MPI_Type_free(&mpiCell);) (51 6,   MPI_Type_free(&mpiCell);) (51 7,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &procId);) (25 1,   MPI_Type_create_struct(puzzleBlocksCount, puzzleBlocksLength, puzzleOffsets, puzzleTypes, &mpiPuzzle);) (25 2,   MPI_Type_commit(&mpiPuzzle);) (26 1,   MPI_Type_create_resized(MPI_UNSIGNED, 0, sizeof(Cell), &mpiCell);) (26 2,   MPI_Type_commit(&mpiCell);) (61 1,     MPI_Bcast(p, 1, mpiPuzzle, 0, MPI_COMM_WORLD);) (61 2,     MPI_Barrier(MPI_COMM_WORLD);) (64 1,     MPI_Bcast(p->cell, cell_count, mpiCell, 0, MPI_COMM_WORLD);) (64 2,     MPI_Barrier(MPI_COMM_WORLD);) (70 1,     MPI_Reduce((void *) (&p->setCount), (void *) (&totalSetCount), 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (71 1,     MPI_Reduce((void *) (&p->getCount), (void *) (&totalGetCount), 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (92 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (30 1,       MPI_Send(&data[0], 1, MPI_INT, next, 123, MPI_COMM_WORLD);) (30 2,       MPI_Recv(&data[1], 1, MPI_INT, pre, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 1,       MPI_Recv(&data[0], 1, MPI_INT, pre, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 2,       MPI_Send(&data[0], 1, MPI_INT, next, 123, MPI_COMM_WORLD);) (37 1,       MPI_Send(&data[0], 1, MPI_INT, pre, 123, MPI_COMM_WORLD);) (37 2,       MPI_Recv(&data[1], 1, MPI_INT, pre, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 3,       MPI_Send(&data[0], 1, MPI_INT, next, 123, MPI_COMM_WORLD);) (44 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (30 1,       MPI_Send(&data[0], 1, MPI_INT, next, 123, MPI_COMM_WORLD);) (30 2,       MPI_Recv(&data[1], 1, MPI_INT, pre, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 3,       MPI_Send(&data[1000 - 2], 1, MPI_INT, pre, 123, MPI_COMM_WORLD);) (30 4,       MPI_Recv(&data[1000 - 1], 1, MPI_INT, next, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 1,       MPI_Recv(&data[0], 1, MPI_INT, pre, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 2,       MPI_Send(&data[1], 1, MPI_INT, next, 123, MPI_COMM_WORLD);) (33 3,       MPI_Recv(&data[1000 - 1], 1, MPI_INT, next, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (33 4,       MPI_Send(&data[1000 - 21], 1, MPI_INT, pre, 123, MPI_COMM_WORLD);) (34 1,     MPI_Allreduce((void *) 1, &done, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,   MPI_Scatter(&numeros, 1, MPI_INT, &soma_local, 1, MPI_INT, 0, MPI_COMM_WORLD);) (20 2,   MPI_Scatter(&miproc, 1, MPI_INT, &ldisp, 1, MPI_INT, 0, MPI_COMM_WORLD);) (20 3,   MPI_Scatter(&piproc, 1, MPI_DOUBLE, &miproc, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 1,   MPI_Gather(&lsyn, 1, MPI_DOUBLE, &soma_local, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (42 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,   MPI_Scatter(numeros, parte, MPI_INT, misnumeros, parte, MPI_INT, master, MPI_COMM_WORLD);) (23 1,   MPI_Gather(&mipromedio, 1, MPI_DOUBLE, lospromedios, 1, MPI_DOUBLE, master, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (16 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (21 1,     MPI_Recv(message, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (26 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (26 2,     MPI_Recv(message, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (27 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (12 1,     MPI_Recv(message, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (16 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (21 1,     MPI_Recv(message, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (25 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (12 1,     MPI_Send(&myComm, 1, MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (17 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (19 1,       MPI_Send(&myComm, 1, MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (24 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (25 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(0, &rank);) (8 1,   MPI_Comm_split(0, membershipKey, rank, &myComm);) (10 1,     MPI_Intercomm_create(myComm, 0, 0, 1, 1, &myFirstComm);) (10 2,     MPI_Comm_rank(myComm, &rank);) (12 1,       MPI_Send(&data, 1, 2, 0, 1, myFirstComm);) (17 1,     MPI_Intercomm_create(myComm, 0, 0, 0, 1, &myFirstComm);) (17 2,     MPI_Comm_rank(myComm, &rank);) (19 1,       MPI_Recv(&data, 1, 2, 0, 1, myFirstComm, MPI_STATUS_IGNORE);) (26 1,     MPI_Comm_free(&myFirstComm);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(MPI_COMM_WORLD, &rank);) (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &comSize);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 1,   MPI_Reduce(&localSum, &result, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_int)), MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comSize);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_P2P_reduce(localArray, &result, localArraySize, MPI_LONG_LONG_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (20 1,   MPI_Reduce(&localSum, &result, 1, MPI_LONG_LONG_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init(&argc, &argv);) (30 0,  MPI_Type_create_struct(count, array_of_blocklengths, array_of_displacements, array_of_types, &newtype);) (30 0,  MPI_Type_commit(&newtype);) (30 0,  MPI_Type_create_struct(count, array_of_blocklengths, array_of_displacements, array_of_types, &newtype);) (30 0,  MPI_Type_commit(&newtype);) (37 0,  MPI_Type_get_extent(newtype, &intaddress);) (37 0,  MPI_Type_get_extent(newtype, &dbladdress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (40 0,  MPI_Type_size(newtype, &intaddress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (40 0,  MPI_Type_size(newtype, &intaddress);) (40 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);) (41 0,  MPI_Type_size(newtype, &intaddress);) (41 0,  MPI_Type_get_extent(newtype, &intaddress);)", "label": " (30 0,  MPI_Init(&argc, &argv);) (30 0,  MPI_Comm_size(MPI_COMM_WORLD, &uniSize);) (30 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (33 0,  MPI_Get_address(&sBuf.dblrank, &dbladdress);) (33 0,  MPI_Get_address(&sBuf.intrank, &intaddress);) (37 0,  MPI_Type_create_struct(count, array_of_blocklengths, array_of_displacements, array_of_types, &newtype);) (37 0,  MPI_Type_commit(&newtype);) (45 0,  MPI_Isend(&sBuf, 1, newtype, dest, 100, MPI_COMM_WORLD, &request);) (45 0,  MPI_Recv(&rBuf, 1, newtype, src, 100, MPI_COMM_WORLD, &status);) (45 0,  MPI_Wait(&request, &status);) (51 0,  MPI_Type_free(&newtype);) (51 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>24:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (40 1,       MPI_Type_create_hindexed_block(count, block_len, block, stride, MPI_BYTE, &inner_type);) (40 2,       MPI_Type_create_hvector(count, block_len, stride, MPI_BYTE, &inner_type);) (40 3,       MPI_Type_create_hindexed_block(count, block_len, block, stride, MPI_BYTE, &file_type);) (40 4,", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (16 4,   MPI_Type_contiguous(4, MPI_BYTE, &elem_type);) (26 1,   MPI_Type_contiguous(bigcount, elem_type, &mem_type);) (26 2,   MPI_Type_commit(&mem_type);) (29 1,     MPI_Type_vector((int) count[i], (int) block[i], (int) stride[i], inner_type, &outer_type);) (37 1,       MPI_Type_create_hindexed(1, &block_len, &start_disp, outer_type, &interm_type);) (37 2,       MPI_Type_free(&outer_type);) (37 3,       MPI_Type_create_resized(interm_type, 0, new_extent, &inner_type);) (37 4,       MPI_Type_free(&interm_type);) (44 1,   MPI_Type_free(&inner_type);) (44 2,   MPI_Type_commit(&file_type);) (44 3,   MPI_Type_free(&elem_type);) (50 0,  MPI_File_set_view(fh, 2144, MPI_BYTE, file_type, \"native\", MPI_INFO_NULL))   {     printf(\"ERROR SET VIEW\\n\");) (53 1,   MPI_File_close(&fh);) (53 2,   MPI_Type_free(&mem_type);) (53 3,   MPI_Type_free(&file_type);) (53 4,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sort(myrank, np);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (7 4,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (7 1,   MPI_Scatter(received_data, 100000000 / np, MPI_FLOAT, received_data, 100000000 / np, MPI_FLOAT, 0, MPI_COMM_WORLD);) (7 2,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (14 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 1,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (7 1,   MPI_Scatter(send_data, 100000000 / np, MPI_FLOAT, received_data, 100000000 / np, MPI_FLOAT, 0, MPI_COMM_WORLD);) (7 2,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[0] = 2;\n28:   for (int i = 0; i < 2; i++)\n29:   {\n30:     if (rank == i)\n31:     {\n32:       dest = i;\n33:       source = i;\n34:     }\n35:     else\n36:       if (rank == (i + 1))\n37:     {\n38:       dest = 0;\n39:       source = 0;\n40:     }\n41:     else\n42:       if (rank == 0)\n43:     {\n44:       dest = 0;\n45:       source = 0;\n46:     }\n47:     else\n48:       if (rank == (i + 1))\n49:     {\n50:       dest = 0;\n51:       source = 0;\n52:     }\n53:     else\n54:       if (rank == 0)\n55:     {\n56:       dest = 0;\n57:       source = 0;\n58:     }\n59:     else\n60:       if (rank == (i + 1))\n61:     {\n62:       dest = 0;\n63:       source = 0;\n64:     }\n65:     else\n66:       if (rank == 0)\n67:     {\n68:       dest = 0;\n69:       source = 0;\n70:     }\n71:     else\n72:       if (rank == (i + 1))\n73", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,     MPI_Finalize();) (21 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &comm);) (21 2,   MPI_Cart_shift(comm, 3, 1, &source, &dest);) (22 1,     MPI_Comm_free(&comm);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (25 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 2,   MPI_Bcast(&row, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 3,   MPI_Bcast(&column, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 4,   MPI_Bcast(&iterations, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 5,   MPI_Barrier(MPI_COMM_WORLD);) (27 6,   MPI_Bcast(&xnew[0][0], (void *) (&xnew[0][0]), (void *) (&xnew[0][0]), MPI_DOUBLE, 0, MPI_COMM_WORLD);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 2,", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (7 1,     MPI_Finalize();) (32 1,   MPI_Barrier(MPI_COMM_WORLD);) (45 1,     MPI_Barrier(MPI_COMM_WORLD);) (62 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Barrier(MPI_COMM_WORLD);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 4,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (14 1,     MPI_Send(&respuesta, 3, MPI_INT, 0, 1, MPI_COMM_WORLD);) (17 1,       MPI_Recv(&respuesta, 3, MPI_INT, -1, 1, MPI_COMM_WORLD, &status);) (22 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Barrier(MPI_COMM_WORLD);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 4,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (16 1,       MPI_Send(&informacion, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (16 2,       MPI_Recv(&respuesta, 3, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (20 1,     MPI_Send(&respuesta, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (20 2,     MPI_Recv(&respuesta, 3, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &h.mpi_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &h.mpi_size);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (22 1,   MPI_Finalize();)              MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)", "label": " (2 1,   MPI_Init(&argc, &argv);) (8 1,     MPI_Scatter(h.data_in, h.data_part_size, MPI_INT, h.data_part_in, h.data_part_size, MPI_INT, 0, MPI_COMM_WORLD);) (11 1,     MPI_Scatter(h.data_in, h.data_part_size, MPI_INT, h.data_part_in, h.data_part_size, MPI_INT, 0, MPI_COMM_WORLD);) (16 1,     MPI_Gather(h.data_part_out, h.data_part_size, MPI_INT, h.data_out, h.data_part_size, MPI_INT, 0, MPI_COMM_WORLD);) (19 1,     MPI_Gather(h.data_part_out, h.data_part_size, MPI_INT, h.data_out, h.data_part_size, MPI_INT, 0, MPI_COMM_WORLD);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,   MPI_Type_vector(16, 1, strideInBytes, MPI_FLOAT, &col_t);) (14 2,   MPI_Type_commit(&col_t);) (16 1,   MPI_Type_create_resized(col_t, 0, sizeof(float), &col_t);) (16 2,   MPI_Type_commit(&col_t);) (21 1,     MPI_Send(buf, 1, col_t, 1, 0, MPI_COMM_WORLD);) (22 1,     MPI_Recv(buf, 1, col_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Type_free(&col_t);) (23 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 1,   MPI_Type_create_hvector(16, 1, strideInBytes, MPI_FLOAT, &col_t);) (15 2,   MPI_Type_commit(&col_t);) (17 1,     MPI_Send(buf, 1, col_t, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Recv(buf, 1, col_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (22 1,   MPI_Type_free(&col_t);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &node);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &ntrials);) (50 1,   MPI_Reduce(&best_pt, &best_pt, 1, MP", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &node);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (20 4,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (20 5,   MPI_Barrier(MPI_COMM_WORLD);) (48 1,   MPI_Reduce(&t0, &t1, 1, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (48 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, comm);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, comm);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_mpi(MPI_COMM_WORLD, &request, &rank);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,       MPI_Irecv(&rec, 1, MPI_INT, val, -1, MPI_COMM_WORLD, &request);) (14 2,       MPI_Wait(&request, &status);) (28 1,     MPI_Isend(&total_sum, 1, MPI_INT, 0, n, MPI_COMM_WORLD, &request);) (28 2,     MPI_Wait(&request, &status);) (28 3,     MPI_Irecv(&rec, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, &request);) (28 4,     MPI_Wait(&request, &status);) (28 5,     MPI_Isend(&total_sum, 1, MPI_INT, 0, n, MPI_COMM_WORLD, &request);) (28 6,     MPI_Wait(&request, &status);) (28 7,     MPI_Isend(&rank, 1, MPI_INT, 0, n, MPI_COMM_WORLD, &request);) (28 8,     MPI_Wait(&request, &status);) (28 9,     MPI_Isend(&rank, 1, MPI_INT, 0, n, MPI_COMM_WORLD, &request);) (28 10,     MPI_Wait(&request, &status);) (28 11,     MPI_Irecv(&rec, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, &request);) (28 12,     MPI", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,       MPI_Irecv(&rec, 1, MPI_INT, val, -1, MPI_COMM_WORLD, &request);) (14 2,       MPI_Wait(&request, &status);) (27 1,     MPI_Isend(&buff, 1, MPI_INT, 0, n, MPI_COMM_WORLD, &request);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (24 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (29 0,  MPI_Wtime();) (30 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (35 0,  MPI_Wtime();) (38 0,  MPI_Wtime();) (40 0,  MPI_Wtime();) (45 0,  MPI_Wtime();) (54 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (30 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (35 0,  MPI_Wtime();) (36 0,  MPI_Wtime();) (55 1,   MPI_Barrier(MPI_COMM_WORLD);) (55 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 4,   MPI_Info_create(&info_in);) (13 5,   MPI_Info_set(info_in, invalid_key, \"true\");) (13 6,   MPI_Win_allocate(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &base, &win);) (13 7,   MPI_Info_set(info_in, \"no_locks\", \"true\");) (13 8,   MPI_Win_set_info(win, info_in);) (13 9,   MPI_Win_get_info(win, &info_out);) (13 10,   MPI_Info_get(info_out, \"no_locks\", 256, buf, &flag);) (16 1,     MPI_Info_get(info_out, \"accumulate_ordering\", 256, buf, &flag);) (24 1,     MPI_Info_get(info_out, \"accumulate_ops\", 256, buf, &flag);) (26 1,   MPI_Info_get(info_out, \"same_size\", 256, buf, &flag);) (28 1,   MPI_Info_get(info_out, \"alloc_shm\", 256, buf, &flag);) (38 1,   MPI_Info_free(&info_in);) (38 2,   MPI_Info_free(&info_out);) (38 3,   MPI_Win_free(&win);) (38 4,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (13 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (13 4,   MPI_Win_allocate(sizeof(int), sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &base, &win);) (13 5,   MPI_Info_create(&info_in);) (13 6,   MPI_Info_set(info_in, invalid_key, \"true\");) (13 7,   MPI_Win_set_info(win, info_in);) (13 8,   MPI_Win_get_info(win, &info_out);) (13 9,   MPI_Info_get(info_out, invalid_key, 1024, buf, &flag);) (18 1,   MPI_Info_free(&info_in);) (18 2,   MPI_Info_free(&info_out);) (18 3,   MPI_Info_create(&info_in);) (18 4,   MPI_Info_set(info_in, \"no_locks\", \"false\");) (18 5,   MPI_Win_set_info(win, info_in);) (18 6,   MPI_Win_get_info(win, &info_out);) (18 7,   MPI_Info_get(info_out, \"no_locks\", 1024, buf, &flag);) (28 1,   MPI_Info_free(&info_in);) (28 2,   MPI_Info_free(&info_out);) (28 3,   MPI_Info_create(&info_in);) (28 4,   MPI_Info_set(info_in, \"no_locks\", \"true\");) (28 5,   MPI_Win_set_info(win, info_in);) (28 6,   MPI_Win_get_info(win, &info_out);) (28 7,   MPI_Info_get(info_out, \"no_locks\", 1024, buf, &flag);) (38 1,   MPI_Info_free(&info_in);) (38 2,   MPI_Info_free(&info_out);) (38 3,   MPI_Win_get_info(win, &info_out);) (38 4,   MPI_Info_get(info_out, \"accumulate_ordering\", 1024, buf, &flag);) (40 1,   MPI_Info_get(info_out, \"accumulate_ops\", 1024, buf, &flag);) (42 1,   MPI_Info_get(info_out, \"same_size\", 1024, buf, &flag);) (44 1,   MPI_Info_get(info_out, \"alloc_shm\", 1024, buf, &flag);) (46 1,   MPI_Info_free(&info_out);) (46 2,   MPI_Win_free(&win);) (46 3,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (48 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18:   Print_vector(local_vec2, local_n, n, \"Prefix vector\", my_rank, comm);) (19 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n80:   MPI_Init(&argc, &argv);) (21 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 3,   MPI_Barrier(MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (42 1,     MPI_Scatter(V, N / numProcs, MPI_DOUBLE, V, N / numProcs, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (56 1,   MPI_Reduce(&commTime, &totalTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (58 1,   MPI_Finalize();)         MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (28 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (42 1,   MPI_Barrier(MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (42 0,  MPI_Wtime();) (42 1,   MPI_Scatter(V, stripSize, MPI_DOUBLE, V, stripSize, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (52 0,  MPI_Wtime();) (52 1,   MPI_Reduce(&suma_local, &suma_total, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (52 2,   MPI_Reduce(&max_local, &max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (52 3,   MPI_Reduce(&min_local, &min, 1, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (54 0,  MPI_Wtime();) (54 1,   MPI_Reduce(commTimes, minCommTimes, 4, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (54 2,   MPI_Reduce(commTimes, maxCommTimes, 4, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (54 3,   MPI_Reduce(totalTimes, minTotalTime, 2, MPI_DOUBLE, MPI_MIN, 0, MPI_COMM_WORLD);) (54 4,   MPI_Reduce(totalTimes, maxTotalTime, 2, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (54 5,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size_Of_Comm);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &process_Rank);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size_Of_Comm);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &process_Rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Barrier(MPI_", "label": " (7 1,   MPI_Init(&argc, &argv);) (12 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,     MPI_Abort(MPI_COMM_WORLD, -4);) (65 1,   MPI_Reduce(&time, &max_time, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ate_vec(rec_mat, mat_dim * mat_dim);\n46:   MPI_Comm cart_comm;\n47:   int dims[2] = {mat_dim, mat_dim};\n48:   int bl_lens[2] = {mat_dim, mat_dim};\n49:   int bl_stride = mat_dim;\n50:   MPI_Datatype old_type = MPI_INTEGER;\n51:   MPI_Datatype diag_type;\n52:   MPI_Datatype diag_res_type;\n53:   MPI_Datatype diag_res_type;\n54:   int *diag_mat;\n55:   int *rec_diag_mat;\n56:   int *diag_res_type;\n57:   int *rec_res_type;\n58:   int *diag_res_type;\n59:   int *diag_res_type;\n60:   int *rec_res_type;\n61:   int *rec_res_type;\n62:   int *diag_res_type;\n63:   int *rec_res_type;\n64:   int *rec_res_type;\n65:   int *rec_res_type;\n66:   int *diag_res_type;\n67:   int *rec_res_type;\n68:   int *rec_res_type;\n69:   int *rec_res_type;\n70:   int *rec_res_type;\n71:   int *rec_res_type;\n72:   int *rec_res_type;\n73:   int *rec_res_type;\n74:   int *rec_res_type;\n75:   int *rec_res_type;\n76:   int *rec_res_type;\n77:   int *rec_res_type;\n78:   int *rec_res_type;\n79:   int *rec_res_type;\n80:   int *", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (18 1,   MPI_Type_vector(bl_cnt, bl_size, bl_stride, old_type, &diag_type);) (18 2,   MPI_Type_commit(&diag_type);) (26 1,     MPI_Send(&mat[diag_1_ind], 1, diag_type, target_proc, 0, MPI_COMM_WORLD);) (26 2,     MPI_Send(&mat[diag_2_ind], 1, diag_type, target_proc, 0, MPI_COMM_WORLD);) (35 1,     MPI_Type_vector(rec_bl_cnt, rec_bl_size, rec_bl_stride, rec_old_type, &rec_col_type);) (35 2,     MPI_Type_commit(&rec_col_type);) (37 1,     MPI_Recv(&rec_mat[0], 1, rec_col_type, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,     MPI_Recv(&rec_mat[1], 1, rec_col_type, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(size, rank, dimvec);) (4 1,   MPI_Cart_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Cart_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dimvec, periodvec, reorder, &tormineMPI);) (10 2,   MPI_Cart_shift(tormineMPI, 1, 1, &left, &right);) (10 3,   MPI_Cart_shift(tormineMPI, 1, 1, &up, &down);) (24 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 4,   MPI_Cart_create(MPI_COMM_WORLD, dimensions, dimvec, periodvec, reorder, &ourLove);) (15 1,     MPI_Cart_coords(ourLove, findcoord, maxdims, coord);) (15 2,     MPI_Cart_rank(ourLove, coord, &findrank);) (21 1,       MPI_Cart_shift(ourLove, 0, 1, &left, &right);) (21 2,       MPI_Cart_shift(ourLove, 1, 1, &up, &down);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 2,   MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 3,   MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 1,     MPI_Barrier(MPI_COMM_WORLD);) (34 2,     MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (37 1,     MPI_Barrier(MPI_COMM_WORLD);) (37 2,     MPI_Bcast(&N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (57 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_Init(&argc, &argv));) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Get_processor_name(processor_name, &namelen);) (9 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 2,   MPI_Comm_group(MPI_COMM_WORLD, &newgroup);) (9 3,   MPI_Group_free(&newgroup);) (9 4,   MPI_Barrier(MPI_COMM_WORLD);) (9 5,   MPI_Comm_group(MPI_COMM_WORLD, &newgroup);) (10 1,   MPI_Group_free(&newgroup2);) (10 2,   MPI_Barrier(MPI_COMM_WORLD);) (10 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (15 4,   MPI_Info_create(&info_in);) (15 5,   MPI_Info_set(info_in, invalid_key, \"true\");) (15 6,   MPI_Win_allocate(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &base, &win);) (15 7,   MPI_Win_set_info(win, info_in);) (15 8,   MPI_Win_get_info(win, &info_out);) (15 9,   MPI_Info_get(info_out, invalid_key, 256, buf, &flag);) (20 1,   MPI_Info_get(info_out, \"no_locks\", 256, buf, &flag);) (22 1,   MPI_Info_get(info_out, \"accumulate_ordering\", 256, buf, &flag);) (24 1,   MPI_Info_get(info_out, \"accumulate_ops\", 256, buf, &flag);) (26 1,   MPI_Info_get(info_out, \"same_size\", 256, buf, &flag);) (28 1,   MPI_Info_free(&info_in);) (28 2,   MPI_Info_free(&info_out);) (28 3,   MPI_Win_free(&win);) (28 4,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (15 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (15 4,   MPI_Info_create(&info_in);) (15 5,   MPI_Info_set(info_in, invalid_key, \"true\");) (15 6,   MPI_Win_allocate(sizeof(int), sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &base, &win);) (15 7,   MPI_Win_set_info(win, info_in);) (15 8,   MPI_Win_get_info(win, &info_out);) (15 9,   MPI_Info_get(info_out, invalid_key, 1024, buf, &flag);) (20 1,   MPI_Info_get(info_out, \"no_locks\", 1024, buf, &flag);) (22 1,   MPI_Info_get(info_out, \"accumulate_ordering\", 1024, buf, &flag);) (24 1,   MPI_Info_get(info_out, \"accumulate_ops\", 1024, buf, &flag);) (26 1,   MPI_Info_get(info_out, \"same_size\", 1024, buf, &flag);) (28 1,   MPI_Info_free(&info_in);) (28 2,   MPI_Info_free(&info_out);) (28 3,   MPI_Win_free(&win);) (28 4,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 1,   MPI_Allreduce(&local_sum, &global_sum, 1, MPI_FLOAT, MPI_SUM, MPI_COMM_WORLD);) (25 1,   MPI_Reduce(&local_sq_diff, &global_sq_diff, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (31 1,   MPI_Barrier(MPI_COMM_WORLD);) (31 2,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (19 1,   MPI_Allreduce(&local_sum, &global_sum, 1, MPI_FLOAT, MPI_SUM, MPI_COMM_WORLD);) (25 1,   MPI_Reduce(&local_sq_diff, &global_sq_diff, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (31 1,   MPI_Barrier(MPI_COMM_WORLD);) (31 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (44 1,       MPI_Send(&l, 1, MPI_INT, l, 0, MPI_COMM_WORLD);) (44 2,       MPI_Send(&A[l], Bars * (sizeof(int)), MPI_INT, l, 1, MPI_COMM_WORLD);) (44 3,       MPI_Send(&Bars, 1, MPI_INT, l, 1, MPI_COMM_WORLD);) (51 1,       MPI_Recv(&Bars, 1, MPI_INT, l, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 2,       MPI_Recv(&A[l], Bars * (sizeof(int)), MPI_INT, l, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 3,       MPI_Recv(&A[l], Bars * (sizeof(int)), MPI_INT, l, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 4,       MPI_Recv(&A[l], Bars * (sizeof(int)), MPI_INT, l, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 5,       MPI_Recv(&Bars, 1, MPI_INT, l, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 6,       MPI_Recv(&Bars, 1, MPI_INT, l, 1, MPI_COMM_", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &NumberOfprocess);) (47 1,   MPI_Bcast(&size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 2,   MPI_Bcast(&Bars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (49 1,   MPI_Bcast(&Range, 1, MPI_INT, 0, MPI_COMM_WORLD);) (49 2,   MPI_Bcast(&Points_per_process, 1, MPI_INT, 0, MPI_COMM_WORLD);) (49 3,   MPI_Scatter(p, Points_per_process, MPI_INT, irecv, Points_per_process, MPI_INT, 0, MPI_COMM_WORLD);) (74 1,   MPI_Gather(arr, indexx, MPI_INT, AllCount, indexx, MPI_INT, 0, MPI_COMM_WORLD);) (99 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 0,  MPI_Init(&argc, &argv);) (9 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (9 0,  MPI_Comm_size(MPI_COMM_WORLD, &p);) (20 0,  MPI_Iprobe(0, tag, MPI_COMM_WORLD, &request);) (20 0,  MPI_Irecv(a, 5, MPI_INT, 1, tag, MPI_COMM_WORLD, &request);) (20 0,  MPI_Wait(&request, &status);) (28 0,  MPI_Iprobe(0, tag, MPI_COMM_WORLD, &flag, &status);) (28 0,  MPI_Irecv(a, 5, MPI_INT, 0, tag, MPI_COMM_WORLD, &request);) (28 0,  MPI_Wait(&request, &status);) (37 0,  MPI_Iprobe(0, tag, MPI_COMM_WORLD, &flag, &status);) (37 0,  MPI_Wait(&request, &status);) (38 0,  MPI_Iprobe(0, tag, MPI_COMM_WORLD, &flag, &status);) (40 0,  MPI_Finalize();)", "label": " (9 0,  MPI_Init(&argc, &argv);) (9 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (18 0,  MPI_Issend(a, 5, MPI_INT, 1, tag, MPI_COMM_WORLD, &request);) (18 0,  MPI_Wait(&request, &status);) (24 0,  MPI_Iprobe(-1, -1, MPI_COMM_WORLD, &flag, &status);) (27 0,  MPI_Recv(a, 5, MPI_INT, status.MPI_SOURCE, status.MPI_TAG, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(0, 0);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (18 0,  MPI_Wtime();) (41 1,     MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (42 1,     MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (48 0,  MPI_Wtime();) (53 1,   MPI_Reduce(&total_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (68 1,   MPI_Finalize();)", "label": " (18 1,   MPI_Init(0, 0);) (18 2,   MPI_Barrier(MPI_COMM_WORLD);) (18 0,  MPI_Wtime();) (18 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (30 1,     MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (36 1,       MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 0,  MPI_Wtime();) (41 1,   MPI_Reduce(&local_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (51 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,     MPI_Send(&number, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&number, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,     MPI_Send(&number, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&number, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (11 1,     MPI_Isend(buffer, 1, MPI_INT, 1, 124, row_comm, &request);) (15 1,     MPI_Wait(&request, &status);) (15 2,     MPI_Wait(&request2, &status);) (15 3,     MPI_Wait(&request, &status);) (15 4,     MPI_Wait(&request2, &status);) (16 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (11 1,     MPI_Isend(buffer, 1, MPI_INT, 1, 124, row_comm, &request);) (11 2,     MPI_Wait(&request, &status);) (15 1,     MPI_Recv(buffer2, 1204, MPI_INT, 0, 124, row_comm, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada 1,\n37:   MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(message, 100, MPI_CHAR, p - 1, tag, MPI_COMM_WORLD, &status);) (23 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (23 2,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (32 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (32 2,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (32 3,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (32 4,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (32 5,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (32 6,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (32 7,", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(message, 100, MPI_CHAR, p - 1, tag, MPI_COMM_WORLD, &status);) (19 1,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (23 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (27 1,     MPI_Recv(message, 100, MPI_CHAR, my_rank - 1, tag, MPI_COMM_WORLD, &status);) (31 1,     MPI_Ssend(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(&local_buf, 10, MPI_LONG_LONG_INT, 1, 0, 10, MPI_LONG_LONG_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Send(&res, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&res, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Barrier(MPI_COMM_WORLD);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&c, &v);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (25 0,  MPI_Wtime();) (43 1,     MPI_Type_contiguous(w, MPI_UNSIGNED, &single_row);) (43 2,     MPI_Type_commit(&single_row);) (43 3,     MPI_Type_contiguous(w, MPI_UNSIGNED, &single_row);) (43 4,     MPI_Type_commit(&single_row);) (45 0,  MPI_Wtime();) (53 1,   MPI_Barrier(MPI_COMM_WORLD);) (53 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&c, &v);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (25 0,  MPI_Wtime();) (26 1,   MPI_Bcast(&w, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Bcast(&h, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 3,   MPI_Bcast(&iter, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 1,   MPI_Type_contiguous(w, MPI_UNSIGNED, &single_row);) (27 2,   MPI_Type_commit(&single_row);) (41 1,       MPI_Send(u + (start * w), end - start, single_row, i, 100 + i, MPI_COMM_WORLD);) (53 1,     MPI_Recv(u + (start * w), end - start, single_row, 0, 100 + rank, MPI_COMM_WORLD, &status);) (58 0,  MPI_Wtime();) (62 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_17:   MPI_Init(&argc, &argv);) (24 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 2,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (64 1,   MPI_Barrier(MPI_COMM_WORLD);) (64 2,   MPI_Allreduce(&trial, &best_trial, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (64 3,   MPI_Allreduce(&best_trial, &best_jj, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (64 4,   MPI_Allreduce(&best_pt, &best_fx, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (64 5,   MPI_Allreduce(&best_trial, &best_jj, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (64 6,   MPI_Allreduce(&best_pt, &best_fx, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (64 7,   MPI_Allreduce(&best_trial, &best_jj, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (64 8,   MPI_Allreduce(&best_pt, &best_fx, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (64 9,   MPI_Allreduce(&best_trial, &best_jj, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (64 10,   MPI_Barrier(MPI_COMM_WORLD);) (78 1,   MPI_Finalize();)         return 0;\n79: }\n80:", "label": " (32 1,   MPI_Init(&argc, &argv);) (32 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 3,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (63 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and(rank, rank + 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,   MPI_Scatterv(counts, counts, displs, MPI_INT, recvbuf, (4 * 4) / size, MPI_INT, 0, MPI_COMM_WORLD);) (32 1,   MPI_Gatherv(counts, 1, MPI_INT, recvbuf, counts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (45 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (31 1,   MPI_Scatterv(&data, counts, displs, MPI_INT, recvbuf, counts[rank], MPI_INT, 0, MPI_COMM_WORLD);) (33 1,   MPI_Gatherv(recvbuf, counts[rank], MPI_INT, ans, counts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_13 1,   MPI_Init(&argc, &argv);) (16 0,  MPI_Wtime();) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &currentProcess);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocesses);) (29 1,   MPI_Reduce(&local_sum, &global_sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &currentProcess);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocesses);) (16 0,  MPI_Wtime();) (29 1,   MPI_Reduce(&local_sum, &global_sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Send(&rankAnterior, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (9 2,     MPI_Recv(&rankAnterior, 1, MPI_INT, size - 1, tag, MPI_COMM_WORLD, &status);) (13 1,     MPI_Recv(&rankAnterior, 1, MPI_INT, rank - 1, tag, MPI_COMM_WORLD, &status);) (14 1,     MPI_Send(&rankAnterior, 1, MPI_INT, (rank + 1) % size, tag, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 4,   MPI_Barrier(MPI_COMM_WORLD);) (9 1,     MPI_Send(&msj, 1, MPI_INT, my_rank + 1, tag, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&msj, 1, MPI_INT, rankAnterior, tag, MPI_COMM_WORLD, &status);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (12 0,  MPI_Wtime();) (14 1,       MPI_Isend(buf, bufsize, MPI_CHAR, i, tag, MPI_COMM_WORLD, &reqs[i]);) (16 1,     MPI_Waitall(commsize - 1, reqs, MPI_STATUS_IGNORE);) (20 1,     MPI_Recv(buf, bufsize, MPI_CHAR, 0, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (22 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (13 1,       MPI_Isend(buf, bufsize, MPI_CHAR, i, tag, MPI_COMM_WORLD, &reqs[i - 1]);) (14 1,     MPI_Waitall(commsize - 1, reqs, MPI_STATUS_IGNORE);) (19 1,     MPI_Recv(buf, bufsize, MPI_CHAR, 0, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sort(matrix, SIZE);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_MPI_Bcast(&n, 1, MPI_INT, root, MPI_COMM_WORLD);) (17 1,   MPI_Reduce(&suma, &sum, 1, MPI_DOUBLE, MPI_SUM, root, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank_id);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,   MPI_Bcast(&n, 1, MPI_INT, root, MPI_COMM_WORLD);) (33 1,   MPI_Reduce(&sum, &suma, 1, MPI_DOUBLE, MPI_SUM, root, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (9 2,       MPI_Ibarrier(MPI_COMM_WORLD, &req[0]);) (9 3,       MPI_Ibarrier(MPI_COMM_WORLD, &req[1]);) (9 4,       MPI_Waitall(2, &req, MPI_STATUS_IGNORE);) (12 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (12 2,       MPI_Ibarrier(MPI_COMM_WORLD, &req[0]);) (12 3,       MPI_Waitall(2, &req, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (9 2,       MPI_Barrier(MPI_COMM_WORLD);) (9 3,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,       MPI_Isend(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, req[0]);) (12 2,       MPI_Isend(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, req[1]);) (12 3,       MPI_Barrier(MPI_COMM_WORLD);) (12 4,       MPI_Waitall(2, &req, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (37 1,   MPI_Bcast(&image_buffer, numarCoc, MPI_INT, 0, MPI_COMM_WORLD);) (37 2,   MPI_Bcast(&result_buffer, numarCoc, MPI", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (28 1,   MPI_Bcast(&topology, topoSize * topoSize, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (12 1,     MPI_Bcast(&sendBuffer, 1, MPI_INT, rootRank, MPI_COMM_WORLD);) (17 1,     MPI_Bcast(&recvBuffer, 1, MPI_INT, rootRank, MPI_COMM_WORLD);) (22 1,     MPI_Bcast(&sendBuffer, 1, MPI_INT, rootRank, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (12 1,       MPI_Send(&sendBuffer, 1, MPI_INT, i, 2, MPI_COMM_WORLD);) (17 1,     MPI_Recv(&recvBuffer, 1, MPI_INT, 0, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>v, my_base, &win);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Win_allocate(win_size, win_unit, MPI_INFO_NULL, MPI_COMM_WORLD, &my_base, &win);) (17 2,   MPI_Win_lock_all(0, win);) (17 3,   MPI_Win_sync(win);) (17 4,   MPI_Barrier(MPI_COMM_WORLD);) (17 5,   MPI_Win_sync(win);) (17 6,   MPI_Barrier(MPI_COMM_WORLD);) (17 7,   MPI_Win_unlock_all(win);) (17 8,   MPI_Win_free(&win);) (17 9,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (20 1,     MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (10 1,     MPI_Barrier((MPI_Comm) 0x44000000);) (10 2,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (13 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (13 2,   MPI_Abort((MPI_Comm) 0x44000000, 1);) (16 1,   MPI_Win_allocate(win_size, win_unit, (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &my_base, &win);) (16 2,   MPI_Win_lock_all(0, win);) (17 1,   MPI_Win_unlock_all(win);) (17 2,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (20 1,     MPI_Win_free(&win);) (20 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n71:   int size;\n72:   int i = 0;\n73:   int j = 0;\n74:   int k = 0;\n75:   int flag = 0;\n76:   int *matrix = (int *) calloc(size, sizeof(int));\n77:   for (i = 0; i < size; ++i)\n78:   {\n79:     for (j = 0; j < 3; ++j)\n80:     {\n81:       matrix[j] = (int *) calloc(size, sizeof(int));\n82:       for (k = 0; k < 3; ++k)\n83:       {\n84:         matrix[j] += matrix[k] * oldResult[k];\n85:       }\n86: \n87:     }\n88: \n89:   }\n90: \n91:   if (rank == 0)\n92:   {\n93:     printf(\"\\nResult matrix:\\n\");\n94:     for (j = 0; j < 3; ++j)\n95:     {\n96:       printf(\"\\noldResult matrix:\\n\");\n97:       for (i = 0; i < size; ++i)\n98:       {\n99:         printf(\"%f\\t\", oldResult[i]);\n100:       }\n101: \n102:       printf(\"\\n\");\n103:     }\n104: \n105:   }\n106:   if (rank == 0)\n107:   {\n108:     printf(\"\\nResult matrix:\\n\");\n109:     for (j = 0; j < 3; ++j)\n110:     {\n111:       printf(\"\\noldResult matrix:\\n\");\n112:", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (59 1,   MPI_Scatter(matrix, n, MPI_INT, &matrix[rank], n, MPI_INT, 0, MPI_COMM_WORLD);) (59 2,   MPI_Scatter(vector, part, MPI_INT, &vector[rank], part, MPI_INT, 0, MPI_COMM_WORLD);) (59 3,   MPI_Bcast(oldResult, 3, MPI_FLOAT, 0, MPI_COMM_WORLD);) (67 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &input);) (9 1,   MPI_Bcast(&input, 1, MPI_INT, 0, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,   MPI_Scan(&input, &output, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,   MPI_Finalize();)         MPI_Send(&u_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&u_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (19 2,     MPI_Send(&v_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 3,     MPI_Recv(&v_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (19 4,     MPI_Send(&u_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 5,     MPI_Recv(&v_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (19 6,     MPI_Send(&u_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 7,     MPI_Recv(&v_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (19 8,     MPI_Send(&u_i, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 9,     MPI_Recv", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Reduce(&uv, &tot, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_type_contiguous(3, MPI_INT, &myRank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (9 1,     MPI_Reduce(&myRank, &reductionResult, 1, MPI_INT, MPI_SUM, rootRank, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (11 1,   MPI_Reduce(&myRank, &reductionResult, 1, MPI_INT, MPI_SUM, rootRank, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(argc, argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 0,  MPI_Wtime();) (14 1,   MPI_Bucket_sort(NUMBER_OF_ELEMENTS, MAX, 0, MPI_COMM_WORLD);) (14 2,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 0,  MPI_Wtime();) (14 1,   MPI_Direct_sort(NUMBER_OF_ELEMENTS, array, 0, MPI_COMM_WORLD);) (14 2,  MPI_Wtime() - start_time);) (14 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada6(yo, p, MPI_Init(&argc, &argv);) (yo, p, MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (yo, p, MPI_Comm_size(MPI_COMM_WORLD, &p);) (34 1,   MPI_Type_indexed(count, blocklengths, displacements, MPI_DOUBLE, &matriz_displacements);) (34 2,   MPI_Type_commit(&matriz_displacements);) (34 3,   MPI_Type_indexed(count, blocklengths, displacements, MPI_DOUBLE, &matriz_diag);) (34 4,   MPI_Type_commit(&matriz_diag);) (34 5,   MPI_Type_indexed(count, blocklengths, displacements, MPI_DOUBLE, &matriz_diag);) (34 6,   MPI_Type_commit(&matriz_diag);) (52 1,   MPI_Finalize();)         MPI_Send(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);)         MPI_Recv(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &status);)       MPI_Send(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);)       MPI_Recv(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &status);)     MPI_Send(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);)       MPI_Recv(&M2, 5, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &status);)     MPI_Send(&M2, 5, MPI_", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (34 1,   MPI_Type_indexed(count, blocklengths, displacements, MPI_DOUBLE, &matriz_dispersa);) (34 2,   MPI_Type_commit(&matriz_dispersa);) (36 1,     MPI_Send(&M, 1, matriz_dispersa, 1, 0, MPI_COMM_WORLD);) (40 1,     MPI_Recv(&M, 1, matriz_dispersa, 0, 0, MPI_COMM_WORLD, &status);) (52 1,   MPI_Type_free(&matriz_dispersa);) (52 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>6:   MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (20 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (20 2,   MPI_Type_commit(&conti);) (20 3,   MPI_Exscan(outbuf, inbuf, 18 + (rank % 2), MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (20 4,   MPI_Type_free(&conti);) (20 5,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (20 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (20 2,   MPI_Type_commit(&conti);) (20 3,   MPI_Scan(outbuf, inbuf, 18 + (rank % 2), MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (20 4,   MPI_Type_free(&conti);) (20 5,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_request(MPI_IN_PLACE, 0, MPI_COMM_WORLD);) (MPI_Comm_size(MPI_COMM_WORLD, &size);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (22 1,       MPI_Irecv(&received, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[i]);) (24 1,       MPI_Testall(MPI_COMM_WORLD, requests, &index_count, indices, MPI_INT, MPI_STATUS_IGNORE);) (28 1,       MPI_Barrier(MPI_COMM_WORLD);) (28 2,       MPI_Send(&index_count, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (28 3,       MPI_Barrier(MPI_COMM_WORLD);) (28 4,       MPI_Barrier(MPI_COMM_WORLD);) (28 5,       MPI_Barrier(MPI_COMM_WORLD);) (28 6,       MPI_Recv(&received, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 1,       MPI_Barrier(MPI_COMM_WORLD);) (40 2,       MPI_Send(&index_count, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (40 3,       MPI_Barrier(MPI_COMM_WORLD);) (40 4,", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,       MPI_Issend(&buffer[0], 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &requests[0]);) (18 1,       MPI_Issend(&buffer[1], 1, MPI_INT, 2, 0, MPI_COMM_WORLD, &requests[1]);) (20 1,       MPI_Issend(&buffer[2], 1, MPI_INT, 3, 0, MPI_COMM_WORLD, &requests[2]);) (21 1,       MPI_Barrier(MPI_COMM_WORLD);) (23 1,       MPI_Waitsome(3, requests, &index_count, indices, MPI_STATUS_IGNORE);) (28 1,       MPI_Barrier(MPI_COMM_WORLD);) (28 2,       MPI_Waitsome(3, requests, &index_count, indices, MPI_STATUS_IGNORE);) (38 1,       MPI_Barrier(MPI_COMM_WORLD);) (38 2,       MPI_Barrier(MPI_COMM_WORLD);) (39 1,       MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (46 1,       MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (47 1,       MPI_Barrier(MPI_COMM_WORLD);) (47 2,       MPI_Barrier(MPI_COMM_WORLD);) (52 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (40 1,       MPI_Send(&a_chunk[(i - 1) * sendcnts[rank]], sendcnts[rank + 1] + 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (40 2,       MPI_Send(&a_chunk[(i - 1) * sendcnts[rank]], sendcnts[rank + 1] + 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (54 1,   MPI_Gatherv(a_chunk, sendcnts[rank], MPI_INT, a, sendcnts, displ, MPI_INT, 0, MPI_COMM_WORLD);) (70 1,   MPI_Finalize();)             MPI_Send(&a[0], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)             MPI_Recv(&a[0], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Recv(&a[0], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Send(&a[0],", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &n_ranks);) (49 1,   MPI_Bcast(&max, 1, MPI_INT, 0, MPI_COMM_WORLD);) (49 2,   MPI_Bcast(&min, 1, MPI_INT, 0, MPI_COMM_WORLD);) (50 1,   MPI_Scatterv(a, sendcnts, displ, MPI_INT, a_chunk, sendcnts[rank], MPI_INT, 0, MPI_COMM_WORLD);) (57 1,   MPI_Reduce(c, receive, (max - min) + 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (64 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &shared_comm);) (10 4,   MPI_Comm_rank(shared_comm, &shared_rank);) (10 5,   MPI_Comm_size(shared_comm, &shared_size);) (14 1,       MPI_Info_create(&win_info);) (14 2,       MPI_Info_set(win_info, (char *) \"alloc_shm\", (char *) \"true\");) (14 3,       MPI_Win_allocate(shm_win_size, sizeof(char), win_info, MPI_COMM_WORLD, &mybase, &win);) (14 4,       MPI_Win_free(&win);) (18 1,       MPI_Win_allocate_shared(shm_win_size, sizeof(char), win_info, shared_comm, &mybase, &win);) (19 1,       MPI_Win_allocate_shared(0, sizeof(char), win_info, shared_comm, &mybase, &win);) (19 2,       MPI_Win_free(&win);) (19 3,       MPI_Win_allocate(shm_win_size, sizeof(char), win_info, (MPI_COMM_WORLD) 0, &win);) (20 1,       MPI_Win_allocate_shared(shm_win_size, sizeof(char), win_info, shared_comm, &mybase, &win);) (21 1,", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (14 1,       MPI_Info_create(&win_info);) (14 2,       MPI_Info_set(win_info, (char *) \"alloc_shm\", (char *) \"true\");) (19 1,     MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, my_rank, (MPI_Info) 0x1c000000, &shared_comm);) (19 2,     MPI_Comm_rank(shared_comm, &shared_rank);) (19 3,     MPI_Win_allocate(shm_win_size, sizeof(char), win_info, (MPI_Comm) 0x44000000, &mybase, &win);) (19 4,     MPI_Win_free(&win);) (19 5,     MPI_Win_allocate_shared(shm_win_size, sizeof(char), win_info, shared_comm, &mybase, &win);) (19 6,     MPI_Win_free(&win);) (20 1,       MPI_Win_allocate(shm_win_size, sizeof(char), win_info, (MPI_Comm) 0x44000000, &mybase, &win);) (21 1,       MPI_Win_allocate(0, sizeof(char), win_info, (MPI_Comm) 0x44000000, &mybase, &win);) (21 2,     MPI_Win_free(&win);) (22 1,       MPI_Win_allocate_shared(shm_win_size, sizeof(char), win_info, shared_comm, &mybase, &win);) (23 1,       MPI_Win_allocate_shared(0, sizeof(char), win_info, shared_comm, &mybase, &win);) (23 2,     MPI_Win_free(&win);) (24 1,       MPI_Win_allocate(shm_win_size, sizeof(char), win_info, (MPI_Comm) 0x44000000, &mybase, &win);) (25 1,       MPI_Win_allocate(shm_win_size / 2, sizeof(char), win_info, (MPI_Comm) 0x44000000, &mybase, &win);) (25 2,     MPI_Win_free(&win);) (26 1,       MPI_Win_allocate_shared(shm_win_size, sizeof(char), win_info, shared_comm, &mybase, &win);) (27 1,       MPI_Win_allocate_shared(shm_win_size / 2, sizeof(char), win_info, shared_comm, &mybase, &win);) (27 2,     MPI_Win_free(&win);) (27 3,     MPI_Comm_free(&shared_comm);) (28 1,       MPI_Info_free(&win_info);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 0,  MPI_Wtime();) (45 1,   MPI_Scatter(tab, sub_size, MPI_INT, sub_tab, sub_size, MPI_INT, 0, MPI_COMM_WORLD);) (45 0,  MPI_Wtime();) (47 1,   MPI_Reduce(&sum, &sum_tab, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (54 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 0,  MPI_Wtime();) (41 1,     MPI_Send(sub_tab, sub_size, MPI_INT, i - 1, 50, MPI_COMM_WORLD);) (41 2,     MPI_Recv(&tmp, 1, MPI_LONG_LONG_INT, i - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (45 0,  MPI_Wtime();) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(root, MPI_COMM_WORLD, buf, count);) (17 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (13 1,     MPI_Bcast(&p, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,   MPI_Reduce(&suma_parcial, &suma_total, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &yo);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,   MPI_Reduce(&suma_parcial, &suma_total, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(MPI_Init(&argc, &argv), 0, MPI_COMM_WORLD);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 3,   MPI_Get_processor_name(processor_name, &namelen);) (12 4,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,     MPI_Irecv(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[0]);) (22 2,     MPI_Irecv(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[1]);) (22 3,     MPI_Waitall(128, reqs, MPI_STATUS_IGNORE);) (23 1,     MPI_Send(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 2,     MPI_Send(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 3,     MPI_Waitall(128, reqs, MPI_STATUS_IGNORE);) (23 4,     MPI_Barrier(MPI_COMM_WORLD);) (27 1,       MPI_Irecv(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (27 2,       MPI_Irecv(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[1]);) (27 3,       MPI_Waitall(128, reqs, MPI_STATUS_IGNORE);) (27 4,       MPI_Send", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 4,   MPI_Get_processor_name(processor_name, &namelen);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 1,     MPI_Irecv(buf0, 128, MPI_INT, 1, 1, MPI_COMM_WORLD, &reqs[0]);) (23 2,     MPI_Irecv(buf1, 128, MPI_INT, 1, 2, MPI_COMM_WORLD, &reqs[1]);) (23 3,     MPI_Irecv(buf2, 128, MPI_INT, 1, 3, MPI_COMM_WORLD, &reqs[2]);) (25 1,       MPI_Send(&flipbit, 1, MPI_INT, 1, i, MPI_COMM_WORLD);) (28 1,         MPI_Testany(i, reqs, &done, &flag, &status);) (39 1,       MPI_Recv(&flipbit, 1, MPI_INT, 0, i, MPI_COMM_WORLD, &status);) (39 2,       MPI_Send(buf0, 128, MPI_INT, 0, i, MPI_COMM_WORLD);) (42 1,   MPI_Barrier(MPI_COMM_WORLD);) (42 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_Init(&argc, &argv);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (29 1,   MPI_Reduce(&sum, &sumTotal, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (29 1,   MPI_Reduce(&sum, &sumTotal, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (29 2,   MPI_Reduce(&sum, &prodTotal, 1, MPI_LONG, MPI_PROD, size - 1, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (22 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (22 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 0,  MPI_Wtime();) (5 0,  MPI_Wtime();) (6 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 0,  MPI_Wtime();) (5 0,  MPI_Wtime();) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_create_test_init();) (test_comm_create_test_init_thread(MPI_THREAD_SINGLE, &provided);) (test_comm_create_test_init_thread(MPI_THREAD_SINGLE, &provided);) (38 1,   MPI_Finalize();)                 MPI_Abort(MPI_COMM_WORLD, 1);)         MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (38 2,   MPI_Barrier(MPI_COMM_WORLD);) (38 3,   MPI_Win_allocate(win_cnt, sizeof(double), win_size, MPI_INFO_NULL, MPI_COMM_WORLD, &my_base, &win);) (38 4,   MPI_Win_lock_all(0, win);) (38 5,   MPI_Win_sync(win);) (38 6,   MPI_Barrier(MPI_COMM_WORLD);) (38 7,   MPI_Win_sync(win);) (38 8,   MPI_Barrier(MPI_COMM_WORLD);) (38 9,   MPI_Win_unlock_all(win);) (38 10,   MPI_Win_free(&win);) (38 11,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (38 12,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (14 1,     MPI_Barrier(MPI_COMM_WORLD);) (14 2,     MPI_Abort(MPI_COMM_WORLD, 1);) (31 1,   MPI_Barrier(MPI_COMM_WORLD);) (32 1,   MPI_Barrier(MPI_COMM_WORLD);) (32 2,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (8 3,   MPI_Comm_dup(MPI_COMM_WORLD, &comm_comm);) (8 4,   MPI_Comm_set_errhandler(comm_comm, MPI_ERRORS_RETURN);) (8 5,   MPI_Comm_rank(comm_comm, &my_rank);) (8 6,   MPI_Comm_size(comm_comm, &comm_size);) (8 7,   MPI_Comm_free(&comm_comm);) (8 8,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (8 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (29 1,   MPI_Alltoall(my_values2, 2032 / world_size, MPI_INT, my_values2, 2032 / world_size, MPI_INT, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)             MPI_Ssend(&my_value2, 1, MPI_INT, my_values2, 2032 / world_size, MPI_INT, 1, MPI_COMM_WORLD);)             MPI_Recv(&my_value1, 1, MPI_INT, my_values1, 2032 / world_size, MPI_INT, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (42 1,   MPI_Finalize();)             MPI_Ssend(&my_value2, 1, MPI_INT, my_values2, 2032 / world_size, MPI_INT, 1, MPI_COMM_WORLD);)             MPI_Recv(&my_value1, 1, MPI_INT, my_values1, 2032 / world_size, MPI_INT, 1, MPI_COMM_WORLD, MPI_STATUS", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (18 2,   MPI_Group_excl(world_group, size / 2, excl, &even_group);) (18 3,   MPI_Group_free(&world_group);) (20 1,     MPI_Comm_create_group(MPI_COMM_WORLD, even_group, 0, &even_comm);) (20 2,     MPI_Barrier(even_comm);) (20 3,     MPI_Comm_free(&even_comm);) (21 1,   MPI_Group_free(&even_group);) (21 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (18 2,   MPI_Group_excl(world_group, size / 2, excl, &even_group);) (18 3,   MPI_Group_free(&world_group);) (20 1,     MPI_Comm_create_group(MPI_COMM_WORLD, even_group, 0, &even_comm);) (20 2,     MPI_Barrier(even_comm);) (20 3,     MPI_Comm_free(&even_comm);) (21 1,   MPI_Group_free(&even_group);) (21 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (33 0,  MPI_Wtime();) (38 1,       MPI_Irecv(&local_tab[0], n, MPI_INT, dest_rank, 0, MPI_COMM_WORLD, &req[0]);) (38 2,       MPI_Waitall(n, req, MPI_STATUS_IGNORE);) (42 0,  MPI_Wtime();) (54 1,       MPI_Send(&stop_value, 1, MPI_INT, dest_rank, 0, MPI_COMM_WORLD);) (54 2,       MPI_Waitall(n, req, MPI_STATUS_IGNORE);) (57 1,       MPI_Irecv(&local_tab[0], n, MPI_INT, 0, 0, MPI_COMM_WORLD, &req[0]);) (57 2,       MPI_Waitall(n, req, MPI_STATUS_IGNORE);) (59 1,       MPI_Send(&stop_value, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (59 2,       MPI_Waitall(n, req, MPI_STATUS_IGNORE);) (73 1,   MPI_Finalize();)             MPI_Isend(&t2, 1, MPI_DOUBLE, dest_rank, 0, MPI_COMM_WORLD, &req[0]);) (73 2,       MPI_Waitall(n", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (32 0,  MPI_Wtime();) (37 1,       MPI_Recv(&ready, 1, MPI_INTEGER, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,       MPI_Irecv(&max_values[task], 1, MPI_INTEGER, dest_rank, 0, MPI_COMM_WORLD, &req[task]);) (38 2,       MPI_Send(tab[task], n, MPI_INTEGER, dest_rank, 0, MPI_COMM_WORLD);) (43 1,       MPI_Recv(&ready, 1, MPI_INTEGER, dest_rank, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (44 1,       MPI_Send(&stop_value, 1, MPI_INTEGER, dest_rank, 0, MPI_COMM_WORLD);) (46 1,     MPI_Waitall(m, req, MPI_STATUS_IGNORE);) (46 0,  MPI_Wtime();) (53 1,       MPI_Send(&rank, 1, MPI_INTEGER, 0, 1, MPI_COMM_WORLD);) (53 2,       MPI_Recv(local_tab, n, MPI_INTEGER, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (68 1,       MPI_Send(&max, 1, MPI_INTEGER, 0, 0, MPI_COMM_WORLD);) (71 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace(rank, size, &flag);) (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,       MPI_Irecv(&round, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (18 2,       MPI_Wait(&request, &status);) (23 1,       MPI_Test(&request, &flag, &status);) (28 1,       MPI_Test(&request, &flag, &status);) (33 1,         MPI_Test(&request, &flag, &status);) (57 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 1,       MPI_Isend(&start, 1, MPI_INT, 1, 100 + i, MPI_COMM_WORLD, &request);) (23 1,       MPI_Irecv(&total, 1, MPI_INT, (rank == 0)? (size - 1) : (rank - 1), 100 + i, MPI_COMM_WORLD, &request);) (28 1,       MPI_Wait(&request, &status);) (32 1,           MPI_Isend(&total, 1, MPI_INT, (rank == (size - 1))? (0) : (rank + 1), 100 + i, MPI_COMM_WORLD, &request);) (53 1,       MPI_Isend(&total, 1, MPI_INT, (rank == (size - 1))? (0) : (rank + 1), 100 + i, MPI_COMM_WORLD, &request);) (64 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_Init(rank, buffer_size);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &buffer_size);) (13 1,       MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (15 1,         MPI_Send(buffer, buffer_size, MPI_INT, 1, 0, MPI_COMM_WORLD);) (15 2,         MPI_Recv(buffer, buffer_size, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 0,  MPI_Wtime();) (26 1,       MPI_Barrier(MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (26 1,       MPI_Barrier(MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (26 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,       MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (15 1,         MPI_Send(buffer, buffer_size, MPI_INT, 1, k, MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (27 1,       MPI_Barrier(MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (29 1,         MPI_Recv(buffer, buffer_size, MPI_INT, 0, k, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &npes);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (30 1,       MPI_Send(&size1, 1, MPI_INT, size1 + rank, 0, MPI_COMM_WORLD);) (30 2,       MPI_Send(other, size1, MPI_INT, size2, 0, MPI_COMM_WORLD);) (30 3,       MPI_Send(cur_npes, size2, MPI_INT, size2, 0, MPI_COMM_WORLD);) (35 1,     MPI_Recv(subd, size2, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &npes);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Bcast(&n, sizeof(int), MPI_INT, 0, MPI_COMM_WORLD);) (38 1,       MPI_Send(&size1, 1, MPI_INT, rank - some, 100, MPI_COMM_WORLD);) (52 1,       MPI_Send(other, size1, MPI_INT, rank - some, 110, MPI_COMM_WORLD);) (66 1,       MPI_Recv(&size1, 1, MPI_INT, rank + some, 100, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (68 1,       MPI_Recv(other, size1, MPI_INT, rank + some, 110, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (91 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(33 1,   MPI_Init(&argc, &argv);) (33 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (33 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (84 1,   MPI_Barrier(MPI_COMM_WORLD);) (84 0,  MPI_Wtime();) (84 1,   MPI_Bcast(bias, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (84 2,   MPI_Bcast(bias,", "label": " (33 1,   MPI_Init(&argc, &argv);) (33 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (33 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (86 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Get_processor_name(processor_name, &namelen);) (15 1,       MPI_Finalize();) (24 1,       MPI_Recv(&i, 1, MPI_INT, j, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 2,       MPI_Recv(&i, 1, MPI_INT, j, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)         MPI_Send(&j, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (27 2,   MPI_Finalize();)       MPI_Recv(&j, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Send(&j, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)       MPI_Recv(&i, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Send(&j, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);)       MPI_Recv(&i, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Send(&j, 1, MPI_INT, 0, 0, MPI_", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (15 1,       MPI_Barrier(MPI_COMM_WORLD);) (23 1,       MPI_Barrier(MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and(time1,  MPI_Wtime() - time1);) (13 1,   MPI_Init(&argc, &argv);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (14 3,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (15 1,   MPI_Scatter(original_array, size, MPI_INT, sub_array, size, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,       MPI_Send(sub_array, size, MPI_INT, i, 0, MPI_COMM_WORLD);) (21 2,       MPI_Recv(other_array, size, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,     MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (26 1,     MPI_Bcast(original_array, size, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,     MPI_Barrier(MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (35 1,       MPI_Recv(sub_array, size, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 2,       MPI_Barrier(MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (37 1,       MPI_Send(sub_array, size, MPI_INT, 0, 0, MPI_COMM_WORLD);) (37 2,       MPI_", "label": " (5 1,   MPI_Init(&argc, &argv);) (14 0,  MPI_Wtime();) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 1,   MPI_Scatter(original_array, size, MPI_INT, sub_array, size, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,   MPI_Gather(sub_array, size, MPI_INT, sorted, size, MPI_INT, 0, MPI_COMM_WORLD);) (37 0,  MPI_Wtime();) (45 1,   MPI_Barrier(MPI_COMM_WORLD);) (45 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,     MPI_Send(&x, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&x, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, stat);) (17 1,     MPI_Recv(&x, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, stat);) (17 2,     MPI_Send(&x, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,     MPI_Send(&x, 1, MPI_INT, 1, 777, MPI_COMM_WORLD);) (15 2,     MPI_Send(&x, 1, MPI_INT, 2, 777 + 1, MPI_COMM_WORLD);) (17 1,     MPI_Recv(&x, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, stat);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Send(&x, 1, MPI_INT, 1, 0, newComm);) (16 1,     MPI_Recv(&x, 1, MPI_INT, 0, 0, newComm, &stat);) (17 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Comm_split(MPI_COMM_WORLD, color[rank], rank, &newComm);) (8 2,   MPI_Comm_size(newComm, &newSize);) (8 3,   MPI_Comm_rank(newComm, &newRank);) (13 1,     MPI_Send(&x, 1, MPI_INT, 1, 777, newComm);) (16 1,     MPI_Recv(&x, 1, MPI_INT, 0, 777, newComm, &stat);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_mpi(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Barrier(MPI_COMM_WORLD);) (8 0,  MPI_Wtime();) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (13 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Bcast(data, num_elements, MPI_INT, 0, MPI_COMM_WORLD);) (8 2,   MPI_Barrier(MPI_COMM_WORLD);) (8 0,  MPI_Wtime();) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &nProcesses);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &currProcess);) (61 1,   MPI_Barrier(MPI_COMM_WORLD);) (64 1,   MPI_Barrier(MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &currProcess);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &nProcesses);) (65 1,   MPI_Reduce(&totalAlive, &finalAlive, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 0,  MPI_Wtime();) (21 1,       MPI_Send(A[i], (600 / size) * myrank, MPI_FLOAT, i, 1, MPI_COMM_WORLD);) (21 2,       MPI_Send(B[i], (600 / size) * myrank, MPI_FLOAT, i, 1, MPI_COMM_WORLD);) (24 1,       MPI_Recv(A[i], (600 / size) * myrank, MPI_FLOAT, i, 1, MPI_COMM_WORLD, &status);) (24 2,       MPI_Recv(B[i], (600 / size) * myrank, MPI_FLOAT, i, 1, MPI_COMM_WORLD, &status);) (43 1,     MPI_Reduce(&prod, &matrixTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (43 2,     MPI_Reduce(&prod, &matrixEndTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);)", "label": " (13 0,  MPI_Wtime();) (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (42 0,  MPI_Wtime();) (42 1,   MPI_Reduce(&myrank, &operatorCountSum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (42 2,   MPI_Barrier(MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,     MPI_Send(outmsg, 2, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (17 2,     MPI_Recv(inmsg, 2, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (24 1,     MPI_Recv(inmsg, 2, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (25 1,     MPI_Send(outmsg, 2, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (27 1,   MPI_Get_count(&Stat, MPI_CHAR, &count);) (28 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,     MPI_Send(outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (17 2,     MPI_Recv(inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (24 1,     MPI_Recv(inmsg, 1, MPI_CHAR, source, tag, MPI_COMM_WORLD, &Stat);) (27 1,     MPI_Send(outmsg, 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (28 1,   MPI_Get_count(&Stat, MPI_CHAR, &count);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (22 1,       MPI_Send(&nprime, 1, MPI_INT, ip, 0, MPI_COMM_WORLD);) (22 2,       MPI_Send(&ntest, 1, MPI_INT, nd, 0, MPI_COMM_WORLD);) (22 3,       MPI_Send(&nd, 1, MPI_INT, nd, 0, MPI_COMM_WORLD);) (22 4,       MPI_Send(&ntest, 1, MPI_INT, nd, 0, MPI_COMM_WORLD);) (30 1,       MPI_Recv(&nprime, 1, MPI_INT, ip, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,   MPI_Finalize();)         MPI_Recv(&nprime, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Recv(&ntest, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)       MPI_Recv(&ntest, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Recv(&ntest, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Recv(&ntest, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (26 1,   MPI_Send(&nd, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (30 1,       MPI_Recv(&numdiv[ip], 1, MPI_INT, ip, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (11 1,   MPI_Win_create(&buf, sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (11 2,   MPI_Win_set_errhandler(win, MPI_ERRORS_RETURN);) (11 3,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (11 4,   MPI_Win_post(world_group, 0, win);) (11 5,   MPI_Win_start(world_group, 0, win);) (14 1,   MPI_Win_complete(win);) (14 0,  MPI_Get(&my_buf, 1, MPI_INT, 0, 0, 1, MPI_INT, win);) (21 1,       MPI_Error_class(err, &err_class);) (25 1,         MPI_Error_string(err, str, &len);) (31 1,         MPI_Error_string(err, str, &len);) (38 1,   MPI_Win_complete(win);) (38 2,   MPI_Win_wait(win);) (38 3,   MPI_Win_free(&win);) (39 1,     MPI_Group_free(&world_group);) (39 2,     MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (84 1,   MPI_Finalize();)         return;\n85:   }", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (10 4,   MPI_Win_create(&buf, sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (10 5,   MPI_Win_set_errhandler(win, MPI_ERRORS_RETURN);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Get(&my_buf, 1, MPI_INT, (rank + 1) % nproc, 0, 1, MPI_INT, win);) (12 3,     MPI_Barrier(MPI_COMM_WORLD);) (15 1,     MPI_Barrier(MPI_COMM_WORLD);) (20 1,       MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 0,  MPI_Win_lock(2, 0, 1, win);) (27 1,         MPI_Error_class(err, &err_class);) (31 1,           MPI_Error_string(err, str, &len);) (42 1,       MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (42 0,  MPI_Get(&my_buf, 1, MPI_INT, 0, 0, 1, MPI_INT, win);) (49 1,         MPI_Error_class(err, &err_class);) (53 1,           MPI_Error_string(err, str, &len);) (64 1,       MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (64 0,  MPI_Win_unlock(0, win);) (71 1,         MPI_Error_class(err, &err_class);) (75 1,           MPI_Error_string(err, str, &len);) (81 1,     MPI_Win_fence(0, win);) (82 1,   MPI_Win_fence(0, win);) (82 2,   MPI_Win_fence(0, win);) (82 3,   MPI_Win_free(&win);) (82 4,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (84 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Recv(&data, 1, MPI_INT, i, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,     MPI_Send(&data, 1, MPI_INT, 0, rank, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Recv(data, 1, MPI_INT, -1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,     MPI_Send(&data, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (33 1,     MPI_Bcast(m->SquareMatrix[i], m->order, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (36 0,  MPI_Wtime();) (42 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (33 1,     MPI_Bcast(m->SquareMatrix[i], m->order, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (36 0,  MPI_Wtime();) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_11 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(comm, &process.q);) (10 2,   MPI_Comm_rank(comm, &process.my_rank);) (41 1,     MPI_Abort(comm, 1);) (43 1,     MPI_Abort(comm, 1);) (44 1,   MPI_Bcast(&process.N, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 2,   MPI_Bcast(&process.q, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 3,   MPI_Bcast(&process.seed, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,     MPI_Allgather(&process.X, 1, MPI_INT, &solution[0], 1, MPI_INT, MPI_COMM_WORLD);) (47 2,     MPI_Allgather(&process.Y, 1, MPI_INT, &solution[1], 1, MPI_INT, MPI_COMM_WORLD);) (47 3,     MPI_Allgather(&process.X, 1, MPI_INT, &solution[2], 1, MPI_INT, MPI_COMM_WORLD);) (47 4,     MPI_Allgather(&process.Y, 1, MPI_INT, &solution[3], 1, MPI_INT, MPI_COMM_WORLD);) (47 5,     MPI_Allgather(&process.X, 1, MPI_INT, &solution[4], 1, MPI_INT, MPI_COMM_WORLD);) (47 6,     MPI_Allgather(&process.Y, 1, MPI_INT, &solution[5], 1, MPI_INT, MPI_COMM_WORLD);) (47 7,     MPI_All", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(comm, &process.P);) (10 3,   MPI_Comm_rank(comm, &process.Pid);) (33 1,         MPI_Abort(comm, 0);) (43 0,  MPI_Wtime();) (44 1,   MPI_Bcast(&process.N, 1, MPI_INT, 0, comm);) (44 2,   MPI_Bcast(&process.q, 1, MPI_INT, 0, comm);) (49 1,       MPI_Recv(grid, process.Ngrid * process.Ngrid, MPI_INT, 0, 1, comm, MPI_STATUS_IGNORE);) (54 1,   MPI_Comm_split(comm, (flag)? (0) : (-32766), process.Pid, &alg_comm);) (55 1,     MPI_Comm_rank(alg_comm, &process.algPid);) (57 1,     MPI_Recv(solution, process.N * process.N, MPI_INT, 1, 1, comm, MPI_STATUS_IGNORE);) (64 1,     MPI_Gather(grid, process.Ngrid * process.Ngrid, MPI_INT, solution, process.Ngrid * process.Ngrid, MPI_INT, 0, alg_comm);) (65 1,       MPI_Send(solution, process.N * process.N, MPI_INT, 0, 1, comm);) (68 0,  MPI_Wtime();) (75 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (28 1,       MPI_Recv(&integral, 1, MPI_FLOAT, source, tag, MPI_COMM_WORLD, &status);) (33 1,     MPI_Send(&integral, 1, MPI_FLOAT, dest, tag, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)                     MPI_COMM_WORLD);)", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (28 1,       MPI_Recv(&integral, 1, MPI_FLOAT, source, tag, MPI_COMM_WORLD, &status);) (33 1,     MPI_Send(&integral, 1, MPI_FLOAT, dest, tag, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (4 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 0,  MPI_Scatter(arr, 16, MPI_INT, arr, 16, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,     MPI_Scatter(&sum, 1, MPI_INT, sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 2,     MPI_Scatter(&arr, 16, MPI_INT, arr, 16, MPI_INT, 0, MPI_COMM_WORLD);) (28 0,  MPI_Scatter(&sum, 1, MPI_INT, sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,     MPI_Scatter(&sum, 1, MPI_INT, sums, 1, MPI_INT, 0, MPI_COMM_WORLD);) (31 1,     MPI_Scatter(&sum, 1, MPI_INT, sums, 1, MPI_INT, 0, MPI_COMM_WORLD);) (32 1,     MPI_Scatter(&sum, 1, MPI_INT, sum, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 1,   MPI_Reduce(&sum, &total", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 0,  MPI_Scatter(full_arr, 16, MPI_INT, arr, 16, MPI_INT, 0, MPI_COMM_WORLD);) (28 0,  MPI_Gather(&sum, 1, MPI_INT, sums, 1, MPI_INT, 0, MPI_COMM_WORLD);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>\u00e9dia tia tia;\n43:   MPI_Comm comm_slave;\n44:   MPI_Comm comm_worker;\n45:   MPI_Request request;\n46:   MPI_Status status;\n47:   int chunk_size = n / nprocs;\n48:   if (rank == 0)\n49:   {\n50:     for (int i = 0; i < chunk_size; i++)\n51:     {\n52:       pA[i] = pB[i] - (A[i] * B[i]);\n53:     }\n54: \n55:   }\n56:   if (rank == 0)\n57:   {\n58:     for (int i = 0; i < n; i++)\n59:     {\n60:       printf(\"%d \", pA[i]);\n61:     }\n62: \n63:     printf(\"\\n\");\n64:     printf(\"A = \");\n65:     for (int i = 0; i < chunk_size; i++)\n66:     {\n67:       printf(\"%d \", A[i]);\n68:     }\n69: \n70:     printf(\"\\n\");\n71:     printf(\"B = \");\n72:     for (int i = 0; i < chunk_size; i++)\n73:     {\n74:       printf(\"%d \", B[i]);\n75:     }\n76: \n77:     printf(\"\\n\");\n78:     free(A);\n79:     free(B);\n80:     free(pA);\n81:     free(pB);\n82:     free(pC);\n83:   }\n84:   return 0;\n85: }\n86: \n87:", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (23 1,   MPI_Get_processor_name(name, &len);) (33 1,   MPI_Scatter(A, chunk, MPI_FLOAT, pA, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (33 2,   MPI_Scatter(B, chunk, MPI_FLOAT, pB, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (34 1,   MPI_Gather(pB, chunk, MPI_FLOAT, B, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandlerandler", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (3 3,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,     MPI_Barrier(MPI_COMM_WORLD);) (22 1,       MPI_Barrier(MPI_COMM_WORLD);) (27 1,       MPI_Barrier(MPI_COMM_WORLD);) (37 1,     MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 1,   MPI_Finalize();)             MPI_Type_contiguous(3, MPI_INT, &type);) (13 2,   MPI_Wait(&req, &stat);) (14 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (14 2,   MPI_Wait(&req, &stat);) (20 1,     MPI_Isend(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (21 1,   MPI_Finalize();)             MPI_Type_free(&type);) (21 2,   MPI_Finalize();)             MPI_Type_free(&buffer);) (21 3,   MPI_Finalize();)             MPI_Type_free(&type);) (21 4,   MPI_Finalize();)             MPI_Type_free(&buffer);) (21 5,   MPI_Finalize();)             MPI_Type_free(&type);", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, null_type, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &req);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &stat);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_UNSIGNED, 1, 124523, MPI_COMM_WORLD, &req);) (8 2,     MPI_Wait(&req, &stat);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>at2n   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Send(&buffer_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Send(&buffer_sent, 1, MPI_INT, received, 0, MPI_COMM_WORLD);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Send(&buffer_sent, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (11 0,  MPI_Send(\"No Errors\", 10, MPI_CHAR, 2, 0, MPI_COMM_WORLD);) (18 0,  MPI_Recv(buf, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (11 0,  MPI_Send(\"No Errors\", 10, MPI_CHAR, 2, 0, MPI_COMM_WORLD);) (18 0,  MPI_Recv(buf, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_solve(MPI_COMM_WORLD, sub_array, division, MPI_COMM_WORLD);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (28 1,         MPI_Send(&array[(i - 1) * division], division * (sizeof(int)), MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (28 2,         MPI_Recv(&sub_array[division], 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &Stat);) (36 1,       MPI_Recv(sub_array, division, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &Stat);) (36 2,       MPI_Send(&sub_array[division], 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD);) (45 1,       MPI_Send(&sub_array[division], 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (45 2,       MPI_Recv(&sub_array[division], 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &Stat);) (45 3,       MPI_Recv(&sub_array[division + rest], division, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &Stat);) (45 4,       MPI_Send(&sub_array[division], 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (55 1,       MPI_Recv(&sub_array[division], 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &Stat);", "label": " (6 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (28 1,         MPI_Send(sub_array, division, MPI_INT, rank, rank, MPI_COMM_WORLD);) (40 1,           MPI_Send(sub_array_extra, division + rest, MPI_INT, rank, rank, MPI_COMM_WORLD);) (44 1,           MPI_Send(sub_array, division, MPI_INT, rank, rank, MPI_COMM_WORLD);) (50 1,       MPI_Recv(&array_return[rank - 1], 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &Stat);) (50 2,       MPI_Get_count(&Stat, MPI_INT, &counter);) (67 1,     MPI_Recv(sub_array_extra, division + rest, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (67 2,     MPI_Get_count(&Stat, MPI_INT, &counter);) (73 1,     MPI_Send(&averege, 1, MPI_INT, 0, myrank, MPI_COMM_WORLD);) (78 1,     MPI_Recv(sub_array, division, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (78 2,     MPI_Get_count(&Stat, MPI_INT, &counter);) (84 1,     MPI_Send(&averege, 1, MPI_INT, 0, myrank, MPI_COMM_WORLD);) (85 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (15 1,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &sbuf);) (16 1,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &rbuf);) (26 1,   MPIX_Allreduce_x(sbuf, rbuf, n, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (28 1,   MPI_Free_mem(sbuf);) (28 2,   MPI_Free_mem(rbuf);) (28 3,   MPI_Finalize();)         MPI_Ssend(sbuf, n, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);) (28 4,   MPI_Allreduce(&errors, &total_int_max, 1, MPI_INT, MPI_MAX, MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)         MPI_Ssend(sbuf, n, MPI_DOUBLE, 0, 2, MPI_COMM_WORLD);) (60 2,   MPI_Free_mem(sbuf);) (60 3,   MPI_Free_mem(rbuf);) (60 4,   MPI_Finalize();)         MPI_Ssend(sbuf, n, MPI_DOUBLE, 0, 3, MPI_COMM_WORLD);) (60 5,   MPI_Allreduce", "label": " (3 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Finalize();) (16 1,   MPI_Alloc_mem(bytes, MPI_INFO_NULL, &sbuf);) (16 2,   MPI_Alloc_mem(bytes, MPI_INFO_NULL, &rbuf);) (26 1,   MPIX_Reduce_x(sbuf, rbuf, n, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (42 1,   MPIX_Allreduce_x(sbuf, rbuf, n, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (56 1,   MPI_Free_mem(sbuf);) (56 2,   MPI_Free_mem(rbuf);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,       MPI_Barrier(MPI_COMM_WORLD);) (21 1,       MPI_Rsend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);) (26 1,       MPI_Irecv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, &request);) (27 1,       MPI_Barrier(MPI_COMM_WORLD);) (27 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)         MPI_Abort(MPI_COMM_WORLD, 1);)         MPI_Rsend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);)       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Rsend(&buffer_sent, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD);)       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Barrier(MPI_COMM_WORLD);)       MPI_Rsend(&buffer_sent, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WOR", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,       MPI_Isend(&buffer_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &request);) (20 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (26 1,       MPI_Recv(&received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init ((&argc, &argv);) (22 0,  MPI_Init(&argc, &argv);) (26 0,  MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (27 0,  MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (47 0,  MPI_Barrier(MPI_COMM_WORLD);) (47 0,  MPI_Wtime();) (59 0,  MPI_Gather(&sendbuffsum, 1, MPI_DOUBLE, recvbuff, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (62 0,  MPI_Gather(&recvtime, 1, MPI_DOUBLE, recvtimes, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (69 0,  MPI_Finalize();)", "label": " (22 1,   MPI_Init(&argc, &argv);) (22 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (22 3,   MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (48 0,  MPI_Gather(&sendbuffsum, 1, MPI_DOUBLE, sendbuffsums, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (59 0,  MPI_Wtime();) (61 0,  MPI_Recv(recvbuff, buffsize, MPI_DOUBLE, ntasks - 1, -1, MPI_COMM_WORLD, &status);) (61 0,  MPI_Wtime();) (61 0,  MPI_Send(sendbuff, buffsize, MPI_DOUBLE, taskid + 1, 0, MPI_COMM_WORLD);) (66 0,  MPI_Send(sendbuff, buffsize, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (66 0,  MPI_Recv(recvbuff, buffsize, MPI_DOUBLE, taskid - 1, -1, MPI_COMM_WORLD, &status);) (66 0,  MPI_Wtime();) (69 0,  MPI_Recv(recvbuff, buffsize, MPI_DOUBLE, taskid - 1, -1, MPI_COMM_WORLD, &status);) (69 0,  MPI_Wtime();) (69 0,  MPI_Send(sendbuff, buffsize, MPI_DOUBLE, taskid + 1, 0, MPI_COMM_WORLD);) (70 1,   MPI_Barrier(MPI_COMM_WORLD);) (77 0,  MPI_Gather(&recvbuffsum, 1, MPI_DOUBLE, recvbuffsums, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (77 0,  MPI_Gather(&recvtime, 1, MPI_DOUBLE, recvtimes, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (94 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>fs_Init(0, 0);) (6 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_get_parent(&parentcomm);) (10 1,     MPI_Comm_spawn(argv[0], (char **) 0, 1, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, (int *) 0);) (16 1,     MPI_Send(&procs[0], 1, MPI_INT, 0, 0, intercomm);) (16 2,     MPI_Comm_disconnect(&intercomm);) (23 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_get_parent(&parentcomm);) (14 1,       MPI_Info_create(&infos[i]);) (14 2,       MPI_Info_set(infos[i], \"hosts\", \"localhost\");) (16 1,     MPI_Comm_spawn_multiple(2, cmds, (char ***) 0, procs, infos, 0, MPI_COMM_WORLD, &intercomm, (int *) 0);) (19 1,       MPI_Info_free(&infos[i]);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>'t4(0, \"MPI_Init\");) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (23 1,     MPI_Scatterv(data, sendcounts, displs, MPI_INT, buffer, sendcounts[rank], MPI_INT, 0, MPI_COMM_WORLD);) (23 2,     MPI_Scatterv(0, 0, 0, MPI_INT, buffer, sendcounts[rank], MPI_INT, 0, MPI_COMM_WORLD);) (27 1,       MPI_Send(&to, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (27 2,       MPI_Send(&to, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (27 3,       MPI_Send(&to, 1, MPI_INT, i, 2, MPI_COMM_WORLD);) (27 4,       MPI_Send(&to, 1, MPI_INT, i, 3, MPI_COMM_WORLD);) (37 1,     MPI_Gatherv(buffer, sendcounts[rank], MPI_INT, &buffer, recvcounts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (37 2,     MPI_Gatherv(0, 0, MPI_INT, 0, 0, 0, MPI_INT, 0, MPI_COMM_WORLD);) (37 3,     MPI_Gatherv(0, 0, MPI_INT, 0, 0, 0, MPI_INT, 0, MPI_COMM_WORLD);) (37 4,     MPI_Gatherv(0, 0, MPI_INT, 0, 0, 0, MPI_INT, 0, MPI_COM", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (43 1,   MPI_Scatterv(data, sendcounts, displs, MPI_INT, buffer, count, MPI_INT, 0, MPI_COMM_WORLD);) (61 1,   MPI_Gatherv(buffer, count, MPI_INT, results, sendcounts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (83 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (37 1,       MPI_Send(&offset, 1, MPI_INT, dest, tag1, MPI_COMM_WORLD);) (37 2,       MPI_Send(&data[offset], chunksize, MPI_DOUBLE, dest, tag2, MPI_COMM_WORLD);) (44 1,       MPI_Recv(&offset, 1, MPI_INT, source, tag1, MPI_COMM_WORLD, &status);) (44 2,       MPI_Recv(&data[offset], chunksize, MPI_DOUBLE, source, tag2, MPI_COMM_WORLD, &status);) (47 1,     MPI_Reduce(&mysum, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (64 1,     MPI_Recv(&offset, 1, MPI_INT, source, tag1, MPI_COMM_WORLD, &status);) (64 2,     MPI_Recv(&data[offset], chunksize, MPI_DOUBLE, source, tag2, MPI_COMM_WORLD, &status);) (66 1,     MPI_Send(&offset, 1, MPI_INT, dest, tag1, MPI_COMM_WORLD);) (66 2,     MPI_Send(&data[offset], chunksize, MPI_DOUBLE, 0, tag2, MPI_COMM", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (36 1,       MPI_Send(&offset, 1, MPI_INT, dest, tag1, MPI_COMM_WORLD);) (36 2,       MPI_Send(&data[offset], chunksize, MPI_DOUBLE, dest, tag2, MPI_COMM_WORLD);) (45 1,       MPI_Recv(&offset, 1, MPI_INT, source, tag1, MPI_COMM_WORLD, &status);) (45 2,       MPI_Recv(&data[offset], chunksize, MPI_DOUBLE, source, tag2, MPI_COMM_WORLD, &status);) (47 1,     MPI_Reduce(&mysum, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (63 1,     MPI_Recv(&offset, 1, MPI_INT, source, tag1, MPI_COMM_WORLD, &status);) (63 2,     MPI_Recv(&data[offset], chunksize, MPI_DOUBLE, source, tag2, MPI_COMM_WORLD, &status);) (65 1,     MPI_Send(&offset, 1, MPI_INT, dest, tag1, MPI_COMM_WORLD);) (65 2,     MPI_Send(&data[offset], chunksize, MPI_DOUBLE, 0, tag2, MPI_COMM_WORLD);) (65 3,     MPI_Reduce(&mysum, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[0] = -1;\n44:   status =\n45:   if (status!= 0)\n46:   {\n47:     fprintf(stderr, \"Unable to create the MPI-%s\\n\", nodeName);\n48:     return 1;\n49:   }\n50:   dataRecv = -1;\n51:   status =\n52:   if (status!= 0)\n53:   {\n54:     fprintf(stderr, \"Unable to create the MPI-%s\\n\", nodeName);\n55:     return 1;\n56:   }\n57:   dataSend = (char *) malloc((sizeof(char)) * 100);\n58:   if (dataSend == 0)\n59:   {\n60:     fprintf(stderr, \"malloc failed.\\n\");\n61:     return 1;\n62:   }\n63:   if (MPI_COMM_NULL)\n64:   {\n65:     fprintf(stderr, \"Unable to create the MPI-%s\\n\", nodeName);\n66:     free(dataRecv);\n67:   }\n68:   else\n69:   {\n70:     fprintf(stderr, \"Unable to create the MPI-%s\\n\", nodeName);\n71:     return 1;\n72:   }\n73:   dataSend = (char *) malloc((sizeof(char)) * 100);\n74:   if (dataSend == 0)\n75:   {\n76:     fprintf(stderr, \"Unable to create the MPI-%s\\n\", nodeName);\n77:     return 1;\n78:   }\n79:   for (dataRecv = 0; dataRecv < 100; dataRecv++)\n80:   {\n81:     if (dataRecv!= (MPI_COMM_NULL))\n82:", "label": " (7 0,  MPI_Init(&argc, &argv);) (12 0,  MPI_Comm_get_parent(&parent);) (14 1,  \"MPI_Comm_get_parent() return an error\\n\");) (21 0,  MPI_Recv(&dataRecv, 1, MPI_INT, 0, 0, parent, MPI_STATUS_IGNORE);) (23 1,  \"MPI_Recv() return an error on node '%s', destroying thread\\n\", nodeName);) (25 0,  MPI_Send(&dataRecv, 1, MPI_INT, 0, 0, parent);) (27 1,  \"MPI_Send() return an error on node '%s', destroying thread\\n\", nodeName);) (29 0,  MPI_Send(0, 0, MPI_BYTE, 0, 0x0eedb00f, parent);) (31 1,  \"MPI_Send() return an error on node '%s' while notifying the termination\\n\", nodeName);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>091,   MPI_Init(0, 0);) (17 1,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 2,   MPI_Finalize();)              MPI_Finalize();) (35 1,     MPI_Finalize();) (38 1,     MPI_Finalize();)             MPI_Finalize();) (39 1,     MPI_Barrier(MPI_COMM_WORLD);) (39 2,     MPI_Finalize();) (43 1,     MPI_Barrier(MPI_COMM_WORLD);) (43 2,     MPI_Finalize();) (50 1,     MPI_Barrier(MPI_COMM_WORLD);) (50 2,     MPI_Finalize();) (54 1,     MPI_Barrier(MPI_COMM_WORLD);) (54 2,     MPI_Finalize();)             MPI_Finalize();) (58 1,     MPI_Barrier(MPI_COMM_WORLD);) (58 2,     MPI_Finalize();)             MPI_Finalize();) (79 1,     MPI_Barrier(MPI_COMM_WORLD);) (79 2,     MPI_Finalize();)               MPI_Finalize();) (99 1,     MPI_Barrier(MPI_COMM_WORLD);) (99 2,     MPI_Finalize();) (102 1,", "label": " (2 1,   MPI_Init(0, 0);) (109 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,     MPI_Irecv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &req);) (18 2,     MPI_Send(buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (18 3,     MPI_Wait(&req, &status);) (18 4,     MPI_Wait(&req, &status);) (18 5,     MPI_Send(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (18 6,     MPI_Wait(&req, &status);) (23 1,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 2,     MPI_Wait(&req, &status);) (23 3,     MPI_Wait(&req, &status);) (28 1,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (28 2,     MPI_Send(buf0, 128, MPI_INT, 2, 0, MPI_COMM_WORLD);) (28 3,     MPI_Send(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (28 4,     MPI_Send(buf0, 128, MPI_INT, 2, 0, MPI_COMM_", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,     MPI_Irecv(buf0, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &req);) (18 2,     MPI_Recv(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (18 3,     MPI_Send(buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD);) (18 4,     MPI_Recv(buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (18 5,     MPI_Wait(&req, &status);) (23 1,     MPI_Send(buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 2,     MPI_Recv(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 3,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (28 1,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (69 1,       MPI_Recv(ans, n, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (72 1,", "label": " (17 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &commsize);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (36 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 0,  MPI_Wtime();) (54 0,  MPI_Wtime();) (54 1,   MPI_Gather(part_ans, 4096, MPI_CHAR, Result, 4096, MPI_CHAR, 0, MPI_COMM_WORLD);) (56 0,  MPI_Wtime();) (70 0,  MPI_Wtime();) (84 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (24 1,       MPI_Irecv(&buffer[i], tam, MPI_INT, recvID, i, MPI_COMM_WORLD, &request);) (25 1,       MPI_Wait(&request, &status);) (26 0,  MPI_Wtime();) (27 1,       MPI_Isend(&buffer[i], tam, MPI_INT, 0, i, MPI_COMM_WORLD, &request);) (27 2,       MPI_Wait(&request, &status);) (28 0,  MPI_Wtime();) (33 1,       MPI_Irecv(&buffer[i], tam, MPI_INT, 0, i, MPI_COMM_WORLD, &request);) (33 2,       MPI_Wait(&request, &status);) (33 0,  MPI_Wtime();) (38 1,     MPI_Isend(&buffer[0], tam, MPI_INT, 0, myid, MPI_COMM_WORLD, &request);) (40 1,     MPI_Wait(&request, &status);) (40 2,     MPI_Wait(&request, &status);) (41 1,     MPI_Barrier(MPI_COMM_WORLD);) (47 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (26 0,  MPI_Wtime();) (26 1,       MPI_Rsend(&buffer, tam, MPI_INT, recvID, 0, MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (42 1,       MPI_Recv(&buffer, 32768 / 4, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(23 1,   MPI_Init(&argc, &argv);) (24 1,   MPI_Type_indexed(100, block, disp, MPI_INT, &ltype);) (24 2,   MPI_Type_commit(&ltype);) (27 1,     MPI_Pack_size(1, ltype, MPI_COMM_WORLD, &bufsize);) (27 2,     MPI_Pack_size(1, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), &bufsize);) (27 3,     MPI_Pack_size(1, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), &bufsize);) (32 1,   MPI_Type_free(&ltype);) (32 2,   MPI_Type_free(&ltype);) (35 1,     MPI_Bcast(b, 100 * 100, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 0, MPI_COMM_WORLD);) (42 1,     MPI_Unpack(b, 100 * 100, &position, &a[0][0], (1000 * (sizeof(int)), &a[0][0], (1000 * (sizeof(int)), &a[0][1], (1000 * (sizeof(int)), &b[0][0], (1000 * (sizeof(int)), &b[0][1], (1000 * (sizeof(int)), &b[0][1], (1000 * (sizeof(int)), &b[0][2], (1000 * (sizeof(int)), &b[0][2], (1000 * (sizeof(int)), &b[0][3], (1000 * (sizeof(int)), &b[0][0], (1000 * (sizeof(int)), &b[0][1], (1000 * (sizeof(int)), &b[0][1], (1000 * (sizeof(int)),", "label": " (23 1,   MPI_Init(&argc, &argv);) (30 1,   MPI_Type_indexed(100, block, disp, MPI_INT, &ltype);) (30 2,   MPI_Type_commit(&ltype);) (30 3,   MPI_Pack_size(1, ltype, MPI_COMM_WORLD, &bufsize);) (31 1,   MPI_Pack(a, 1, ltype, buffer, bufsize, &position, MPI_COMM_WORLD);) (32 1,   MPI_Unpack(buffer, bufsize, &position, b, 1, ltype, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myNum);) (13 1,     MPI_Open_port(MPI_INFO_NULL, portName);) (13 2,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (13 3,     MPI_Intercomm_merge(tmp, 1, &comm);) (13 4,     MPI_Comm_size(comm, &size);) (13 5,     MPI_Comm_rank(comm, &myNum);) (15 1,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (15 2,     MPI_Intercomm_merge(tmp, 1, &comm);) (15 3,     MPI_Comm_free(&tmp);) (15 4,     MPI_Comm_rank(comm, &myNum);) (15 5,     MPI_Comm_size(comm, &size);) (17 1,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (17 2,     MPI_Intercomm_merge(tmp, 1, &comm);) (17 3,     MPI_Comm_free(&tmp);) (17 4,     MPI_Comm_rank(comm, &myNum);) (17 5,     MPI_Comm_size(comm, &size);)", "label": " (20 1,   MPI_Init(0, 0);) (24 1,     MPI_Open_port(MPI_INFO_NULL, portName);) (43 1,     MPI_Comm_connect(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (48 1,     MPI_Intercomm_merge(tmp, 1, &comm);) (53 1,     MPI_Comm_free(&tmp);) (54 1,   MPI_Comm_size(comm, &size);) (56 1,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, comm, &tmp);) (61 1,     MPI_Intercomm_merge(tmp, 0, &comm);) (66 1,     MPI_Comm_rank(comm, &cachedRank);) (66 2,     MPI_Comm_free(&tmp);) (66 3,     MPI_Comm_size(comm, &size);) (76 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace3d(world_rank, world_size, send_counts, displs, body_type, world_rank, world_size, world_rank, body_type, world_rank, world_size);) (13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (35 1,   MPI_Type_contiguous(nBodies, MPI_FLOAT, &body_type);) (35 2,   MPI_Type_commit(&body_type);) (35 3,   MPI_Barrier(MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (48 1,   MPI_Scatterv(buf, send_counts, displs, body_type, &p[0][0], (send_counts[world_rank] - 1) * dt, MPI_FLOAT, 0, MPI_COMM_WORLD);) (48 2,   MPI_Scatterv(p, send_counts, displs, body_type, &p[0][0], (send_counts[world_rank] - 1) * dt, MPI_FLOAT, 0, MPI_COMM_WORLD);) (49 1,   MPI_Gatherv(p[0], send_counts[world_rank], MPI_FLOAT, &body_type);) (49 2,   MPI_Type_free(&body_type);) (49 3,   MPI_Barrier(MPI_COMM_WORLD);) (49 0,  MPI_Wtime();) (54 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,   MPI_Type_contiguous(6, MPI_FLOAT, &body_type);) (7 2,   MPI_Type_commit(&body_type);) (35 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (35 1,   MPI_Scatterv(p, send_counts, offset, body_type, &p[offset[world_rank]], send_counts[world_rank], body_type, 0, MPI_COMM_WORLD);) (37 1,     MPI_Iallgatherv(&p[offset[world_rank]], send_counts[world_rank], body_type, p, send_counts, offset, body_type, MPI_COMM_WORLD, &request);) (38 1,     MPI_Wait(&request, &status);) (48 1,   MPI_Gatherv(&p[offset[world_rank]], send_counts[world_rank], body_type, p, send_counts, offset, body_type, 0, MPI_COMM_WORLD);) (48 2,   MPI_Barrier(MPI_COMM_WORLD);) (48 0,  MPI_Wtime();) (56 1,   MPI_Type_free(&body_type);) (56 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(0, 0);) (17 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (28 1,   MPI_Scatter(sendbuf, send_i, MPI_UNSIGNED, recvbuf, recvcount, MPI_UNSIGNED, 0, MPI_COMM_WORLD);) (43 1,   MPI_Reduce(&max_send_i, &max_send_i, 1, MPI_UNSIGNED, MPI_MAX, 0, MPI_COMM_WORLD);) (43 2,   MPI_Reduce(&send_i, &max_send_i, 1, MPI_UNSIGNED, MPI_MAX, 0, MPI_COMM_WORLD);) (59 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (44 1,   MPI_Allreduce(&send_i, &max_send_i, 1, MPI_UNSIGNED, MPI_MAX, MPI_COMM_WORLD);) (45 1,   MPI_Gather(sendbuf, send_i, MPI_UNSIGNED, recvbuf, max_send_i, MPI_UNSIGNED, 0, MPI_COMM_WORLD);) (49 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (4 3,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &nodenum);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (29 2,       MPI_Send(&niter, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&recieved[i], nodenum, MPI_INT, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&recvniter[i], nodenum, MPI_LONG, -1, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Bcast(&niter, 1, MPI_LONG, 0, MPI_COMM_WORLD);)       MPI_Bcast(&recieved, niter, MPI_LONG, 0, MPI_COMM_WORLD);)       MPI_Bcast(&finalcount, 1, MPI_LONG, 0, MPI_COMM_WORLD);)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &nodenum);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (29 2,       MPI_Send(&niter, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&recieved[i], nodenum, MPI_INT, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&recvniter[i], nodenum, MPI_LONG, -1, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(49 1,   MPI_Init(&argc, &argv);) (49 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (49 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (58 1,   MPI_Finalize();)", "label": " (54 1,   MPI_Init(&argc, &argv);) (54 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (57 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (59 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (60 1,   MPI_Comm_split(MPI_COMM_WORLD, initiator_or_target, rank, &initiator_target_group);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 1,   MPI_Alloc_mem(65536 * (sizeof(int)), MPI_INFO_NULL, &buf);) (15 2,   MPI_Alloc_mem(65536 * (sizeof(int)), MPI_INFO_NULL, &winbuf);) (15 3,   MPI_Win_create(winbuf, 65536 * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (15 4,   MPI_Win_lock_all(0, window);) (15 5,   MPI_Win_flush_all(0, window);) (15 6,   MPI_Barrier(MPI_COMM_WORLD);) (15 7,   MPI_Win_unlock_all(window);) (15 8,   MPI_Win_free(&window);) (15 9,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (65 1,   MPI_Finalize();)         MPI_Error_string(errors, error, &buf[0]);) (65 2,   MPI_Win_lock_all(0, window);) (65 3,   MPI_Win_unlock_all(window);) (65 4,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);)         MPI_Error_string(errors, error, &buf[0]);) (65 5,   MPI_Win", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (14 1,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (15 1,   MPI_Alloc_mem(65536 * (sizeof(int)), (MPI_Info) 0x1c000000, &buf);) (15 2,   MPI_Alloc_mem(65536 * (sizeof(int)), (MPI_Info) 0x1c000000, &winbuf);) (15 3,   MPI_Win_create(winbuf, 65536 * (sizeof(int)), sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &window);) (15 4,   MPI_Win_lock_all(0, window);) (22 1,       MPI_Raccumulate(&buf[0], 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000001, window, &acc_req);) (22 2,       MPI_Wait(&acc_req, (MPI_Status *) 1);) (23 1,       MPI_Win_flush(0, window);) (23 2,       MPI_Get(&val, 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, window);) (23 3,       MPI_Win_flush(0, window);) (31 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (45 1,       MPI_Raccumulate(buf, 65536, (MPI_Datatype) 0x4c000405, 0, 0, 65536, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x5800000d, window, &acc_req);) (45 2,       MPI_Wait(&acc_req, (MPI_Status *) 1);) (48 1,       MPI_Win_flush(0, window);) (48 2,       MPI_Get(&val0, 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, window);) (48 3,       MPI_Get(&val1, 1, (MPI_Datatype) 0x4c000405, 0, 65536 - 1, 1, (MPI_Datatype) 0x4c000405, window);) (48 4,       MPI_Get(&val2, 1, (MPI_Datatype) 0x4c000405, 0, 65536 / 2, 1, (MPI_Datatype) 0x4c000405, window);) (48 5,       MPI_Win_flush(0, window);) (66 1,   MPI_Win_unlock_all(window);) (66 2,   MPI_Barrier((MPI_Comm) 0x44000000);) (66 3,   MPI_Win_free(&window);) (67 1,     MPI_Free_mem(buf);) (68 1,     MPI_Free_mem(winbuf);) (68 2,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (70 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Isend(data, 3, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD, &reqs[0]);) (13 2,     MPI_Irecv(data, 3, MPI_INT, ((rank + size) - 1) % size, 0, MPI_COMM_WORLD, &reqs[1]);) (13 3,     MPI_Waitall(2, reqs, MPI_STATUS_IGNORE);) (18 1,     MPI_Irecv(data, 3, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD, &reqs[0]);) (18 2,     MPI_Waitall(2, reqs, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(0, &rank);) (4 2,   MPI_Comm_size(0, &size);) (11 1,       MPI_Isend(data, 3, 2, rank + 1, 123, 0, &reqs[i]);) (13 1,     MPI_Waitany(N, reqs, &idx, MPI_STATUS_IGNORE);) (13 2,     MPI_Waitall(N, reqs, MPI_STATUSES_IGNORE);) (17 1,       MPI_Recv(data, 3, 2, rank - 1, 123, 0, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 0,  MPI_Init(&argc, &argv);) (9 0,  MPI_Comm_rank(MPI_COMM_WORLD, &r);) (10 0,  MPI_Comm_size(MPI_COMM_WORLD, &p);) (11 0,  MPI_Type_contiguous(r, MPI_INT, &newtype);) (12 0,  MPI_Type_commit(&newtype);) (19 0,  MPI_Sendrecv(&errs, 1, newtype, 0, 0, &buf, 1, newtype, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 0,  MPI_Type_free(&newtype);) (25 0,  MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Error_string(err, str, &len);) (29 0,  MPI_Type_free(&newtype);) (29 0,  MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Error_string(err, str, &len);)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Error_string(err, str, &len);)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_Error_string(err, str, &len);)       MPI_Abort(MPI_COMM_WORLD, err);)       MPI_", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (9 0,  MPI_Type_create_f90_real(p, r, &newtype);) (11 0,  MPI_Type_create_f90_real(p, r, &newtype);) (14 0,  MPI_Type_create_f90_real(p, r, &newtype);) (17 0,  MPI_Type_create_f90_complex(p, r, &newtype);) (19 0,  MPI_Type_create_f90_complex(p, r, &newtype);) (22 0,  MPI_Type_create_f90_complex(p, r, &newtype);) (24 0,  MPI_Type_create_f90_integer(p, &newtype);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_init(MPI_COMM_WORLD);) (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &nx);) (30 1,   MPI_Type_contiguous(2, MPI_INT, &ttype);) (30 2,   MPI_Type_commit(&ttype);) (33 1,     MPI_Win_create(ttype, (sizeof(char)) * (sizeof(char)), sizeof(char), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (34 1,     MPI_Win_fence(0, win);) (35 1,     MPI_Put(&nx, 1, MPI_INT, 1, 0, 1, ttype, win);) (35 2,     MPI_Put(&ny, 1, MPI_INT, 1, 0, 1, ttype, win);) (35 3,     MPI_Win_fence(0, win);) (36 1,   MPI_Type_free(&ttype);) (36 2,   MPI_Finalize();)", "label": " (27 1,   MPI_Init(&argc, &argv);) (27 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (34 1,     MPI_Type_vector(ny, nx, stride, MPI_DOUBLE, &otype);) (34 2,     MPI_Type_commit(&otype);) (34 3,     MPI_Type_vector(ny, nx, stride, MPI_DOUBLE, &ttype);) (34 4,     MPI_Type_commit(&ttype);) (34 5,     MPI_Win_lock(1, 1, 0, MPI_WIN);) (34 6,     MPI_Put(LOC_BUF, 1, otype, 1, 0, 1, ttype, MPI_WIN);) (34 7,     MPI_Win_unlock(1, MPI_WIN);) (34 8,     MPI_Type_free(&otype);) (34 9,     MPI_Type_free(&ttype);) (35 1,   MPI_Barrier(MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(2, 1, &MPI_Init(&argc, &argv);) (14 1,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (18 1,       MPI_Type_struct(1, blockLength, disp, type, &MPI_VECTOR);) (18 2,       MPI_Type_commit(&MPI_VECTOR);) (23 1,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (31 1,   MPI_Type_struct(1, blockLength, disp, type, &MPI_PARTICLE);) (31 2,   MPI_Type_commit(&MPI_PARTICLE);) (31 3,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (31 4,   MPI_Type_size(MPI_DOUBLE, &intSize);) (31 5,   MPI_Type_get_extent(MPI_DOUBLE, &doubleExtent);) (31 6,   MPI_Type_commit(&MPI_PARTICLE);) (31 7,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (31 8,   MPI_Type_size(MPI_DOUBLE, &intSize);) (31 9,   MPI_Type_get_extent(MPI_DOUBLE, &doubleExtent);) (31 10,   MPI_Type_commit(&MPI_PARTICLE);) (31 11,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (31 12,   MPI_Type_size(MPI_DOUBLE, &intSize);) (31 13,   MPI_Type_get_extent(MPI_DOUBLE, &doubleExtent);) (31 14,   MPI_Type_commit(&MPI_PARTICLE);) (31 15,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &idp);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (8 1,   MPI_Type_struct(1, vectorBlockLength, vectorOffset, vectorOldType, &MPI_VECTOR);) (8 2,   MPI_Type_commit(&MPI_VECTOR);) (11 1,   MPI_Type_extent(MPI_DOUBLE, &doubleExtent);) (13 1,   MPI_Type_struct(2, particleBlockLength, particleOffset, particleOldType, &MPI_PARTICLE);) (13 2,   MPI_Type_commit(&MPI_PARTICLE);) (19 1,       MPI_Recv(&particleReceived, 1, MPI_PARTICLE, -1, -1, MPI_COMM_WORLD, &status);) (30 1,     MPI_Send(&particleSent, 1, MPI_PARTICLE, 0, 0, MPI_COMM_WORLD);) (31 1,   MPI_Type_free(&MPI_PARTICLE);) (31 2,   MPI_Type_free(&MPI_VECTOR);) (31 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(&im, &imloc, x_min, x_max, y_min, y_max, width, hloc);) (33 1,   MPI_Init(&argc, &argv);) (33 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (33 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (35 1,     MPI_Barrier(MPI_COMM_WORLD);) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (40 0,  MPI_Wtime();) (40 1,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 2,   MPI_Bcast(&hlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 3,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 4,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 5,   MPI_Bcast(&hlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 6,   MPI_Bcast(&hlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 7,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 8,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 9,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 10,   MPI_Bcast(&imlocSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 11", "label": " (26 1,   MPI_Init(&argc, &argv);) (26 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (26 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (34 1,     MPI_Barrier(MPI_COMM_WORLD);) (35 1,     MPI_Finalize();) (39 0,  MPI_Wtime();) (40 1,   MPI_Gather(&imloc.pixels[0], imlocSize + 1, MPI_CHAR, &im.pixels[0], imlocSize + 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (40 0,  MPI_Wtime();) (51 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (19 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Irecv(&buf[0], 1, MPI_INT, prev, tag1, MPI_COMM_WORLD, &reqs[0]);) (17 2,   MPI_Irecv(&buf[1], 1, MPI_INT, next, tag2, MPI_COMM_WORLD, &reqs[1]);) (17 3,   MPI_Isend(&rank, 1, MPI_INT, prev, tag2, MPI_COMM_WORLD, &reqs[2]);) (17 4,   MPI_Isend(&rank, 1, MPI_INT, next, tag1, MPI_COMM_WORLD, &reqs[3]);) (17 5,   MPI_Waitall(4, reqs, stats);) (18 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Irecv(&buf[0], 1, MPI_INT, prev, tag1, MPI_COMM_WORLD, &reqs[0]);) (17 2,   MPI_Irecv(&buf[1], 1, MPI_INT, next, tag2, MPI_COMM_WORLD, &reqs[1]);) (17 3,   MPI_Isend(&rank, 1, MPI_INT, prev, tag2, MPI_COMM_WORLD, &reqs[2]);) (17 4,   MPI_Isend(&rank, 1, MPI_INT, next, tag1, MPI_COMM_WORLD, &reqs[3]);) (17 5,   MPI_Waitall(4, reqs, stats);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (21 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Reduce(&sum, &suml, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (10 4,   MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_set_errhandler((MPI_Comm) 0x44000000, (MPI_Errhandler) 0x54000001);) (7 0,  MPI_Type_commit(&type);) (16 0,  MPI_Type_commit(&type);) (32 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (7 0,  MPI_Type_commit(&type);) (16 0,  MPI_Type_commit(&type);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(unsignedIntsToSend, 2, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_int)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(unsignedIntsReceived, 2, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_int)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(unsignedIntsToSend, 2, MPI_UNSIGNED, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(unsignedIntsReceived, 2, MPI_UNSIGNED, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and(world_rank, recbuff[0], recbuff[1]);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (33 1,       MPI_Isend(&sopv, 1, MPI_INT, j, 0, MPI_COMM_WORLD, &request);) (33 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (46 1,       MPI_Irecv(&recev, 1, MPI_INT, j, 0, MPI_COMM_WORLD, &request);) (46 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (69 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (20 1,     MPI_Irecv(recbuff, distib[world_rank], MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (21 1,     MPI_Send(sendarr, distib[world_rank], MPI_INT, 0, 0, MPI_COMM_WORLD);) (33 1,       MPI_Recv(recbuff, distib[j], MPI_INT, j, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (49 1,       MPI_Send(resbuff, procs * 2, MPI_INT, j, 0, MPI_COMM_WORLD);) (61 1,     MPI_Send(temparr, distib[world_rank], MPI_INT, 0, 0, MPI_COMM_WORLD);) (61 2,     MPI_Recv(allpd, procs * 2, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (68 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 4,   MPI_Comm_get_parent(&parent);) (24 1,     MPI_Comm_spawn(argv[0], (char **) 0, 3, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &child, (int *) 0)))     {       printf(\"Child failed to spawn\\n\");) (24 0,  MPI_Send(&msg, 1, MPI_INT, 0, 1, child);) (24 1,     MPI_Comm_disconnect(&child);) (28 1,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (28 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (28 3,     MPI_Recv(&msg, 1, MPI_INT, 3, 1, parent, MPI_STATUS_IGNORE);) (36 1,     MPI_Comm_disconnect(&parent);) (42 1,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(0, 0);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 2,   MPI_Comm_get_parent(&parent);) (22 0,  MPI_Comm_spawn(argv[0], (char **) 0, 3, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &child, (int *) 0)))     {       printf(\"Child failed to spawn\\n\");) (29 1,       MPI_Send(&msg, 1, MPI_INT, 0, 1, child);) (30 1,     MPI_Comm_disconnect(&child);) (34 1,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (34 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (38 1,       MPI_Recv(&msg, 1, MPI_INT, 0, 1, parent, MPI_STATUS_IGNORE);) (40 1,     MPI_Comm_disconnect(&parent);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (19 1,       MPI_Recv(message, 1024, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (23 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (13 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (19 1,       MPI_Recv(message, 1024, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 5 * 1000, MPI_INT, 1, 123, MPI_COMM_WORLD);) (10 1,     MPI_Recv(&buffer, 1000, MPI_INT, 0, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &ncpus);) (15 1,   MPI_Irecv(&data_received, 1, MPI_INT, left_neighbor, tag, MPI_COMM_WORLD, &reqRecv);) (15 2,   MPI_Isend(&my_rank, 1, MPI_INT, right_neighbor, tag, MPI_COMM_WORLD, &reqSend);) (15 3,   MPI_Wait(&reqSend, &statSend);) (15 4,   MPI_Wait(&reqRecv, &statRecv);) (21 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &ncpus);) (14 1,   MPI_Isend(&my_rank, 1, MPI_INT, left_neighbor, tag, MPI_COMM_WORLD, &reqSend);) (14 2,   MPI_Irecv(&data_received, 1, MPI_INT, right_neighbor, tag, MPI_COMM_WORLD, &reqRecv);) (14 3,   MPI_Wait(&reqSend, &statSend);) (14 4,   MPI_Wait(&reqRecv, &statRecv);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (10 1,   MPI_Comm_group(MPI_COMM_WORLD, &MPI_GROUP_WORLD);) (14 1,   MPI_Group_incl(MPI_GROUP_WORLD, 1, ranks, &group);) (15 1,   MPI_Comm_create(MPI_COMM_WORLD, group, &shcomm);) (16 1,   MPI_Comm_rank(shcomm, &lrank);) (16 2,   MPI_Comm_size(shcomm, &lsize);) (17 1,   MP", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_group(MPI_COMM_WORLD, &MPI_GROUP_WORLD);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Group_free(&MPI_GROUP_WORLD);) (11 1,   MPI_Group_incl(MPI_GROUP_WORLD, 1, ranks, &MPI_GROUP_ONE);) (13 1,   MPI_Group_incl(MPI_GROUP_WORLD, 1, ranks, &MPI_GROUP_ZERO);) (15 1,   MPI_Win_allocate_shared((rank == 0)? (sizeof(int)) : (0), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (18 1,   MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (21 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (25 1,     MPI_Win_post(MPI_GROUP_ONE, 0, shwin);) (26 1,     MPI_Win_wait(shwin);) (26 2,     MPI_Win_post(MPI_GROUP_ONE, 0, shwin);) (26 3,     MPI_Win_wait(shwin);) (31 1,     MPI_Win_start(MPI_GROUP_ZERO, 0, shwin);) (31 2,     MPI_Win_complete(shwin);) (31 3,     MPI_Win_start(MPI_GROUP_ZERO, 0, shwin);) (32 1,     MPI_Win_complete(shwin);) (41 1,   MPI_Win_free(&shwin);) (41 2,   MPI_Group_free(&MPI_GROUP_ONE);) (41 3,   MPI_Group_free(&MPI_GROUP_ZERO);) (41 4,   MPI_Group_free(&MPI_GROUP_WORLD);) (41 5,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 3,   MPI_Get_address(&buf->i, &displacements[0]);) (15 4,   MPI_Get_address(&buf->d, &displacements[1]);) (15 5,   MPI_Get_address(&buf->e, &displacements[2]);) (15 6,   MPI_Get_address(&buf->d, &displacements[3]);) (21 1,     MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (21 2,     MPI_Type_commit(&new_t);) (25 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (26 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Type_free(&new_t);) (27 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (21 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (25 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Type_free(&new_t);) (27 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>orrencias(rank, size, M, &bufsize);) (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 0,  MPI_Wtime();) (27 1,       MPI_Buffer_attach(buf, bufsize);) (27 2,       MPI_Ibsend(&data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (27 3,       MPI_Buffer_detach(&buf, &bufsize);) (27 4,       MPI_Recv(&data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &status);) (27 0,  MPI_Wtime();) (35 1,       MPI_Recv(&data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &status);) (35 2,       MPI_Buffer_attach(buf, bufsize);) (35 3,       MPI_Ibsend(&data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (35 4,       MPI_Buffer_detach(&buf, &bufsize);) (35 5,       MPI_Recv(&data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &status);) (35 6,       MPI_Buffer_attach(buf, bufsize);) (35 7,       MPI_Ibsend(&data, M, MPI_INT, (rank + 1) % size, 8, MPI_COM", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 0,  MPI_Wtime();) (27 1,       MPI_Buffer_attach(&buf, bufsize);) (27 2,       MPI_Ibsend(&data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (27 3,       MPI_Buffer_detach(&buf, &bufsize);) (27 4,       MPI_Recv(&data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &status);) (27 0,  MPI_Wtime();) (36 1,       MPI_Recv(&data, M, MPI_INT, (rank - 1) % size, 8, MPI_COMM_WORLD, &status);) (36 2,       MPI_Buffer_attach(&buf, bufsize);) (36 3,       MPI_Ibsend(&data, M, MPI_INT, (rank + 1) % size, 8, MPI_COMM_WORLD, &request);) (36 4,       MPI_Buffer_detach(&buf, &bufsize);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &processor_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &processor_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (70 1,   MPI_Finalize();)         MPI_Comm_free(&cart_comm);) (70 2,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &post_comm);) (70 3,   MPI_Comm_rank(post_comm, &rank);) (70 4,   MPI_Comm_size(post_comm, &size);) (70 5,   MPI_Barrier(MPI_COMM_WORLD);) (70 6,   MPI_Finalize();)         MPI_Comm_free(&post_comm);) (70 7,   MPI_Comm_free(&next);) (70 8,   MPI_Comm_free(&color);) (70 9,   MPI_Comm_free(&plist_id);) (70 10,   MPI_Comm_free(&next_comm);) (70 11,   MPI_Finalize();)         MPI_Comm_free(&img_comm);) (70 12,   MPI_Comm_free(&img_comm);) (70 13,   MPI_Comm_free(&next_comm);) (70 14,   MPI_Finalize();)         MPI_Comm_free(&img_comm);) (70 15,   MPI_Finalize();)         MPI_Comm_free(&img_comm);) (70 16,   MPI_Comm_free(&next_comm);) (70 17,   MPI_Finalize();)         MPI_Comm_free(&img_comm);) (70 18,   MPI_Comm_free(&img_comm);) (70 19,", "label": " (2 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &pcoord_1d);) (9 1,   MPI_Cart_coords(cart_comm, pcoord_1d, 2, pcoord);) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (47 1,     MPI_Comm_split(MPI_COMM_WORLD, color, pcoord_1d, &post_comm);) (47 2,     MPI_Comm_rank(post_comm, &post_moi);) (47 3,     MPI_Comm_size(post_comm, &post_size);) (70 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_LONG_LONG_INT, 1, 0, 10, MPI_LONG_LONG_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (29 1,     MPI_Isend(&vector[0], 1, MPI_DOUBLE, next, 0, MPI_COMM_WORLD, &reqs[0]);) (29 2,     MPI_Irecv(&vector[0], 1, MPI_DOUBLE, prev, 0, MPI_COMM_WORLD, &reqs[1]);) (29 3,     MPI_Waitall(2, reqs, stats);) (31 1,   MPI_Finalize();)", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (28 1,     MPI_Irecv(&vector, 4096, MPI_INT, prev, 0, MPI_COMM_WORLD, &reqs[0]);) (28 2,     MPI_Isend(&vector, 4096, MPI_INT, next, 0, MPI_COMM_WORLD, &reqs[1]);) (28 3,     MPI_Waitall(2, reqs, stats);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (10 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Recv(&b, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,       MPI_Recv(&a, 1, MPI_INT, 1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (8 2,       MPI_Recv(&b, 1, MPI_INT, -1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,       MPI_Send(&a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (11 2,       MPI_Send(&b, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 4,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (38 1,       MPI_Isend(&x, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &send_req);) (38 2,       MPI_Irecv(&result[count - 1], 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, &recv_req);) (38 3,       MPI_Wait(&send_req, &status);) (38 4,       MPI_Wait(&recv_req, &status);) (41 1,       MPI_Isend(&x, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &send_req);) (41 2,       MPI_Irecv(&result[count - 1], 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &recv_req);) (41 3,       MPI_Wait(&send_req, &status);) (41 4,       MPI_Wait(&recv_req,", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 0,  MPI_Wtime();) (25 1,       MPI_Irecv(&results[j], count, MPI_DOUBLE, j, 100, MPI_COMM_WORLD, &recv_requests[j]);) (27 1,     MPI_Waitall(size - 1, recv_requests, status);) (39 0,  MPI_Wtime();) (70 1,         MPI_Isend(&result, count, MPI_DOUBLE, size - 1, 100, MPI_COMM_WORLD, &send_req);) (70 2,         MPI_Wait(&send_req, MPI_STATUS_IGNORE);) (74 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (10 1,   MPI_Bcast(&x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (11 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (10 1,   MPI_Bcast(&x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2:   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (17 0,  MPI_Reduce(&homepi, &pisum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (26 0,  MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (17 0,  MPI_Reduce(&homepi, &pisum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (17 1,     MPI_Finalize();) (18 1,   MPI_Comm_group(MPI_COMM_WORLD, &orig_group);) (22 1,     MPI_Group_incl(orig_group, 8 / 2, ranks1, &new_group);) (25 1,     MPI_Group_incl(orig_group, 8 / 2, ranks2, &new_group);) (26 1,   MPI_Comm_create(MPI_COMM_WORLD, new_group, &new_comm);) (26 2,   MPI_Allreduce(&sendbuf, &recvbuf, 1, MPI_INT, MPI_SUM, new_comm);) (26 3,   MPI_Group_rank(new_group, &new_rank);) (26 4,   MPI_Allreduce(&sendbuf, &recvbuf, 1, MPI_INT, MPI_SUM, new_comm);) (35 1,     MPI_Group_free(&new_group);) (35 2,     MPI_Group_free(&new_group);) (35 3,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (17 1,     MPI_Finalize();) (20 1,   MPI_Comm_group(MPI_COMM_WORLD, &orig_group);) (22 1,     MPI_Group_incl(orig_group, 8 / 2, ranks1, &new_group);) (25 1,     MPI_Group_incl(orig_group, 8 / 2, ranks2, &new_group);) (26 1,   MPI_Comm_create(MPI_COMM_WORLD, new_group, &new_comm);) (26 2,   MPI_Allreduce(&sendbuf, &recvbuf, 1, MPI_INT, MPI_SUM, new_comm);) (26 3,   MPI_Group_rank(new_group, &new_rank);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Recv(&sum, 1, MPI_FLOAT, -1, -1, MPI_COMM_WORLD, &st);) (19 1,       MPI_Send(&sum2, 1, MPI_FLOAT, 0, rank, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(&s, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD);) (19 1,         MPI_Recv(&sum, 1, MPI_FLOAT, -1, 0, MPI_COMM_WORLD, &st);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n12:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &lower_bound);) (6 3,   MPI_Type_contiguous(2, MPI_DOUBLE, &double_int_type);) (6 4,   MPI_Type_commit(&double_int_type);) (7 1,   MPI_Type_contiguous(2, double_int_type, &double_int_type);) (7 2,   MPI_Type_commit(&double_int_type);) (7 3,   MPI_Type_contiguous(2, double_int_type, &double_int_type);) (7 4,   MPI_Type_commit(&double_int_type);) (7 5,   MPI_Type_free(&double_int_type);) (7 6,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Type_contiguous(2, MPI_INT, &double_int_type);) (4 2,   MPI_Type_commit(&double_int_type);) (6 1,   MPI_Type_get_extent_x(double_int_type, &lower_bound, &extent);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>27:   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (13 3,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (17 1,     MPI_Barrier(MPI_COMM_WORLD);) (18 0,  MPI_Wtime();) (21 1,       MPI_Barrier(MPI_COMM_WORLD);) (21 2,       MPI_Barrier(MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (13 0,  MPI_Wtime();) (17 1,       MPI_Send(buf, n, MPI_BYTE, 1, 1, MPI_COMM_WORLD);) (17 2,       MPI_Recv(buf, n, MPI_BYTE, 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,       MPI_Recv(buf, n, MPI_BYTE, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 2,       MPI_Send(buf, n, MPI_BYTE, 0, 1, MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (26 0,  MPI_Wtime();) (27 0,  MPI_Wtime();) (30 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (18 1,   MPI_Bcast(&spintime, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (26 1,   MPI_Bcast(&i, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Bcast(&j, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 3,   MPI_Bcast(&k, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (7 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_matrice(&A, &B, &C, taille);) (25 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_id);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>211,   MPI_Init(&argc, &argv);) (11 0,  MPI_Wtime();) (12 1,     MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 2,     MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (15 1,       MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 0,  MPI_Wtime();) (25 1,   MPI_Reduce(&total_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (29 0,  MPI_Wtime();) (33 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 0,  MPI_Wtime();) (15 1,     MPI_Send(&local_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&total_int, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,       MPI_Recv(&local_int, 1, MPI_DOUBLE, source, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 0,  MPI_Wtime();) (27 1,       MPI_Send(&total_int, 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (31 1,   MPI_Barrier(MPI_COMM_WORLD);) (31 0,  MPI_Wtime();) (34 0,  MPI_Wtime();) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (33 1,   MPI_Type_create_subarray(1, &subarray_sum, &column_datatype, &row_datatype);) (33 2,   MPI_Type_commit(&row_datatype);) (36 0,  MPI_Wtime();) (39 1,       MPI_Send(&local_flag, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (44 1,       MPI_Recv(&local_flag, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (51 1,       MPI_Recv(subarray->p, local_flag, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (56 1,   MPI_Type_free(&row_datatype);) (56 2,   MPI_Type_free(&column_datatype);) (58 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (26 1,   MPI_Bcast(&rows_per_proc, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 2,   MPI_Bcast(&cols_per_proc, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 3,   MPI_Bcast(&_div, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 4,   MPI_Bcast(&width, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 5,   MPI_Bcast(&height, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 6,   MPI_Bcast(&bytes, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 7,   MPI_Bcast(&loops, 1, MPI_INT, 0, MPI_COMM_WORLD);) (32 1,   MPI_Type_vector(rows_per_proc, bytes, bytes * (cols_per_proc + 2), MPI_BYTE, &column_datatype);) (32 2,   MPI_Type_contiguous(bytes * cols_per_proc, MPI_BYTE, &row_datatype);) (32 3,   MPI_Type_commit(&column_datatype);) (32 4,   MPI_Type_commit(&row_datatype);) (36 1,   MPI_Barrier(MPI_COMM_WORLD);) (37 0,  MPI_Wtime();) (44 1,       MPI_Allreduce(&local_flag, &global_sum, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (57 1,   MPI_Reduce(&local_timer, &global_timer, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (63 1,   MPI_Type_free(&row_datatype);) (63 2,   MPI_Type_free(&column_datatype);) (63 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (16 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, MPI_INFO_NULL, &shm_comm);) (16 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (16 6,   MPI_Comm_size(shm_comm, &shm_nproc);) (16 7,   MPI_Win_allocate_shared((sizeof(int)) * 10000, sizeof(int), MPI_INFO_NULL, shm_comm, &my_base, &shm_win);) (16 8,   MPI_Win_shared_query(shm_win, -2, &size, &disp_unit, &base);) (17 1,   MPI_Win_lock_all(1, shm_win);) (18 1,   MPI_Win_sync(shm_win);) (18 2,   MPI_Barrier(shm_comm);) (18 3,   MPI_Win_sync(shm_win);) (43 1,   MPI_Win_unlock_all(shm_win);) (43 2,   MPI_Win_free(&shm_win);) (43 3,   MPI_Comm_free(&shm_comm);) (44 1,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (16 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (16 4,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (16 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (16 6,   MPI_Comm_size(shm_comm, &shm_nproc);) (16 7,   MPI_Win_allocate_shared((sizeof(int)) * 10000, sizeof(int), (MPI_Info) 0x1c000000, shm_comm, &my_base, &shm_win);) (16 8,   MPI_Win_shared_query(shm_win, -1, &size, &disp_unit, &base);) (26 1,   MPI_Win_lock_all(1024, shm_win);) (31 1,   MPI_Win_sync(shm_win);) (31 2,   MPI_Barrier(shm_comm);) (31 3,   MPI_Win_sync(shm_win);) (44 1,   MPI_Win_unlock_all(shm_win);) (44 2,   MPI_Win_free(&shm_win);) (44 3,   MPI_Comm_free(&shm_comm);) (44 4,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&buffer, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (19 2,       MPI_Irecv(&received, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &request);) (20 1,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (21 1,       MPI_Cancel(&request);) (28 1,", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&buffer, 1, MPI_INT, RECEIVER, 0, MPI_COMM_WORLD);) (27 1,       MPI_Irecv(&received, 1, MPI_INT, SENDER, 0, MPI_COMM_WORLD, &request);) (28 1,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_Init_Parallel(MPI_COMM_WORLD, 1, type_struct_var);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 4,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 5,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 6,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 7,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 8,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 9,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 10,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 11,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 12,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 13,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 14,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 15,   MPI_Get_address(&loc_struct_var[2], &len_struct_var[3]);) (7 16,   MPI_Get_address(&loc_struct_var[0], &len_struct_var[1]);) (7 17,   MPI_Get_", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 0,  MPI_Wtime();) (12 1,   MPI_Get_address(&city_one, &baseaddr);) (12 2,   MPI_Get_address(&city_one.lon, &loc_struct_var[0]);) (12 3,   MPI_Get_address(&city_one.lat, &loc_struct_var[1]);) (18 1,   MPI_Type_create_struct(2, len_struct_var, loc_struct_var, type_struct_var, &MPI_City);) (18 2,   MPI_Type_commit(&MPI_City);) (35 0,  MPI_Wtime();) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (11 0,  MPI_Wtime();) (14 0,  MPI_Wtime();) (15 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (23 1,   MPI_Allreduce(&t, &me, 1, MPI_DOUBLE, MPI_MAX, MPI_COMM_WORLD);) (25 0,  MPI_Wtime();) (25 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (11 0,  MPI_Wtime();) (13 0,  MPI_Wtick();) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (17 4,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&count, &globalSum, 1, MPI_UNSIGNED_LONG, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&time, &globalSum, 1, MPI_UNSIGNED_LONG, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (24 1,   MPI_Reduce(&time, &globalSum, 1, MPI_UNSIGNED_LONG, MPI_SUM, 0, MPI_COMM_WORLD);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (35 1,   MP", "label": " (16 1,   MPI_Init(0, 0);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (16 4,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  -MPI_Wtime();) (23 0,  MPI_Wtime();) (25 1,   MPI_Reduce(&count, &globalSum, 1, MPI_UNSIGNED, MPI_SUM, 0, MPI_COMM_WORLD);) (25 2,   MPI_Bcast(&time0, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,     MPI_Abort(MPI_COMM_WORLD, 2);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank((MPI_Comm) (&ompi_mpi_comm_world), &rank);) (5 3,   MPI_Comm_size((MPI_Comm) (&ompi_mpi_comm_world), &size);) (15 1,     MPI_Abort((MPI_Comm) (&ompi_mpi_comm_world), 2);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Ssend(&value_to_send, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, -1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Bcast(&value_to_send, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 1,     MPI_Bcast(&value_received, 1, MPI_INT, 0, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(MPI_Init(&argc, &argv);) (19 1,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (29 1,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 2,     MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 1,     MPI_Bcast(&localSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (39 2,     MPI_Bcast(&localPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (45 1,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (45 2,     MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 1,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 2,     MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 3,     MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 4,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 5,     MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 6,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (23 1,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,     MPI_Bcast(&localSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (33 1,     MPI_Bcast(&endingBar, 1, MPI_INT, 0, MPI_COMM_WORLD);) (33 2,     MPI_Scatter(POINTS, localSize, MPI_INT, localPoints, localSize, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,     MPI_Gather(Count, numberOfBars, MPI_INT, GLOBAL_COUNTS, numberOfBars, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,     MPI_Bcast(&numberOfBars, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 2,     MPI_Bcast(&localSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 3,     MPI_Bcast(&endingBar, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 4,     MPI_Scatter(POINTS, localSize, MPI_INT, localPoints, localSize, MPI_INT, 0, MPI_COMM_WORLD);) (56 1,     MPI_Gather(Count, numberOfBars, MPI_INT, GLOBAL_COUNTS, numberOfBars, MPI_INT, 0, MPI_COMM_WORLD);) (57 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &args);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &SIZE);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 3,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (11 1,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (12 1,   MPI_Comm_group((MPI_Comm) 0x44000000, &world_group);) (14 1,     MPI_Group_incl(world_group, size / 2, ranks, &group_comm);) (14 2,     MPI_Comm_create((MPI_Comm) 0x44000000, group_comm, (MPI_Info) 0x1c000000, &idup_comm);) (17 1,     MPI_Comm_idup((MPI_Comm) 0x44000000, &idup_comm, &req);) (17 2,     MPI_Comm_create((MPI_Comm) 0x44000000, group_comm, (MPI_Info) 0x1c000000, &idup_comm);) (19 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (14 1,     MPI_Comm_create_group(MPI_COMM_WORLD, world_group, 0, &group_comm);) (14 2,     MPI_Comm_idup(MPI_COMM_WORLD, &idup_comm, &req);) (17 1,     MPI_Comm_idup(MPI_COMM_WORLD, &idup_comm, &req);) (17 2,     MPI_Comm_create_group(MPI_COMM_WORLD, world_group, 0, &group_comm);) (18 1,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (18 2,   MPI_Barrier(idup_comm);) (18 3,   MPI_Barrier(group_comm);) (18 4,   MPI_Group_free(&world_group);) (18 5,   MPI_Comm_free(&idup_comm);) (18 6,   MPI_Comm_free(&group_comm);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Finalize();) (20 1,     MPI_Type_free(&ddt);) (20 2,     MPI_Type_free(&ddt_gaps);) (58 1,   MPI_Type_free(&ddt_resized_gaps);) (58 2,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Finalize();) (22 1,     MPI_Type_free(&ddt);) (29 1,     MPI_Type_free(&ddt);) (36 1,     MPI_Type_free(&ddt);) (43 1,     MPI_Type_free(&ddt);) (50 1,     MPI_Type_free(&ddt);) (57 1,     MPI_Type_free(&ddt);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 0,  MPI_Init(&argc, &argv);) (7 0,  MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Send(a, 2, MPI_FLOAT, 1, 0, MPI_COMM_WORLD);) (17 0,  MPI_Recv(a, 2, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, &status);) (19 0,  MPI_Finalize();)", "label": " (7 0,  MPI_Init(&argc, &argv);) (7 0,  MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Send(a, 2, MPI_FLOAT, 1, 10, MPI_COMM_WORLD);) (14 1,     MPI_Recv(a, 2, MPI_FLOAT, 0, 10, MPI_COMM_WORLD, &status);) (16 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (13 1,     MPI_Scatter(sendBuf, 4, MPI_FLOAT, recvBuf, 4, MPI_FLOAT, source, MPI_COMM_WORLD);) (13 2,     MPI_Scatter(sendBuf, 4, MPI_FLOAT, recvBuf, 4, MPI_FLOAT, source, MPI_COMM_WORLD);) (14 1,     MPI_Scatter(sendBuf, 4, MPI_FLOAT, recvBuf, 4, MPI_FLOAT, source, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (14 1,     MPI_Scatter(sendBuf, sendCount, MPI_FLOAT, recvBuf, recvCount, MPI_FLOAT, source, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n28:   MPI_Init(0, 0);) (12 1,   MPI_Comm_size(comm, &comm_sz);) (12 2,   MPI_Comm_rank(comm, &my_rank);) (23 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (18 1,   MPI_Type_contiguous(count, MPI_DOUBLE, &type);) (18 2,   MPI_Type_commit(&type);) (23 1,   MPI_Type_free(&type);) (23 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (32 1,   MPI_Type_vector(n, 1, n, MPI_DOUBLE, &mpi_mpi_t);) (32 2,   MPI_Type_commit(&mpi_mpi_t);) (32 3,   MPI_Type_contiguous(n, mpi_mpi_t, &mpi_mpi_t);) (32 4,   MPI_Type_commit(&mpi_mpi_t);) (32 5,   MPI_Bcast(b, n * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (32 6,   MPI_Scatter(a, rows * m, MPI_DOUBLE, c_block, rows * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (32 7,   MPI_Scatter(storage, rows * m, MPI_DOUBLE, c, rows * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (32 8,   MPI_Gather(c_", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace(rank, size, ar);) (6 1,   MPI_Init(&arg, &ar);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Get_processor_name(name, &length);) (7 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&arg, &ar);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(name, &length);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Type_contiguous(3, MPI_INT, &null_type);) (6 2,   MPI_Type_commit(&null_type);) (10 1,     MPI_Send(buffer, 1, null_type, 1, 0, MPI_COMM_WORLD);) (13 1,     MPI_Recv(buffer, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Type_free(&null_type);) (14 2,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(buffer, 1000, null_type, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (31 1,   MPI_Info_create(&win_info);) (31 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (31 3,   MPI_Win_allocate((sizeof(double)) * NOP, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (42 1,     MPI_Barrier(MPI_COMM_WORLD);) (45 1,     MPI_Info_free(&win_info);) (45 2,     MPI_Win_free(&win);) (51 1,     MPI_Info_free(&win_info);) (51 2,     MPI_Win_free(&win);) (57 1,   MPI_Finalize();)       MPI_Win_free(&win);) (63 1,     MPI_Info_free(&win_info);) (63 2,     MPI_Win_free(&win);) (63 3,     MPI_Finalize();)       MPI_Win_free(&win);) (74 1,", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (35 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (42 1,   MPI_Info_create(&win_info);) (42 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (42 3,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (47 1,     MPI_Win_lock_all(0, win);) (52 1,     MPI_Win_unlock_all(win);) (52 2,     MPI_Barrier(MPI_COMM_WORLD);) (59 1,     MPI_Info_free(&win_info);) (61 1,     MPI_Win_free(&win);) (63 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &n_proc);) (19 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &n_proc);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init(0, 0);) (13 1,   MPI_Init(0, 0);) (14 1,   MPI_Comm_size(comm, &comm_sz);) (14 2,   MPI_Comm_rank(comm, &my_rank);) (21 1,   MPI_Barrier(comm);) (22 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (24 1,   MPI_Reduce(&local_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, comm);) (29 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(0, 0);) (13 1,   MPI_Comm_size(comm, &comm_sz);) (13 2,   MPI_Comm_rank(comm, &my_rank);) (21 0,  MPI_Wtime();) (22 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&local_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, comm);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_dup(MPI_COMM_WORLD, &newcomm);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, (rank < (sizeof(rank)))? (1) : (0), rank, &newcomm);) (7 2,   MPI_Comm_rank(newcomm, &flag);) (7 3,   MPI_Comm_size(newcomm, &flag);) (8 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(0, &rank);) (6 1,   MPI_Comm_idup(0, &newcomm, &req);) (7 1,   MPI_Test(&req, &flag, MPI_STATUS_IGNORE);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 0,  MPI_Wtime();) (16 0,  MPI_Wtime();) (22 1,     MPI_Send(&valeurs[1000 - 1], 1000, MPI_FLOAT, 1, 1, MPI_COMM_WORLD);) (25 1,     MPI_Recv(&valeurs[1], 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,   MPI_Finalize();)             MPI_Send(valeurs[1000 - 1], 1000, MPI_FLOAT, 1, 1, MPI_COMM_WORLD);)             MPI_Recv(valeurs[1], 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)             MPI_Recv(valeurs[1], 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Send(valeurs[1], 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD);)             MPI_Recv(valeurs[1], 1000, MPI", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 0,  MPI_Wtime();) (15 1,     MPI_Send(valeurs, 1000, MPI_FLOAT, 1, 1, MPI_COMM_WORLD);) (15 2,     MPI_Recv(valeurs, 1000, MPI_FLOAT, 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (15 0,  MPI_Wtime();) (20 1,     MPI_Recv(valeurs, 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,     MPI_Send(valeurs, 1000, MPI_FLOAT, 0, 1, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica4,  MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (41 1,   MPI_Scatterv(&matris, counts, displs, MPI_INT, &dizi, counts[rank], MPI_INT, 0, MPI_COMM_WORLD);) (42 1,   MPI_Gatherv(&matris, counts[rank], MPI_INT, &dizi, counts, displs, MPI_INT, 0, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,   MPI_Comm_split(MPI_COMM_WORLD, color, 0, &newcomm);) (11 1,   MPI_Comm_size(newcomm, &newSize);) (11 2,   MPI_Comm_rank(newcomm, &newRank);) (41 1,   MPI_Scatterv(matris, counts, displs, MPI_INT, dizi, counts[newRank], MPI_INT, 0, newcomm);) (46 1,       MPI_Send(dizi, 4, MPI_INT, 1, 666, MPI_COMM_WORLD);) (54 1,       MPI_Recv(dizi, 4, MPI_INT, 6, 666, MPI_COMM_WORLD, &status);) (57 1,   MPI_Scatter(dizi, 1, MPI_INT, &sonuc, 1, MPI_INT, 0, newcomm);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada4(N, N, MPI_COMM_WORLD, &N, MPI_COMM_WORLD);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &numeroProcessi);) (24 1,         MPI_Send(subArray, divisione, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (24 2,         MPI_Recv(subArray, divisione, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &Stat);) (29 1,       MPI_Recv(subArray, divisione, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &Stat);) (29 2,       MPI_Send(subArray, divisione, MPI_INT, rank - 1, 0, MPI_COMM_WORLD);) (33 1,         MPI_Send(subArray, divisione, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (33 2,         MPI_Recv(subArray, divisione, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &Stat);) (49 0,  MPI_Recv(subArray, divisione, MPI_INT, 0, 0, MPI_COMM_WORLD, &Stat);) (51 1,       MPI_Send(subArray, divisione, MPI_INT, 0, 0, MPI_COMM_WORLD);) (62 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &numeroProcessi);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (23 1,         MPI_Send(subArray, divisione, MPI_INT, rank, rank, MPI_COMM_WORLD);) (36 1,           MPI_Send(subArrayExtra, divisione + resto, MPI_INT, rank, rank, MPI_COMM_WORLD);) (40 1,           MPI_Send(subArray, divisione, MPI_INT, rank, rank, MPI_COMM_WORLD);) (49 1,     MPI_Recv(subArrayExtra, divisione + resto, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (49 0,  MPI_Get_count(&Stat, MPI_INT, &counter);) (61 1,     MPI_Recv(sub, divisione, MPI_INT, 0, myrank, MPI_COMM_WORLD, &Stat);) (61 0,  MPI_Get_count(&Stat, MPI_INT, &counter);) (70 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 0,  MPI_File_open(MPI_COMM_WORLD, \"test.datarep\", 8 | 1, MPI_INFO_NULL, &fileh);) (26 0,  MPI_File_set_view(fileh, 0, MPI_INT, MPI_INT, datarep[i], MPI_INFO_NULL);) (32 0,  MPI_File_write_at(fileh, (MPI_Offset) rank, (void *) (&sample_i), 1, MPI_INT, MPI_STATUS_IGNORE);) (38 0,  MPI_File_close(&fileh);) (42 1,     MPI_Barrier(MPI_COMM_WORLD);) (47 0,  MPI_File_delete(\"test.datarep\", MPI_INFO_NULL);) (48 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 0,  MPI_File_open(MPI_COMM_WORLD, \"test.datarep\", 8 | 1, MPI_INFO_NULL, &fileh);) (25 0,  MPI_File_set_view(fileh, 0, MPI_INT, MPI_INT, datarep[i], MPI_INFO_NULL);) (31 0,  MPI_File_write_at(fileh, (MPI_Offset) rank, (void *) (&sample_i), 1, MPI_INT, MPI_STATUS_IGNORE);) (37 0,  MPI_File_close(&fileh);) (41 1,     MPI_Barrier(MPI_COMM_WORLD);) (51 0,  MPI_File_delete(\"test.datarep\", MPI_INFO_NULL);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init(&argc, &argv);) (11 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dimCart2D, periods, reorder, &commCart2D);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Cart_coords(commCart2D, rank, nb_procs, coords);) (33 1,   MPI_Cart_shift(commCart2D, 0, 1, &nDimCart2D);) (33 2,   MPI_Cart_shift(commCart2D, 1, 1, &nb_procs, &my_rank);) (33 3,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs, &my_rank);) (33 4,   MPI_Cart_shift(commCart2D, 1, 1, &nb_procs, &my_rank);) (33 5,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs, &my_rank);) (33 6,   MPI_Cart_shift(commCart2D, 1, 1, &nb_procs, &my_rank);) (33 7,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs, &my_rank);) (33 8,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs, &my_rank);) (33 9,   MPI_Cart_shift(commCart2D, 1, 1, &nb_procs, &my_rank);) (33 10,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs, &my_rank);) (33 11,   MPI_Cart_shift(commCart2D, 1, 1, &nb_procs, &my_rank);) (33 12,   MPI_Cart_shift(commCart2D, 1, -1, &nb_procs", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_procs);) (20 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,   MPI_Cart_create(MPI_COMM_WORLD, nDimCart2D, dimCart2D, periods, reorder, &commCart2D);) (24 2,   MPI_Comm_rank(commCart2D, &rank);) (24 3,   MPI_Cart_coords(commCart2D, rank, nDimCart2D, coordCart2D);) (32 1,   MPI_Comm_split(commCart2D, coordCart2D[1], rank, &commCart1D);) (32 2,   MPI_Scatter(v, 1, MPI_DOUBLE, &w, 1, MPI_DOUBLE, 1, commCart1D);) (33 1,   MPI_Comm_free(&commCart1D);) (33 2,   MPI_Comm_free(&commCart2D);) (33 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(floats, 2, MPI_LONG, RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(floats, 2, MPI_LONG, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(signedCharsToSend, 2, (MPI_Datatype) ((void *) (&ompi_mpi_signed_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(signedCharsReceived, 2, (MPI_Datatype) ((void *) (&ompi_mpi_signed_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,   MPI_Op_create((MPI_User_function *) assoc, 0, &op);) (11 2,   MPI_Reduce(&op_specific, &op_specific, 1, MPI_INT, op, 0, MPI_COMM_WORLD);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (9 1,   MPI_Op_create((MPI_User_function *) myOp, 0, &op);) (11 1,     MPI_Op_free(&op);) (12 1,     MPI_Op_free(&op_unknown);) (12 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_type_extent(MPI_INT, &intaddress);) (30 0,  MPI_Type_extent(MPI_DOUBLE, &intaddress);) (32 0,  MPI_Type_extent(MPI_INT, &intaddress);) (34 0,  MPI_Type_extent(MPI_INT, &intaddress);) (38 0,  MPI_Type_extent(MPI_DOUBLE, &intaddress);) (39 0,  MPI_Type_extent(MPI_INT, &intaddress);) (41 0,  MPI_Type_extent(MPI_INT, &intaddress);) (41 0,  MPI_Type_extent(MPI_INT, &intaddress);) (47 0,  MPI_Type_extent(MPI_INT, &intaddress);) (51 0,  MPI_Type_extent(MPI_INT, &intaddress);) (53 0,  MPI_Type_extent(MPI_INT, &intaddress);) (53 0,  MPI_Type_extent(MPI_DOUBLE, &intaddress);) (59 0,  MPI_Type_extent(MPI_INT, &intaddress);) (59 0,  MPI_Type_extent(MPI_INT, &intaddress);) (64 0,  MPI_Type_extent(MPI_INT, &intaddress);) (69 0,  MPI_Type_extent(MPI_DOUBLE, &intaddress);) (72 0,  MPI_Type_extent(MPI_INT, &intaddress);) (78 0,  MPI_Type_extent(MPI_INT, &intaddress);) (81 0,  MPI_Type_extent(MPI_INT, &intaddress);) (82 0,  MPI_Type_extent(MPI_INT, &intaddress);) (85 0,  MPI_Type_extent(MPI_INT, &intaddress);) (85 0,  MPI_Type_extent(MPI_DOUBLE, &intaddress);) (85", "label": " (31 0,  MPI_Init(&argc, &argv);) (31 0,  MPI_Comm_size(MPI_COMM_WORLD, &uniSize);) (31 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 0,  MPI_Get_address(&sBuf[0].dblrank, &dbladdress);) (34 0,  MPI_Get_address(&sBuf[0].intrank, &intaddress);) (38 0,  MPI_Type_create_struct(count, array_of_blocklengths, array_of_displacements, array_of_types, &newtype);) (38 0,  MPI_Type_commit(&newtype);) (44 0,  MPI_Type_size(newtype, &bufsize);) (44 0,  MPI_Type_get_extent(newtype, &buflb, &bufextent);) (44 0,  MPI_Type_get_true_extent(newtype, &buflb, &buftrueextent);) (58 0,  MPI_Isend(&sBuf, 2, newtype, dest, 100, MPI_COMM_WORLD, &request);) (58 0,  MPI_Recv(&rBuf, 2, newtype, src, 100, MPI_COMM_WORLD, &status);) (58 0,  MPI_Wait(&request, &status);) (72 0,  MPI_Type_free(&newtype);) (72 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_type(&val, MPI_INT, root, MPI_COMM_WORLD);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Scatter(&buf, count, MPI_INT, &val, count, MPI_INT, root, MPI_COMM_WORLD);) (14 1,     MPI_Scatter(&buf, count, MPI_INT, &val, count, MPI_INT, root, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Gather(&val, count, MPI_INT, buf, count, MPI_INT, root, MPI_COMM_WORLD);) (14 1,     MPI_Gather(&val, count, MPI_INT, 0, 0, MPI_INT, root, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n28:   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,     MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (18 0,  MPI_Send(buf, 100000, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (20 0,  MPI_Recv(buf, 100000, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,     MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (18 0,  MPI_Send(buf, 100000, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (18 0,  MPI_Send(buf, 100000, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 0,  MPI_Wtime();) (24 1,       MPI_Recv(&recieve_buf, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &status);) (24 2,       MPI_Recv(&position11, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &status);) (24 3,       MPI_Recv(&recieve_buf, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &status);) (24 4,       MPI_Recv(&position12, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &status);) (24 5,       MPI_Recv(&recieve_buf, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &status);) (25 1,       MPI_Send(&SumNum, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (25 2,       MPI_Send(&x, 1, MPI_INT, 0, 1 + 1, MPI_", "label": " (2 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 0,  MPI_Wtime();) (61 1,     MPI_Reduce(&x, &recieve_buf, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (66 0,  MPI_Wtime();) (71 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (22 1,     MPI_Barrier(MPI_COMM_WORLD);) (29 1,     MPI_Barrier(MPI_COMM_WORLD);) (32 1,     MPI_Send(&send, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (32 2,     MPI_Send(&send, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (32 3,     MPI_Barrier(MPI_COMM_WORLD);) (35 1,       MPI_Recv(&recv, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 2,       MPI_Recv(&recv, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 3,       MPI_Barrier(MPI_COMM_WORLD);) (47 1,     MPI_Barrier(MPI_COMM_WORLD);) (47 2,     MPI_Barrier(MPI_COMM_WORLD);) (54 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,       MPI_Recv(tab_hostname[i], 256, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,     MPI_Send(myhostname, 256, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 1,       MPI_Send(tab, MSGSIZE, MPI_CHAR, send, 0, MPI_COMM_WORLD);) (47 1,       MPI_Recv(tab, MSGSIZE, MPI_CHAR, recv, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (49 1,   MPI_Barrier(MPI_COMM_WORLD);) (54 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Finalize();) (18 1,     MPI_Sendrecv(buf0, 128, MPI_INT, 1, 0, buf1, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (18 2,     MPI_Sendrecv(buf1, 128, MPI_INT, 1, 0, buf0, 128, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (23 1,     MPI_Sendrecv(buf0, 128, MPI_INT, 0, 0, buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 2,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 3,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 4,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (23 5,     MPI_Sendrecv(buf1, 128, MPI_INT, 0, 0, buf0, 128", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,     MPI_Sendrecv(buf0, 128, MPI_INT, 1, 0, buf1, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (23 1,     MPI_Recv(buf0, 128, MPI_INT, -1, 0, MPI_COMM_WORLD, &status);) (23 2,     MPI_Send(buf1, 128, MPI_INT, 0, 0, MPI_COMM_WORLD);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_barrier(MPI_COMM_WORLD);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,     MPI_Finalize();) (15 1,     MPI_Type_free(&type1);) (15 2,     MPI_Type_free(&type1);) (15 3,     MPI_Type_free(&type1);) (15 4,     MPI_Type_free(&type1);) (15 5,     MPI_Barrier(MPI_COMM_WORLD);) (15 6,     MPI_Type_free(&type1);) (15 7,     MPI_Type_free(&type1);) (17 1,   MPI_Finalize();)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);) (17 2,   MPI_Finalize();)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_Type_free(&type1);)         MPI_", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,     MPI_Finalize();) (15 1,     MPI_Type_commit(&type1);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>antierr =\n113:   MPI_Init(&argc, &argv);) (23 0,  MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (23 0,  MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (29 0,  MPI_Barrier(MPI_COMM_WORLD);) (31 0,  MPI_Irecv(sendbuff, buffsize, MPI_DOUBLE, 0, recvbuff, buffsize, MPI_DOUBLE, ntasks - 1, MPI_COMM_WORLD, &send_request);) (35 0,  MPI_Isend(sendbuff, buffsize, MPI_DOUBLE, 0, send_request, &send_request_offset);) (35 0,  MPI_Wait(&send_request, &status);) (35 0,  MPI_Wait(&send_request, &status);) (35 0,  MPI_Wtime();) (39 0,  MPI_Recv(recvbuff, buffsize, MPI_DOUBLE, 0, recv_buff, buffsize, MPI_DOUBLE, ntasks - 1, MPI_COMM_WORLD, &status);) (42 0,  MPI_Wtime();) (43 0,  MPI_Isend(sendbuff, buffsize, MPI_DOUBLE, 0, send_request, &send_request_offset);) (43 0,  MPI_Wait(&send_request, &status);) (43 0,  MPI_Wait(&send_request, &status);) (43 0,  MPI_Wtime();) (59 0,  MPI_Finalize();)", "label": " (23 1,   MPI_Init(&argc, &argv);) (23 2,   MPI_Comm_rank(MPI_COMM_WORLD, &taskid);) (23 3,   MPI_Comm_size(MPI_COMM_WORLD, &ntasks);) (49 0,  MPI_Gather(&sendbuffsum, 1, MPI_DOUBLE, sendbuffsums, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (60 0,  MPI_Wtime();) (63 0,  MPI_Isend(sendbuff, buffsize, MPI_DOUBLE, taskid + 1, 0, MPI_COMM_WORLD, &send_request);) (63 0,  MPI_Irecv(recvbuff, buffsize, MPI_DOUBLE, ntasks - 1, -1, MPI_COMM_WORLD, &recv_request);) (63 0,  MPI_Wtime();) (67 0,  MPI_Isend(sendbuff, buffsize, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &send_request);) (67 0,  MPI_Irecv(recvbuff, buffsize, MPI_DOUBLE, taskid - 1, -1, MPI_COMM_WORLD, &recv_request);) (67 0,  MPI_Wtime();) (70 0,  MPI_Isend(sendbuff, buffsize, MPI_DOUBLE, taskid + 1, 0, MPI_COMM_WORLD, &send_request);) (70 0,  MPI_Irecv(recvbuff, buffsize, MPI_DOUBLE, taskid - 1, -1, MPI_COMM_WORLD, &recv_request);) (70 0,  MPI_Wtime();) (71 0,  MPI_Wait(&send_request, &status);) (71 0,  MPI_Wait(&recv_request, &status);) (78 0,  MPI_Gather(&recvbuffsum, 1, MPI_DOUBLE, recvbuffsums, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (78 0,  MPI_Gather(&recvtime, 1, MPI_DOUBLE, recvtimes, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (94 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (32 1,   MPI_Bcast(&bias, 1, MPI_INT, 0, MPI_COMM_WORLD);) (32 2,   MPI_Bcast", "label": " (34 1,   MPI_Init(&argc, &argv);) (34 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (41 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (109 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (13 1,     MPI_Get_processor_name(computer_name, &namelen);) (17 1,     MPI_Send(a, 2, MPI_INT, 1, 99, MPI_COMM_WORLD);) (18 1,     MPI_Recv(a, 2, MPI_INT, 0, 99, MPI_COMM_WORLD, &status);) (19 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (9 3,   MPI_Get_processor_name(computer_name, &namelen);) (12 1,     MPI_Send(a, 1, MPI_INT, 1, 12, MPI_COMM_WORLD);) (16 1,     MPI_Recv(a, 1, MPI_INT, 0, 12, MPI_COMM_WORLD, &status);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n16:   MPI_Win win;\n17:   MPI_Group comm_group;\n18:   MPI_Group group;\n19:   MPI_Comm comm;\n20:   int ranks[2];\n21:   int nranks;\n22:   int ranks2[2];\n23:   int ranks3[2];\n24:   int ranks4[2];\n25:   int ranks5[2];\n26:   int ranks6[2];\n27:   MPI_Comm comm_group;\n28:   MPI_Group group;\n29:   MPI_Group comm_group;\n30:   MPI_Group group;\n31:   MPI_Win win_n;\n32:   MPI_Win win_pi;\n33:   MPI_Comm comm_group;\n34:   MPI_Group group;\n35:   comm = MPI_COMM_WORLD;\n36:   if (verbose)\n37:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n38:   if (verbose)\n39:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n40:   if (verbose)\n41:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n42:   if (verbose)\n43:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n44:   if (verbose)\n45:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n46:   if (verbose)\n47:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n48:   if (verbose)\n49:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n50:   if (verbose)\n51:     printf(\"%d: Error creating comm %d\\n\", rank, i);\n52:", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Pack_external_size(\"external32\", 1, MPI_LONG, &size);) (9 1,   MPI_Pack_external(\"external32\", &input, 1, MPI_LONG, buf, size, &pos);) (10 1,   MPI_Unpack_external(\"external32\", buf, size, &pos, &output, 1, MPI_LONG);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(26 1,   MPI_Init(&argc, &argv);) (26 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 1,     MPI_Open_port(MPI_INFO_NULL, port);) (36 1,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (36 2,     MPI_Intercomm_merge(tmp, 0, &comm);) (36 3,     MPI_Comm_rank(comm, &myNum);) (36 4,     MPI_Comm_size(comm, &size);) (44 1,     MPI_Intercomm_merge(tmp, 0, &comm);) (44 2,     MPI_Comm_rank(comm, &myNum);) (44 3,     MPI_Comm_size(comm, &size);) (44 4,     MPI_Comm_rank(comm, &myNum);) (44 5,     MPI_Intercomm_merge(tmp, 0, &comm);) (44 6,     MPI_Comm_rank(comm, &myNum);) (44 7,     MPI_Comm_size(comm, &size);) (44 8,     MPI_Comm_rank(comm, &myNum);) (44 9,     MPI_Comm_size(comm, &size);) (44 10,     MPI_Comm_rank(comm, &myNum);) (44 11,     MPI_Comm_rank(comm, &myNum);) (44 12,     MPI_Intercomm_merge(tmp, 0, &comm);) (44 13,     MPI_Comm_rank(comm, &myNum);) (44 14,     MPI_Comm_size(comm, &size);) (44 15,     MPI_Comm_rank(comm", "label": " (20 1,   MPI_Init(0, 0);) (24 1,     MPI_Open_port(MPI_INFO_NULL, portName);) (44 1,     MPI_Comm_connect(port, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &tmp);) (49 1,     MPI_Intercomm_merge(tmp, 1, &comm);) (54 1,     MPI_Comm_free(&tmp);) (55 1,   MPI_Comm_size(comm, &size);) (57 1,     MPI_Comm_accept(port, MPI_INFO_NULL, 0, comm, &tmp);) (62 1,     MPI_Intercomm_merge(tmp, 0, &comm);) (67 1,     MPI_Comm_rank(comm, &cachedRank);) (67 2,     MPI_Comm_free(&tmp);) (67 3,     MPI_Comm_size(comm, &size);) (77 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|> = 1;\n30:   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 1,     MPI_Send(mess, strlen(mess) + 1, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (21 1,       MPI_Recv(mess, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (25 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (16 1,     MPI_Send(mess, count, MPI_CHAR, dest, tag, MPI_COMM_WORLD);) (21 1,       MPI_Recv(mess, 100, MPI_CHAR, source, tag, MPI_COMM_WORLD, &status);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,         MPI_Send(&c, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (20 2,         MPI_Recv(&d, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)             MPI_Send(&c, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);)             MPI_Recv(&d, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Finalize();)             MPI_Finalize();)             MPI_Send(&c, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);)             MPI_Recv(&d, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)             MPI_Finalize();)             MPI_Finalize", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dim, per, 1, &com);) (9 1,   MPI_Cart_coords(com, rank, 2, cord);) (20 1,         MPI_Cart_shift(com, c, d, &rank, &neighbour);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&wideCharactersToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&wideCharactersReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,       MPI_Ssend(&wideCharacterToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_wchar)), 1, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&wideCharacterReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_wchar)), 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(ptr, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 0,  MPI_Wtime();) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &l.rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &l.size);) (22 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 1,     MPI_Gather(&l, 1, MPI_CHAR, buf, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (32 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (9 0,  MPI_Wtime();) (29 1,  MPI_Wtime() - tm);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (13 3,     MPI_Status_free(&stat);) (13 4,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 5,     MPI_Wait(&req, &stat);) (13 6,     MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 1,     MPI_Irecv(buffer, 1000, MPI_UNSIGNED, 0, 124523, MPI_COMM_WORLD, &req);) (12 2,     MPI_Wait(&req, &stat);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 1,   MPI_Info_create(&win_info);) (14 2,   MPI_Info_set(win_info, \"alloc_shared_noncontig\", \"true\");) (14 3,   MPI_Win_allocate(1000 * (sizeof(double)), sizeof(double), win_info, MPI_COMM_WORLD, &baseptr, &win);) (14 4,   MPI_Win_lock_all(0, win);) (24 1,       MPI_Waitany(10, put_req, &j, MPI_STATUS_IGNORE);) (25 1,     MPI_Rget(data[j], 1000, MPI_DOUBLE, target, i * 1000, 1000, MPI_DOUBLE, win, &get_req);) (25 2,     MPI_Wait(&get_req, MPI_STATUS_IGNORE);) (27 1,   MPI_Info_free(&win_info);) (27 2,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (13 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (14 1,   MPI_Info_create(&win_info);) (14 2,   MPI_Info_set(win_info, \"alloc_shm\", \"false\");) (14 3,   MPI_Win_allocate((100 * 1000) * (sizeof(double)), sizeof(double), win_info, (MPI_Comm) 0x44000000, &baseptr, &win);) (14 4,   MPI_Win_lock_all(0, win);) (24 1,       MPI_Waitany(10, put_req, &j, (MPI_Status *) 1);) (25 1,     MPI_Rget(data[j], 1000, (MPI_Datatype) 0x4c00080b, target, i * 1000, 1000, (MPI_Datatype) 0x4c00080b, win, &get_req);) (25 2,     MPI_Wait(&get_req, (MPI_Status *) 1);) (26 1,     MPI_Rput(data[j], 1000, (MPI_Datatype) 0x4c00080b, target, i * 1000, 1000, (MPI_Datatype) 0x4c00080b, win, &put_req[j]);) (28 1,   MPI_Waitall(10, put_req, (MPI_Status *) 1);) (28 2,   MPI_Win_unlock_all(win);) (28 3,   MPI_Win_free(&win);) (28 4,   MPI_Info_free(&win_info);) (28 5,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 4,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (21 1,       MPI_Send(A[i], 800, MPI_FLOAT, i, 10, MPI_COMM_WORLD);) (21 2,       MP", "label": " (13 0,  MPI_Wtime();) (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (40 0,  MPI_Wtime();) (40 1,   MPI_Reduce(&myrank, &operatorCountSum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (40 2,   MPI_Barrier(MPI_COMM_WORLD);) (40 0,  MPI_Wtime();) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 0,  MPI_Init(&argc, &argv);) (11 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (16 0,  MPI_Send(arr, 5, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 0,  MPI_Recv(arr, 5, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (21 0,  MPI_Recv(arr, 5, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (22 0,  MPI_Send(arr, 5, MPI_INT, 0, 0, MPI_COMM_WORLD);) (27 0,  MPI_Finalize();)", "label": " (7 0,  MPI_Init(&argc, &argv);) (7 0,  MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (15 0,  MPI_Send(arr, 5, MPI_INT, 1, 100, MPI_COMM_WORLD);) (19 0,  MPI_Recv(arr, 5, MPI_INT, 0, 100, MPI_COMM_WORLD, &status);) (24 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_sort(total_t, my_rank, comm_sz, MPI_COMM_WORLD);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (43 1,   MPI_Bcast(&matrixSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 2,   MPI_Bcast(&minimal, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 3,   MPI_Bcast(&matrixSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 4,   MPI_Bcast(&minimal, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 5,   MPI_Bcast(&matrixSize, 1, MPI_INT, 0, MPI_COMM_WORLD);) (64 1,         MPI_Recv(&curCost, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (72 1,       MPI_Recv(&curCost, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (85 1,     MPI_Send(&total_t, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)         MPI_Abort(MPI_COMM_WORLD, 0);)         MPI_Abort(MPI_COMM_WORLD, 0);)         MPI_Abort(MPI_COMM_WORLD, 0);)         MPI_Abort(MPI_COMM_WORLD, 0);)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (47 1,       MPI_Send(distanceMatrix, (cityNum - 1) * (cityNum - 1), MPI_INT, i, 0, MPI_COMM_WORLD);) (55 1,       MPI_Recv(distanceMatrix, matrixSize, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (99 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_type:\n42:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,   MPI_Info_create(&info);) (22 2,   MPI_Info_set(info, \"max_result\", \"true\");) (22 3,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (29 1,   MPI_Barrier(MPI_COMM_WORLD);) (37 1,     MPI_Info_free(&info);) (37 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (17 2,   MPI_Win_lock_all(0, win);) (22 1,   MPI_Win_unlock_all(win);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (34 1,     MPI_Info_free(&info);) (35 1,     MPI_Win_free(&win);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ide_to_file(buffer, 1024, &size_mega_commited_by_rank);) (46 1,   MPI_Finalize();)", "label": " (23 1,   MPI_Init(&argc, &argv);) (23 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (41 1,     MPI_Reduce(&local_bandwith, &global_bandwith, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (42 1,     MPI_Barrier(MPI_COMM_WORLD);) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>k3d_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Get_address(&buf->c, &base);) (7 2,   MPI_Get_address(&buf->d, &displacements[0]);) (7 3,   MPI_Get_address(&buf->d, &displacements[1]);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Type_free(&new_t);) (27 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Type_free(&new_t);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,     MPI_Comm_split(MPI_COMM_WORLD, color, rank, &new_comm);) (18 1,     MPI_Barrier(new_comm);) (19 1,   MPI_Info_create(&info);) (19 2,   MPI_Info_set(info, \"add-hostfile\", \"startinghosts\");) (19 3,   MPI_Comm_set_name(MPI_COMM_WORLD, \"MPI_COMM_WORLD\");) (22 0,  MPI_Comm_split(MPI_COMM_WORLD, color, rank, &new_comm);) (25 1,     MPI_Barrier(new_comm);) (25 2,     MPI_Comm_free(&new_comm);) (25 3,   MPI_Info_free(&info);) (25 4,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_dup(MPI_COMM_WORLD, &dup_comm);) (10 3,   MPI_Comm_rank(dup_comm, &rank);) (10 4,   MPI_Comm_size(dup_comm, &size);) (10 5,   MPI_Info_create(&info);) (10 6,   MPI_Info_set(info, \"romio_no_indep_rw\", \"true\");) (15 1,   MPI_Bcast(buf, 2, MPI_INT, 0, dup_comm);) (22 0,  MPI_Comm_split(dup_comm, color, 0, &new_comm);) (25 1,       MPI_Comm_free(&new_comm);) (27 1,   MPI_Info_free(&info);) (27 2,   MPI_Comm_free(&dup_comm);) (27 3,   MPI_Barrier(MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(&argc, &argv);) (12 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 0,  MPI_Wtime();) (18 1,       MPI_Win_create(&flag, sizeof(int), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (19 1,       MPI_Win_create(0, 0, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (19 2,       MPI_Win_fence(0, win);) (19 0,  MPI_Wtime();) (23 1,         MPI_Win_fence(0, win);) (23 2,         MPI_Accumulate(&one, 1, MPI_INT, 0, 0, 1, MPI_INT, MPI_SUM, win);) (23 3,         MPI_Win_fence(0, win);) (24 1,       MPI_Win_fence(0, win);) (24 2,       MPI_Accumulate(&one, 1, MPI_INT, 0, 0, 1, MPI_INT, MPI_SUM, win);) (24 3,       MPI_Win_fence(0, win);) (24 4,       MPI_Win_fence(0, win);) (24 5,       MPI_Win_fence(0, win);) (26 1,   MPI_Win_free(&win);) (26 2,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 4,   MPI_Win_create(&one, sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (12 5,   MPI_Win_lock_all(0, win);) (12 6,   MPI_Barrier(MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (18 1,         MPI_Accumulate(&two, 1, MPI_INT, 1, 0, 1, MPI_INT, (MPI_Op) ((void *) (&ompi_mpi_op_replace)), win);) (18 2,         MPI_Win_flush(1, win);) (20 0,  MPI_Wtime();) (25 1,   MPI_Barrier(MPI_COMM_WORLD);) (25 2,   MPI_Win_unlock_all(win);) (25 3,   MPI_Win_free(&win);) (25 4,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, nprocs, outbuf, 18, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Finalize();) (19 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (19 2,   MPI_Type_commit(&conti);) (19 3,   MPI_Allgather(outbuf, 6 / (3 - rank), conti, inbuf, 6 + (rank % 2), MPI_INT, MPI_COMM_WORLD);) (21 1,     MPI_Type_free(&conti);) (21 2,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Finalize();) (19 1,   MPI_Type_contiguous(3 - rank, MPI_INT, &conti);) (19 2,   MPI_Type_commit(&conti);) (20 1,     MPI_Scatter(0, 0, MPI_DATATYPE_NULL, inbuf, 5, MPI_INT, 2, MPI_COMM_WORLD);) (21 1,     MPI_Scatter(outbuf, 6, MPI_INT, inbuf, 6 / (3 - rank), conti, 2, MPI_COMM_WORLD);) (21 2,   MPI_Type_free(&conti);) (21 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(4, 5, matris, count, rank);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Scatter(matris, 5, MPI_INT, ortakDizi, 5, MPI_INT, 0, MPI_COMM_WORLD);) (17 2,   MPI_Barrier(MPI_COMM_WORLD);) (21 1,   MPI_Reduce(&ortakDiziToplam, &genelToplam, 1, MPI_INT, MPI_MIN, 0, MPI_COMM_WORLD);) (21 2,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (23 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (42 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (43 1,   MPI_Group_incl(world_group, 4, shm_nproc, &world_group_incl);) (43 2,   MPI_Comm_create_group(MPI_COMM_WORLD, world_group, 0, &create_comm);) (43 3,   MPI_Group_rank(create_group, &dst_shm_rank);) (43 4,   MPI_Comm_create_group(MPI_COMM_WORLD, world_group, 0, &my_base[0]);) (43 5,   MPI_Comm_create_group(MPI_COMM_WORLD, world_group, 0, &my_comm);) (43 6,   MPI_Comm_rank(my_comm, &shm_rank);) (43 7,   MPI_Comm_size(my_comm, &shm_nproc);) (52 1,     MPI_Comm_free(&my_comm);) (52 2,     MPI_Comm_free(&my_base[0]);) (55 1,     MPI_Comm_free(&my_comm);) (57 1,   MPI_Group_free(&world_group);) (57 2,   MPI_Reduce(&errors, &all_errors,", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (21 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (21 4,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (21 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (21 6,   MPI_Comm_size(shm_comm, &shm_nproc);) (26 1,   MPI_Comm_group(shm_comm, &shm_group);) (26 2,   MPI_Comm_group((MPI_Comm) 0x44000000, &world_group);) (26 3,   MPI_Group_translate_ranks(shm_group, 1, &dst_shm_rank, world_group, &dst_world_rank);) (27 1,   MPI_Win_allocate_shared((sizeof(int)) * 4, sizeof(int), (MPI_Info) 0x1c000000, shm_comm, &my_base, &shm_win);) (31 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &bases[i]);) (42 1,   MPI_Win_create(my_base, (sizeof(int)) * 4, sizeof(int), create_info, (MPI_Comm) 0x44000000, &win);) (42 2,   MPI_Win_lock_all(0, win);) (42 3,   MPI_Win_lock_all(0, shm_win);) (44 1,     MPI_Put(&local_buf[0], 1, (MPI_Datatype) 0x4c000405, dst_world_rank, 0, 1, (MPI_Datatype) 0x4c000405, win);) (44 2,     MPI_Put(&local_buf[4 - 1], 1, (MPI_Datatype) 0x4c000405, dst_world_rank, 4 - 1, 1, (MPI_Datatype) 0x4c000405, win);) (44 3,     MPI_Win_flush(dst_world_rank, win);) (45 1,   MPI_Win_sync(shm_win);) (45 2,   MPI_Barrier(shm_comm);) (45 3,   MPI_Win_sync(shm_win);) (55 1,   MPI_Win_unlock_all(shm_win);) (55 2,   MPI_Win_unlock_all(win);) (55 3,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (55 4,   MPI_Win_free(&win);) (55 5,   MPI_Win_free(&shm_win);) (60 1,     MPI_Info_free(&create_info);) (61 1,     MPI_Comm_free(&shm_comm);) (62 1,     MPI_Group_free(&shm_group);) (63 1,     MPI_Group_free(&world_group);) (63 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>15:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (13 1,     MPI_Win_fence(0, win);) (13 2,     MPI_Win_fence(0, win);) (13 3,     MPI_Win_fence(0, win);) (13 4,     MPI_Win_fence(0, win);) (13 5,     MPI_Win_fence(0, win);) (13 6,     MPI_Win_fence(0, win);) (13 7,     MPI_Win_fence(0, win);) (13 8,     MPI_Win_fence(0, win);) (13 9,     MPI_Win_fence(0, win);) (13 10,     MPI_Win_fence(0, win);) (13 11,     MPI_Win_fence(0, win);) (13 12,     MPI_Win_fence(0, win);) (13 13,     MPI_Win_fence(0, win);) (13 14,     MPI_Win_fence(0, win);) (13 15,     MPI_Win_fence(0, win);) (13 16,     MPI_Win_fence(0, win);) (", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (10 1,     MPI_Win_fence(2, win);) (13 1,     MPI_Win_fence(0, win);) (13 2,     MPI_Win_fence(0, win);) (14 1,   MPI_Win_free(&win);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 1,   MPI_Info_create(&win_info);) (33 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"fence\");) (33 3,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (43 1,     MPI_Info_free(&win_info);) (43 2,   MPI_Win_free(&win);) (52 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 1,   MPI_Info_create(&win_info);) (33 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"fence\");) (33 3,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (38 1,     MPI_Win_fence(2, win);) (43 1,     MPI_Win_fence(16, win);) (43 2,     MPI_Barrier(MPI_COMM_WORLD);) (52 1,     MPI_Info_free(&win_info);) (54 1,     MPI_Win_free(&win);) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &idp);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &idp);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (15 1,   MPI_Scatter(local_array, 2, MPI_FLOAT, local_int, 2, MPI_FLOAT, 0, MPI_COMM_WORLD);) (33 1,   MPI_Gather(local_int, 2, MPI_FLOAT, local_array, 2, MPI_FLOAT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Barrier(MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (33 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c00040a, local_array, 4, (MPI_Datatype) 0x4c00040a, (MPI_Comm) 0x44000000);) (35 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, -1, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(my_rank, reduction_result, &my_rank, &my_size);) (10 1,   MPI_Reduce(&my_rank, &reduction_result, 1, MPI_INT, MPI_SUM, root_rank, MPI_COMM_WORLD);) (10 2,   MPI_Reduce(&my_rank, &reduction_result, 1, MPI_INT, MPI_SUM, root_rank, MPI_COMM_WORLD);) (14 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 1,   MPI_Reduce(&my_rank, &reduction_result, 1, MPI_INT, MPI_SUM, root_rank, MPI_COMM_WORLD);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(matrix, n_locations, comm_size, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (21 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,     MPI_Win_allocate_shared(size, sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (22 1,   MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (23 1,   MPI_Win_lock_all(0, shwin);) (24 1,   MPI_Win_sync(shwin);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 3,   MPI_Win_sync(shwin);) (24 4,   MPI_Win_unlock_all(shwin);) (24 5,   MPI_Win_free(&shwin);) (24 6,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,   MPI_Win_allocate_shared((rank == 0)? (sizeof(int)) : (0), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &shptr, &shwin);) (10 1,   MPI_Win_shared_query(shwin, 0, &rsize, &rdisp, &rptr);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,   MPI_Win_lock_all(0, shwin);) (17 1,     MPI_Win_sync(shwin);) (25 1,     MPI_Win_sync(shwin);) (27 1,   MPI_Win_unlock_all(shwin);) (38 1,   MPI_Win_free(&shwin);) (38 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,     MPI_Send(&value, 1, MPI_BYTE, 1, 0, MPI_COMM_WORLD);) (18 1,     MPI_Recv(&value, 1, MPI_BYTE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,       MPI_Send(&value, 1, MPI_BYTE, 1, 0, MPI_COMM_WORLD);) (24 1,       MPI_Recv(&value, 1, MPI_BYTE, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,     MPI_Recv(&value, 1, MPI_BYTE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,     MPI_Send(&value, 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&value, 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,     MPI_Recv(&value, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,     MPI_Send(&value, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 4,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (37 1,   MPI_Comm_spawn(\"spawn_merge_child1\", (char **) 0, NumberProcesses, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &interComm, erro);) (37 2", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_UNIVERSE_SIZE, &UniverseSize, &Flag);) (10 3,   MPI_Comm_get_parent(&InterComm);) (10 4,   MPI_Intercomm_merge(InterComm, 1, &IntraComm);) (10 5,   MPI_Comm_free(&InterComm);) (10 6,   MPI_Comm_size(IntraComm, &NumberProcesses);) (10 7,   MPI_Comm_rank(IntraComm, &ID);) (10 8,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (11 1,   MPI_Comm_disconnect(&IntraComm);) (11 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(20, 0) (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (22 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (46 1,     MPI_Recv(&res, 1, MPI_DOUBLE, -1, tag, MPI_COMM_WORLD, &stat);) (46 2,     MPI_Send(&res, 1, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (31 1,     MPI_Send(&res, 1, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (33 1,       MPI_Recv(&iw, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &stat);) (40 1,       MPI_Send(&res, 1, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (53 1,       MPI_Recv(&res, 1, MPI_DOUBLE, -1, tag, MPI_COMM_WORLD, &stat);) (55 1,       MPI_Send(&iw, 1, MPI_INT, ipw, tag, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (9 0,  MPI_Wtime();) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (11 1,   MPI_Bcast(data, 100000000, MPI_FLOAT, 0, MPI_COMM_WORLD);) (11 2,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (9 1,   MPI_Bcast(data, 100000000, MPI_FLOAT, 0, MPI_COMM_WORLD);) (9 2,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (10 0,  MPI_Wtime();) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 4,   MPI_Barrier(MPI_COMM_WORLD);) (4 5,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>, double t0 = omp_get_wtime();) (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)                     MPI_Irecv(buffer, nxt, MPI_INT, (rank + 1) % size, 42, MPI_COMM_WORLD, &req);) (19 2,   MPI_Wait(&req, MPI_STATUS_IGNORE);)                   MPI_Isend(buffer, nxt, MPI_INT, (rank + 1) % size, 42, MPI_COMM_WORLD, &req);) (19 3,   MPI_Wait(&req, MPI_STATUS_IGNORE);)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,   MPI_Irecv(buffer_r, 4000, MPI_INT, pre, 42, MPI_COMM_WORLD, &req);) (17 2,   MPI_Send(buffer, 4000, MPI_INT, nxt, 42, MPI_COMM_WORLD);) (17 3,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (31 4,   MPI_Get_processor_name(processor_name, &namelen);) (52 1,       MPI_Send(&a1, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (52 2,       MPI_Send(&a2, 1, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);) (52 3,       MPI_Send(&b, 1, MPI_DOUBLE, 0, 2, MPI_COMM_WORLD);) (52 4,       MPI_Send(&b1, 1, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);) (52 5,       MPI_Send(&b, 1, MPI_DOUBLE, 0, 2, MPI_COMM_WORLD);) (52", "label": " (31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (31 4,   MPI_Get_processor_name(processor_name, &namelen);) (52 0,  MPI_Wtime();) (52 1,       MPI_Pack(&Eps, 1, MPI_DOUBLE, &outbuf, bufferSize, &posicion, MPI_COMM_WORLD);) (52 2,       MPI_Pack(&a, 1, MPI_DOUBLE, &outbuf, bufferSize, &posicion, MPI_COMM_WORLD);) (52 3,       MPI_Pack(&b, 1, MPI_DOUBLE, &outbuf, bufferSize, &posicion, MPI_COMM_WORLD);) (52 4,       MPI_Pack(&c, 1, MPI_DOUBLE, &outbuf, bufferSize, &posicion, MPI_COMM_WORLD);) (53 1,     MPI_Bcast(outbuf, bufferSize, (MPI_Datatype) ((void *) (&ompi_mpi_packed)), 0, MPI_COMM_WORLD);) (60 1,         MPI_Unpack(&outbuf, bufferSize, &posicion, &Eps, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (60 2,         MPI_Unpack(&outbuf, bufferSize, &posicion, &a, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (60 3,         MPI_Unpack(&outbuf, bufferSize, &posicion, &b, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (60 4,         MPI_Unpack(&outbuf, bufferSize, &posicion, &c, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (75 1,     MPI_Reduce(&finalSum, &Gsum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (77 0,  MPI_Wtime();) (94 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>at 0,  MPI_Wtime();) (10 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (22 1,       MPI_Isend(&sendarr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (29 1,     MPI_Recv(&recvarr[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 1,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (37 2,     MPI_Isend(&sendarr[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (38 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (17 1,     MPI_Irecv(&sendarr[0], 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (17 2,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&sendarr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,     MPI_Irecv(&redans, 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (28 2,     MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (30 1,       MPI_Send(&sum, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (37 1,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (37 2,     MPI_Recv(&redans, 1, MPI_INT, root, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &p_x_dims);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 1,   MPI_Bcast(&coords, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 2,   MPI_Bcast(&coords, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 3,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 4,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 5,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 6,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 7,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 8,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 9,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 10,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 11,   MPI_Bcast(&bounds, 2, MPI_INT, 0, MPI_COMM_WORLD);) (32 12,   MPI_Bcast(&bounds, 2, MPI_INT, 0", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Dims_create(size, 2, dims);) (12 2,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &cart_comm);) (12 3,   MPI_Cart_coords(cart_comm, rank, 2, coords);) (12 4,   MPI_Cart_shift(cart_comm, 0, 1, &p_north, &p_south);) (12 5,   MPI_Cart_shift(cart_comm, 1, 1, &p_west, &p_east);) (46 1,   MPI_Type_free(&mpi_cell_t);) (46 2,   MPI_Type_free(&local_petri_t);) (46 3,   MPI_Type_free(&border_row_t);) (46 4,   MPI_Type_free(&border_col_t);) (46 5,   MPI_Type_free(&petri_selection_t);) (46 6,   MPI_Type_free(&petri_selection_global_t);) (46 7,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[3 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &baseptr);) (11 2,   MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &buf);) (11 3,   MPI_Win_create(baseptr, (MPI_Aint) n, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (11 4,   MPI_Win_lock_all(0, win);) (13 1,     MPI_Get(baseptr, c, MPI_DOUBLE, 0, 0, c, MPI_DOUBLE, win);) (21 1,     MPI_Win_unlock_all(win);) (21 2,     MPI_Win_free(&win);) (22 1,   MPI_Free_mem(baseptr);) (22 2,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,   MPI_Win_allocate((MPI_Aint) ((rank == 0)? (n) : (0)), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &baseptr, &win);) (11 2,   MPI_Win_lock_all(0, win);) (14 1,     MPI_Win_sync(win);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,     MPI_Alloc_mem((MPI_Aint) n, MPI_INFO_NULL, &buf);) (19 1,     MPIX_Put_x(buf, c, MPI_DOUBLE, 0, 0, c, MPI_DOUBLE, win);) (20 1,     MPIX_Accumulate_x(buf, c, MPI_DOUBLE, 0, 0, c, MPI_DOUBLE, MPI_SUM, win);) (21 1,     MPIX_Get_x(buf, c, MPI_DOUBLE, 0, 0, c, MPI_DOUBLE, win);) (37 1,   MPI_Win_unlock_all(win);) (37 2,   MPI_Win_free(&win);) (37 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60:   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (17 3,   MPI_Get_processor_name(processor_name, &namelen);) (24 0,  MPI_Wtime();) (25 1,   MPI_Bcast(&n, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (38 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (45 0,  MPI_Wtime();) (51 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (19 4,   MPI_Get_processor_name(processor_name, &namelen);) (24 0,  MPI_Wtime();) (28 1,     MPI_Send(&n, 1, MPI_LONG, i, 10, MPI_COMM_WORLD);) (30 1,     MPI_Recv(&n, 1, MPI_LONG, 0, 10, MPI_COMM_WORLD, &status);) (40 1,     MPI_Send(&mypi, 1, MPI_DOUBLE, 0, 20, MPI_COMM_WORLD);) (44 1,       MPI_Recv(&sumI, 1, MPI_DOUBLE, i, 20, MPI_COMM_WORLD, &status);) (51 0,  MPI_Wtime();) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, size, &range[0][0], &range[0][1]);) (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (9 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (9 4,   MPI_Comm_group((MPI_Comm) 0x44000000, &full_group);) (14 1,     MPI_Group_range_incl(full_group, 1, range, &half_group);) (14 2,     MPI_Comm_create_group((MPI_Comm) 0x44000000, half_group, 0, &comm);) (14 3,     MPI_Barrier(comm);) (14 4,     MPI_Comm_free(&comm);) (15 1,   MPI_Group_free(&half_group);) (15 2,   MPI_Group_free(&full_group);) (17 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 4,   MPI_Comm_group(MPI_COMM_WORLD, &full_group);) (12 1,   MPI_Group_range_incl(full_group, 1, range, &half_group);) (14 1,     MPI_Comm_create_group(MPI_COMM_WORLD, half_group, 0, &comm);) (14 2,     MPI_Barrier(comm);) (14 3,     MPI_Comm_free(&comm);) (15 1,   MPI_Group_free(&half_group);) (15 2,   MPI_Group_free(&full_group);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (18 1,     MPI_Irecv(buf, 4, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[0]);) (18 2,     MPI_Irecv(buf, 4, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[1]);) (18 3,     MPI_Testall(4, requests, &flag, statuses);) (18 4,     MPI_Testall(4, requests, &flag, statuses);) (21 1,     MPI_Send(buf, 4, MPI_INT, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Irecv(buf, 4, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[0]);) (24 2,     MPI_Irecv(buf, 4, MPI_INT, -1, 0, MPI_COMM_WORLD, &requests[1]);) (24 3,     MPI_Testall(4, requests, &flag, statuses);) (24 4,     MPI_Send(buf, 4, MPI_INT, 0, 0, MPI_COMM_WORLD);) (24 5,     MPI_Waitall(4, requests, statuses);) (24 6,     MPI_Testall(4, requests, &flag, statuses);) (26 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,     MPI_Finalize();) (18 1,     MPI_Send(&buf[0], 1, MPI_INT, 1, 666, MPI_COMM_WORLD);) (18 2,     MPI_Recv(&buf[1], 1, MPI_INT, 1, 666, MPI_COMM_WORLD, statuses);) (21 1,     MPI_Recv_init(&buf[0], 1, MPI_INT, 0, 666, MPI_COMM_WORLD, &requests[0]);) (21 2,     MPI_Send_init(&buf[1], 1, MPI_INT, 0, 666, MPI_COMM_WORLD, &requests[1]);) (21 3,     MPI_Recv_init(&buf[2], 1, MPI_INT, 2, 123, MPI_COMM_WORLD, &requests[2]);) (21 4,     MPI_Recv_init(&buf[3], 1, MPI_INT, -1, 444, MPI_COMM_WORLD, &requests[3]);) (21 5,     MPI_Startall(4, requests);) (21 6,     MPI_Waitall(4, requests, statuses);) (21 7,     MPI_Request_free(&requests[0]);) (21 8,     MPI_Request_free(&requests[1]);) (21 9,     MPI_Request_free(&requests[2]);) (21 10,     MPI_Request_free(&requests[3]);) (24 1,     MPI_Send(&buf[0], 1, MPI_INT, 1, 123, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(&msg, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (10 1,     MPI_Recv(&msg, 1, MPI_INT, size - 1, 0, MPI_COMM_WORLD, &status);) (13 1,     MPI_Recv(&msg, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (19 1,     MPI_Send(&msg, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Recv(&msg, 1, MPI_INT, rank - 1, 1, MPI_COMM_WORLD, &status);) (13 1,     MPI_Send(&msg, 1, MPI_INT, rank + 1, 1, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&msg, 1, MPI_INT, rank + 1, 1, MPI_COMM_WORLD, &status);) (19 1,     MPI_Send(&msg, 1, MPI_INT, rank - 1, 1, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (5 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,   MPI_Info_create(&info);) (12 2,   MPI_Info_set(info, \"accumulate_ordering\", \"true\");) (12 3,   MPI_Win_allocate((sizeof(double)) * 5, sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (14 1,     MPI_Win_free(&win);) (15 1,   MPI_Info_free(&info);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Win_allocate((sizeof(double)) * 5, sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 1,     MPI_Info_free(&info);) (24 1,     MPI_Win_free(&win);) (24 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 4,   MPI_Barrier(MPI_COMM_WORLD);) (19 0,  MPI_Wtime();) (77 1,   MPI_Barrier(MPI_COMM_WORLD);) (77 0,  MPI_Wtime();) (80 1,   MPI_Reduce(&temp, &result, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (84 1,   MPI_Barrier(MPI_COMM_WORLD);) (84 0,  MP", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 0,  MPI_Wtime();) (35 1,   MPI_Allgather(tempEulerR, localN, MPI_DOUBLE, EulerR, localN, MPI_DOUBLE, MPI_COMM_WORLD);) (35 2,   MPI_Allgather(tempEulerI, localN, MPI_DOUBLE, EulerI, localN, MPI_DOUBLE, MPI_COMM_WORLD);) (77 1,   MPI_Gather(tempResultR, localN, MPI_DOUBLE, ResultR, localN, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (77 2,   MPI_Gather(tempResultI, localN, MPI_DOUBLE, ResultI, localN, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (77 3,   MPI_Gather(tempResultR + localN, localN, MPI_DOUBLE, ResultR + (65536 / 2), localN, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (77 4,   MPI_Gather(tempResultI + localN, localN, MPI_DOUBLE, ResultI + (65536 / 2), localN, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (79 0,  MPI_Wtime();) (87 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (24 1,     MPI_Send(&pi_square, 1, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);) (29 1,       MPI_Recv(&recvbuffer, 1, MPI_DOUBLE, i, 1, MPI_COMM_WORLD, &stat);) (34 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (24 1,     MPI_Send(&pi_square, 1, MPI_DOUBLE, 0, 1, MPI_COMM_WORLD);) (29 1,       MPI_Recv(&recvbuffer, 1, MPI_DOUBLE, i, 1, MPI_COMM_WORLD, &stat);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (17 0,  MPI_Wtime();) (18 1,   MPI_Bcast(&n_intervals, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (30 1,   MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (38 0,  MPI_Wtime();) (45 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (17 0,  -MPI_Wtime();) (20 1,     MPI_Send(&n_intervals, 1, MPI_LONG, i, 10, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&n_intervals, 1, MPI_LONG, 0, 10, MPI_COMM_WORLD, &status);) (30 1,     MPI_Send(&sum, 1, MPI_DOUBLE, 0, 20, MPI_COMM_WORLD);) (34 1,       MPI_Recv(&sumI, 1, MPI_DOUBLE, i, 20, MPI_COMM_WORLD, &status);) (40 0,  MPI_Wtime();) (44 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (11 3,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 2,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (11 4,   MPI_Barrier(MPI_COMM_WORLD);) (11 0,  MPI_Wtime();) (11 0,  MPI_Wtime();) (11 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 1,   MPI_Reduce(&t1, &tbmax, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 4,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 0,  MPIX_Comm_shrink(MPI_COMM_WORLD, &newcomm);) (17 1,     MPI_Error_class(rc, &errclass);) (19 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,   MPI_Comm_size(newcomm, &newsize);) (22 0,  MPI_Barrier(newcomm);) (24 1,     MPI_Error_class(rc, &errclass);) (26 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (27 1,   MPI_Comm_free(&newcomm);) (30 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 4,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (15 0,  MPIX_Comm_shrink(MPI_COMM_WORLD, &newcomm);) (17 1,     MPI_Error_class(rc, &errclass);) (19 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,   MPI_Comm_size(newcomm, &newsize);) (22 0,  MPI_Barrier(newcomm);) (24 1,     MPI_Error_class(rc, &errclass);) (26 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (27 1,   MPI_Comm_free(&newcomm);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (23 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,  MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&unsignedCharsToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&unsignedCharsReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,       MPI_Ssend(&unsignedCharacterToSend, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), RECEIVER, 0, MPI_COMM_WORLD);) (25 1,       MPI_Recv(&unsignedCharacterReceived, 1, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (45 0,  MPI_Wtime();) (59 0,  MPI_Wtime();) (62 1,   MPI_Barrier(MPI_COMM_WORLD);) (69 1,   MPI_Barrier(MPI_COMM_WORLD);) (78 0,  MPI_Wtime();) (78 1,   MPI_Barrier(MPI_COMM_WOR", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (45 1,   MPI_Barrier(MPI_COMM_WORLD);) (46 0,  MPI_Wtime();) (64 1,       MPI_Send(&mat_res[i][0], 100, MPI_INT, 0, 10 + i, MPI_COMM_WORLD);) (72 1,         MPI_Recv(&mat_res[i][0], 100, MPI_INT, j, 10 + i, MPI_COMM_WORLD, &status);) (77 1,   MPI_Barrier(MPI_COMM_WORLD);) (78 0,  MPI_Wtime();) (81 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>44 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,   MPI_Scatter(data, 10, MPI_INT, &data[0], 10, MPI_INT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(0, &rank);) (9 1,       MPI_Comm_size(0, &size);) (13 1,           MPI_Send(data, 10, 2, 1, 123, 0);) (13 2,           MPI_Barrier(0);) (24 1,       MPI_Comm_size(0, &size);) (28 1,           MPI_Recv(data, 10, 2, 0, 123, 0, MPI_STATUS_IGNORE);) (28 2,           MPI_Barrier(0);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &rowType);) (16 2,     MPI_Type_commit(&rowType);) (16 3,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &colType);) (16 4,     MPI_Type_commit(&colType);) (16 5,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &rowType);) (16 6,     MPI_Type_commit(&rowType);) (16 7,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &colType);) (16 8,     MPI_Type_commit(&colType);) (16 9,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &rowType);) (16 10,     MPI_Type_commit(&rowType);) (16 11,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &colType);) (16 12,     MPI_Type_commit(&colType);) (16 13,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &rowType);) (16 14,     MPI_Type_commit(&rowType);) (16 15,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &colType);) (16 16,     MPI_Type_commit(&colType);) (16 17,     MPI_Type_vector(20 / size, 1, 20, MPI_INT, &", "label": " (2 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 1,   MPI_Type_contiguous(20, MPI_INT, &rowType);) (20 2,   MPI_Type_commit(&rowType);) (23 1,   MPI_Type_vector(count, blocklength, stride, MPI_INT, &colType);) (23 2,   MPI_Type_commit(&colType);) (26 1,       MPI_Send(&A[0][i], 1, colType, 1, 777 + i, MPI_COMM_WORLD);) (32 1,       MPI_Recv(&C[i * 12], 60, MPI_INT, 0, 777 + i, MPI_COMM_WORLD, &status);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request1);) (9 2,     MPI_Irecv(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request2);) (9 3,     MPI_Wait(&mpi_request1, MPI_STATUS_IGNORE);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 2,     MPI_Wait(&mpi_request2, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (9 2,     MPI_Send(buffer, 1000 / 2, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &mpi_request1);) (13 2,     MPI_Irecv(&buffer[1000 / 2], 1000 / 2, MPI_INT, 0, 124523, MPI_COMM_WORLD, &mpi_request2);) (13 3,     MPI_Wait(&mpi_request1, MPI_STATUS_IGNORE);) (13 4,     MPI_Wait(&mpi_request2, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 1,   MPI_Scatter(rand_nums, elements_per_proc, MPI_FLOAT, sub_rand_nums, elements_per_proc, MPI_FLOAT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (30 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (19 1,   MPI_Scatter(rand_nums, elements_per_proc, MPI_FLOAT, sub_rand_nums, elements_per_proc, MPI_FLOAT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(input, output, id, sizeOfAnswer);) (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &totalOfAnswer);) (14 0,  MPI_Wtime();) (20 1,     MPI_Bcast(&input, 1, MPI_UNSIGNED, 0, MPI_COMM_WORLD);) (22 1,     MPI_Bcast(&output, 1, MPI_UNSIGNED, 0, MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &groupSize);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (23 1,   MPI_Reduce((void *) (&answerNumber), (void *) (&totalOfAnswer), 1, MPI_UNSIGNED, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (14 4,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  -MPI_Wtime();) (31 1,     MPI_Send(&in, 1, MPI_LONG, 0, 1, MPI_COMM_WORLD);) (31 2,     MPI_Send(&out, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (36 1,     MPI_Recv(&in, 1, MPI_LONG, -1, 1, MPI_COMM_WORLD, &status);) (36 2,     MPI_Recv(&out, 1, MPI_LONG, -1, 2, MPI_COMM_WORLD, &status);) (37 1,     MPI_Recv(&in, 1, MPI_LONG, 0, 1, MPI_COMM_WORLD, &status);) (37 2,     MPI_Recv(&out, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD, &status);) (41 0,  MPI_Wtime();) (42 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (15 0,  -MPI_Wtime();) (26 1,     MPI_Send(&in, 1, MPI_INT, 0, 20, MPI_COMM_WORLD);) (30 1,       MPI_Recv(&inI, 1, MPI_INT, i, 20, MPI_COMM_WORLD, &status);) (36 0,  MPI_Wtime();) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Send(&sendbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (11 2,     MPI_Recv(&recvbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (15 1,     MPI_Recv(&recvbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (15 2,     MPI_Send(&sendbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Recv(&recvbuf, count, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (11 2,     MPI_Send(&sendbuf, count, MPI_INT, 1, tag, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&recvbuf, count, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (15 2,     MPI_Send(&sendbuf, count, MPI_INT, 0, tag, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (31 1,       MPI_Send(&max, 1, MPI_INT, id - 1, 0, MPI_COMM_WORLD);) (40 1,         MPI_Recv(&largest, 1, MPI_INT, id + 1, 0, MPI_COMM_WORLD, &status);) (59 1,       MPI_Recv(&max, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (59 2,       MPI_Send(&largest, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (69 1,       MPI_Send(&largest, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (69 2,       MPI_Recv(&max, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (69 3,       MPI_Recv(&largest, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (69 4,       MPI_Recv(&max, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (69 5,       MPI_Send", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (30 1,       MPI_Send(&n, 1, MPI_INT, id, tag, MPI_COMM_WORLD);) (34 1,         MPI_Send(&ar[i], 1, MPI_INT, id, tag1, MPI_COMM_WORLD);) (41 1,         MPI_Send(&ar[i], 1, MPI_INT, id, tag1, MPI_COMM_WORLD);) (48 1,     MPI_Recv(&n, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (50 1,       MPI_Recv(&ar[i], 1, MPI_INT, 0, tag1, MPI_COMM_WORLD, &status);) (55 1,     MPI_Recv(&n, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (57 1,       MPI_Recv(&ar[i], 1, MPI_INT, 0, tag1, MPI_COMM_WORLD, &status);) (70 1,     MPI_Send(&largest[my_rank], 1, MPI_INT, 0, tag2, MPI_COMM_WORLD);) (83 1,       MPI_Send(&largest[my_rank], 1, MPI_INT, 0, tag2, MPI_COMM_WORLD);) (89 1,         MPI_Recv(&largest[id], 1, MPI_INT, id, tag2, MPI_COMM_WORLD, &status);) (108 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (22 1,       MPI_Type_create_indexed_block(3, lengths, displacements, MPI_INT, &triangle_type);) (22 2,       MPI_Type_commit(&triangle_type);) (22 3,       MPI_Send(buffer, 1, triangle_type, RECEIVER, 0, MPI_COMM_WORLD);) (27 1,       MPI_Recv(&received, 6, MPI_INT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,       MPI_Type_free(&triangle_type);) (29 2,       MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Finalize();)       MPI_Type_free(&triangle_type);) (35 1,   MPI_Finalize();)       MPI_Type_free(&triangle_type);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (20 1,       MPI_Type_indexed(3, lengths, displacements, MPI_INT, &triangle_type);) (20 2,       MPI_Type_commit(&triangle_type);) (23 1,       MPI_Send(buffer, 1, triangle_type, RECEIVER, 0, MPI_COMM_WORLD);) (29 1,       MPI_Recv(&received, 6, MPI_INT, SENDER, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (9 1,     MPI_Comm_create_keyval(OMPI_C_MPI_NULL_COPY_FN, delete_fn, &key[nkeys], (void *) 0);) (12 1,   MPI_Comm_set_attr(comm, key[3], &attrval[3]);) (13 1,   MPI_Comm_set_attr(comm, key[2], &attrval[2]);) (14 1,   MPI_Comm_set_attr(comm, key[0], &attrval[0]);) (15 1,   MPI_Comm_set_attr(comm, key[1], &attrval[1]);) (16 1,   MPI_Comm_set_attr(comm, key[4], &attrval[4]);) (21 1,     MPI_Comm_free_keyval(&keyval);) (23 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &wrank);) (9 1,     MPI_Comm_create_keyval(OMPI_C_MPI_NULL_COPY_FN, delete_fn, &key[nkeys], (void *) 0);) (12 1,   MPI_Comm_set_attr(comm, key[3], &attrval[3]);) (13 1,   MPI_Comm_set_attr(comm, key[2], &attrval[2]);) (14 1,   MPI_Comm_set_attr(comm, key[0], &attrval[0]);) (15 1,   MPI_Comm_set_attr(comm, key[1], &attrval[1]);) (16 1,   MPI_Comm_set_attr(comm, key[4], &attrval[4]);) (21 1,     MPI_Comm_free_keyval(&keyval);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 1,     MPI_Barrier(MPI_COMM_WORLD);) (12 1,       MPI_Isend(sendbuf, 4096, MPI_CHAR, i, 0, MPI_COMM_WORLD, &sendreqs[i]);) (16 1,       MPI_Recv(recvbuf, 4096, MPI_CHAR, -1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,     MPI_Waitall(nprocs, sendreqs, sendstats);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nprocs);) (10 1,     MPI_Barrier((MPI_Comm) 0x44000000);) (12 1,       MPI_Isend(sendbuf, 4096, (MPI_Datatype) 0x4c000101, i, 0, (MPI_Comm) 0x44000000, &sendreqs[i]);) (16 1,       MPI_Recv(recvbuf, 4096, (MPI_Datatype) 0x4c000101, -2, -1, (MPI_Comm) 0x44000000, (MPI_Status *) 1);) (18 1,     MPI_Waitall(nprocs, sendreqs, sendstats);) (20 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(matrix, x, n_locations, comm_size, MPI_COMM_WORLD);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (21 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 5, MPI_INT, 1, 0, 5, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(&local_buf, 5, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(2, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,       MPI_Isend(&msg, 1, MPI_INT, next, tag, MPI_COMM_WORLD, &request);) (18 1,     MPI_Irecv(&msg, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &request);) (18 2,     MPI_Wait(&request, &status);) (21 1,     MPI_Isend(&msg, 1, MPI_INT, next, tag, MPI_COMM_WORLD, &request);) (23 1,   MPI_Finalize();)             MPI_Isend(&msg, 1, MPI_INT, next, tag, MPI_COMM_WORLD, &request);) (23 2,     MPI_Wait(&request, &status);)   MPI_Finalize();)             MPI_Irecv(&msg, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &request);) (23 3,     MPI_Wait(&request, &status);)   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,       MPI_Isend(&msg, 1, MPI_INT, next, next, MPI_COMM_WORLD, &request);) (18 1,     MPI_Irecv(&msg, 1, MPI_INT, 0, rank, MPI_COMM_WORLD, &request);) (19 1,   MPI_Wait(&request, &status);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (33 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (35 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,     MPI_Finalize();) (20 0,  MPI_Irecv(buf, 10, MPI_CHAR, -1, 0, MPI_COMM_WORLD, &request);) (20 0,  MPI_Wait(&request, &status);) (23 0,  MPI_Irecv(buf, 10, MPI_CHAR, -1, 0, MPI_COMM_WORLD, &request);) (23 0,  MPI_Wait(&request, &status);) (24 0,  MPI_Irecv(buf, 10, MPI_CHAR, -1, 0, MPI_COMM_WORLD, &request);) (24 0,  MPI_Wait(&", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (12 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (19 0,  MPI_Recv(buf, 10, MPI_CHAR, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (19 1,     MPI_Error_class(err, &ec);) (22 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (23 0,  MPI_Irecv(buf, 10, MPI_CHAR, -1, 0, MPI_COMM_WORLD, &request);) (26 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (27 1,     MPI_Error_class(err, &ec);) (30 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (31 0,  MPI_Wait(&request, &status);) (31 1,     MPI_Error_class(err, &ec);) (33 1,  MPIX_ERR_PROC_FAILED_PENDING (%d) for receive from ANY_SOURCE: %d\\n\", MPIX_ERR_PROC_FAILED_PENDING, ec);) (33 2,       MPI_Abort(MPI_COMM_WORLD, 1);) (34 0,  MPI_Send(0, 0, MPI_INT, 2, 0, MPI_COMM_WORLD);) (36 1,       MPI_Error_class(err, &ec);) (37 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (38 1,     MPIX_Comm_failure_ack(MPI_COMM_WORLD);) (38 0,  MPI_Wait(&request, &status);) (40 1,       MPI_Error_class(err, &ec);) (41 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (48 0,  MPI_Recv(0, 0, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,       MPI_Error_class(err, &ec);) (51 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (52 0,  MPI_Send(buf, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (54 1,       MPI_Error_class(err, &ec);) (54 2,  MPI_Send (%d)\\n\", ec);) (54 3,       MPI_Abort(MPI_COMM_WORLD, 1);) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 1,       MPI_Isend(&rank, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &barrier);) (17 1,     MPI_Wait(&barrier, MPI_STATUS_IGNORE);) (19 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Ibarrier(MPI_COMM_WORLD, &barrier);) (12 1,       MPI_Test(&barrier, &done, MPI_STATUS_IGNORE);) (15 1,       MPI_Wait(&barrier, MPI_STATUS_IGNORE);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(31 1,   MPI_Init(&argc, &argv);) (31 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (31 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (32 1,   MPI_Bcast(&bias, 1, MPI_INT, 0, MPI_COMM_WORLD);) (32 2,   MPI_Bcast", "label": " (34 1,   MPI_Init(&argc, &argv);) (34 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (41 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (109 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (106 0,  MPI_Wtime();) (118 1,       MPI_Allgatherv(locgrid, nmaxDelta, MPI_DOUBLE, locgrid, nmaxDelta, MPI_DOUBLE, MPI_COMM_WORLD);) (125 1,       MPI_Allgatherv(locgrid, nmaxDelta, MPI_DOUBLE, 0, 0, 0, MPI_DOUBLE, MPI_COMM_WORLD);) (125 0,  MPI_Wtime();) (127 1,   MPI_Finalize();)", "label": " (2 0,  MPI_Wtime();) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (122 0,  MPI_Wtime();) (126 1,       MPI_Finalize();) (131 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>7:   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_request);) (9 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &mpi_request);) (13 2,     MPI_Wait(&mpi_request, &mpi_status);) (14 1,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (14 2,     MPI_Wait(&mpi_request, &mpi_status);) (15 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(ptr, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  -MPI_Wtime();) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&solutions, &reduction_result, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Bcast(&reduction_result, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&solutions, &reduction_result, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&solutions, &reduction_result, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (11 0,  -MPI_Wtime();) (18 1,     MPI_Recv(&solutionsI, 1, MPI_INT, i, 10, MPI_COMM_WORLD, &status);) (22 1,     MPI_Send(&solutions, 1, MPI_INT, 0, 10, MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n14:   int nb = count;\n15:   int nb_root = 0;\n16:   MPI_Status status;\n17:   int i;\n18:   int j;\n19:   int iter;\n20:   int iter_max;\n21:   int iter_min;\n22:   int iter_sum;\n23:   int iter_count;\n24:   int iter_max;\n25:   int iter_min;\n26:   int iter_max;\n27:   int iter_count;\n28:   int iter_count;\n29:   int iter_max;\n30:   int iter_min;\n31:   int iter_max;\n32:   int iter_count;\n33:   int iter_count;\n34:   int root_proc;\n35:   int *sbuff;\n36:   int *rbuff;\n37:   int *scounts;\n38:   int *rcounts;\n39:   int *sdispls;\n40:   int *rdispls;\n41:   int *typesize;\n42:   int *displs;\n43:   int *rcounts;\n44:   int *rdispls;\n45:   int *typesize;\n46:   int *typesize;\n47:   int *sbuff;\n48:   int *rbuff;\n49:   int *scounts;\n50:   int *rcounts;\n51:   int *rdispls;\n52:   int *typesize;\n53:   int *rdispls;\n54:   int *typesize;\n55:   int *typesize;\n56:   int *sdispls;\n57:   int *rcounts;\n58:   int *rdispls;\n59:   int *typesize;\n60:   int *typesize;\n61:   int *sdispls;\n62:   int *rdis", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Reduce(&rank, &result, count, MPI_INT, MPI_SUM, root, MPI_COMM_WORLD);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_win_free(&win);) (35 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (12 2,   MPI_Win_lock(1, rank, 0, win);) (18 1,   MPI_Win_unlock(rank, win);) (18 2,   MPI_Barrier(MPI_COMM_WORLD);) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (21 2,   MPI_Win_lock(1, rank, 0, win);) (27 1,   MPI_Win_unlock(rank, win);) (27 2,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,     MPI_Win_free(&win);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>k3d_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Get_address(&buf->c, &base);) (7 2,   MPI_Get_address(&buf->d, &displacements[0]);) (7 3,   MPI_Get_address(&buf->d, &displacements[1]);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Type_free(&new_t);) (27 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Type_free(&new_t);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (13 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (16 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, MPI_INFO_NULL, &shm_comm);) (16 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (16 6,   MPI_Comm_size(shm_comm, &shm_target_base);) (16 7,   MPI_Win_allocate_shared(sizeof(int), sizeof(int), shm_nproc, shm_my_base, &shm_win);) (16 8,   MPI_Win_shared_query(shm_win, shm_target_base, &size, &disp_unit, &shm_target_base);) (17 1,   MPI_Win_lock_all(1, shm_win);) (18 1,", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (14 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (18 1,     MPI_Barrier((MPI_Comm) 0x44000000);) (18 2,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (21 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (21 2,   MPI_Abort((MPI_Comm) 0x44000000, 1);) (21 3,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (21 4,   MPI_Comm_rank(shm_comm, &shm_rank);) (25 1,   MPI_Bcast(&shm_root_rank, 1, (MPI_Datatype) 0x4c000405, 0, shm_comm);) (27 1,   MPI_Allgather((void *) (-1), 0, (MPI_Datatype) 0x0c000000, shm_ranks, 1, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (27 2,   MPI_Allgather((void *) (-1), 0, (MPI_Datatype) 0x0c000000, shm_root_ranks, 1, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (67 1,   MPI_Win_allocate_shared(win_size, win_unit, (MPI_Info) 0x1c000000, shm_comm, &my_base, &shm_win);) (67 2,   MPI_Win_create(my_base, win_size, win_unit, (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &win);) (71 1,     MPI_Win_shared_query(shm_win, shm_target, &size, &disp_unit, &shm_target_base);) (76 1,   MPI_Win_lock_all(0, win);) (76 2,   MPI_Win_lock_all(0, shm_win);) (77 1,   MPI_Win_unlock_all(shm_win);) (77 2,   MPI_Win_unlock_all(win);) (77 3,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (86 1,     MPI_Win_free(&shm_win);) (87 1,     MPI_Win_free(&win);) (88 1,     MPI_Comm_free(&shm_comm);) (88 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_ 1,   MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (15 3,   MPI_Info_create(&alloc_shared_info);) (15 4,   MPI_Info_set(alloc_shared_info, \"alloc_shared_noncontig\", \"true\");) (15 5,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, MPI_INFO_NULL, &shm_comm);) (15 6,   MPI_Comm_rank(shm_comm, &shm_rank);) (15 7,   MPI_Comm_size(shm_comm, &shm_nproc);) (15 8,   MPI_Win_allocate_shared((sizeof(int)) * 10000, sizeof(int), alloc_shared_info, shm_comm, &my_base, &shm_win);) (15 9,   MPI_Win_lock_all(1, shm_win);) (20 1,   MPI_Win_sync(shm_win);) (20 2,   MPI_Barrier(shm_comm);) (20 3,   MPI_Win_sync(shm_win);) (24 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &base);) (36 1,   MPI_Win_unlock_all(shm_win);) (36 2,   MPI_Win_free(&shm_win);) (36 3,   MPI_Comm_free(&shm_comm);) (36 4,   MPI_Info_free(&alloc_shared_info);) (36 5,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (15 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (15 4,   MPI_Info_create(&alloc_shared_info);) (15 5,   MPI_Info_set(alloc_shared_info, \"alloc_shared_noncontig\", \"true\");) (15 6,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (15 7,   MPI_Comm_rank(shm_comm, &shm_rank);) (15 8,   MPI_Comm_size(shm_comm, &shm_nproc);) (15 9,   MPI_Win_allocate_shared((sizeof(int)) * 10000, sizeof(int), alloc_shared_info, shm_comm, &my_base, &shm_win);) (15 10,   MPI_Win_lock_all(1024, shm_win);) (20 1,   MPI_Win_sync(shm_win);) (20 2,   MPI_Barrier(shm_comm);) (20 3,   MPI_Win_sync(shm_win);) (24 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &base);) (36 1,   MPI_Win_unlock_all(shm_win);) (36 2,   MPI_Win_free(&shm_win);) (36 3,   MPI_Comm_free(&shm_comm);) (36 4,   MPI_Info_free(&alloc_shared_info);) (36 5,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>15 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (8 0,  -MPI_Wtime();) (14 1,     MPI_Barrier(MPI_COMM_WORLD);) (16 1,   MPI_Reduce(&solution, &globalSolution, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (18 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Barrier(MPI_COMM_WORLD);) (8 0,  -MPI_Wtime();) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (15 1,   MPI_Reduce(&solutions, &globalSolution, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (15 0,  MPI_Wtime();) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_calculation_process(rank, n, row_per_process, MPI_COMM_WORLD);) (n, n, row_per_process, MPI_COMM_WORLD);) (n, MPI_COMM_WORLD);) (10 1,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 2,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,     MPI_Barrier(MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (21 1,       MPI_Bcast(B, n * n, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,       MPI_Scatter(A, (row_per_process * n) * n, MPI_INT, A[(row_per_process * n) * n], n * n, MPI_INT, 0, MPI_COMM_WORLD);) (23 2,       MPI_Bcast(B, n * n, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,       MPI_Scatter(A, (row_per_process * n) * n, MPI_INT, A[(row_per_process * n) * n], n * n, MPI_INT, 0, MPI_COMM_WORLD);) (29 2,       MPI_Bcast(B, n * n, MPI_INT, 0, MPI_COMM_WORLD);) (32 1,       MPI_Gather(subR, (row_per_process * n) * n, MPI_INT, subR, (row_per_process * n) * n, MPI_INT, 0, MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (53 1,     MPI_Barrier(MPI_COMM_WORLD", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,     MPI_Barrier(MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (22 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,     MPI_Scatter(A, row_per_process * n, MPI_INT, subA, row_per_process * n, MPI_INT, 0, MPI_COMM_WORLD);) (33 1,     MPI_Bcast(B, n * n, MPI_INT, 0, MPI_COMM_WORLD);) (50 1,     MPI_Gather(subR, row_per_process * n, MPI_INT, R, row_per_process * n, MPI_INT, 0, MPI_COMM_WORLD);) (50 2,     MPI_Barrier(MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (57 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (26 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &request);) (26 2,     MPI_Wait(&request, &status);) (26 3,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 4,     MPI_Wait(&request, &status);) (26 5,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (26 6,     MPI_Wait(&request, &status);) (26 7,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &request);) (26 8,     MPI_Wait(&request, &status);) (26 9,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (26 10,     MPI_Wait(&request, &status);) (26 11,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (26 12,", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, null_comm, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 1,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (47 1,     MPI_Barrier(MPI_COMM_WORLD);) (52 1,     MPI_Win_free(&win);) (70 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 1,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (37 1,     MPI_Win_lock(2, rank, 0, win);) (42 1,     MPI_Win_unlock(rank, win);) (42 2,     MPI_Barrier(MPI_COMM_WORLD);) (51 1,     MPI_Win_free(&win);) (54 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 0,  MPI_Init(&argc, &argv);) (12 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 0,  MPI_File_open(MPI_COMM_WORLD, filename, 8 | 1, MPI_INFO_NULL, &fh);) (14 0,  MPI_File_write_all(fh, buf, 10, MPI_CHAR, &status);) (16 0,  MPI_File_close(&fh);) (25 0,  MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 0,  MPI_File_open(MPI_COMM_WORLD, filename, 1 | 8, MPI_INFO_NULL, &fh);) (15 0,  MPI_File_read_all(fh, buf, len, MPI_BYTE, &status);) (17 0,  MPI_Get_count(&status, MPI_BYTE, &get_size);) (21 1,   MPI_File_close(&fh);) (21 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n28:   MPI_Init(&argc, &argv);) (12 1,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (18 1,     MPI_Get_processor_name(name, &len);) (24 1,   MPI_Finalize();)         MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)   MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Abort(MPI_COMM_", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 1,   MPI_Get_processor_name(name, &len);) (10 2,   MPI_Allgather(name, namelen, MPI_CHAR, names, namelen, MPI_CHAR, MPI_COMM_WORLD);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpiSize);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpiId);) (69 1,       MPI_Recv(grid1 + (i * stripSize), (gridSize + 1) * (mpiSize + 1), MPI_BYTE, i, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (77 1,       MPI_Send(grid1, (gridSize + 1) * (mpiSize + 1), MPI_BYTE, i, 1, MPI_COMM_WORLD);) (85 1,     MPI_Send(grid1, (gridSize + 1) * (mpiSize + 1), MPI_BYTE, 0, 1, MPI_COMM_WORLD);) (85 2,   MPI_Barrier(MPI_COMM_WORLD);) (117 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &mpiId);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &numWorkers);) (15 4,   MPI_Get_processor_name(hostname, &len);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (120 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (17 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, MPI_INFO_NULL, &shm_comm);) (17 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (17 6,   MPI_Comm_size(shm_comm, &shm_nproc);) (17 7,   MPI_Win_allocate_shared((sizeof(int)) * ELEM_PER_PROC, sizeof(int), MPI_INFO_NULL, shm_comm, &my_base, &shm_win);) (17 8,   MPI_Win_shared_query(shm_win, -2, &size, &disp_unit, &abs_base);) (21 1,   MPI_Win_lock_all(1, shm_win);) (24 1,   MPI_Win_sync(shm_win);) (24 2,   MPI_Barrier(shm_comm);) (24 3,   MPI_Win_sync(shm_win);) (24 4,   MPI_Win_sync(shm_win);) (24 5,   MPI_Barrier(shm_comm);) (24 6,   MPI_Win_sync(shm_win);) (24 7,   MPI_Win_unlock_all(shm_win);) (24 8,   MPI_Win_free(&shm_win);) (24 9,", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (17 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (17 4,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (17 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (17 6,   MPI_Comm_size(shm_comm, &shm_nproc);) (26 1,   MPI_Win_allocate_shared((sizeof(int)) * ELEM_PER_PROC, sizeof(int), (MPI_Info) 0x1c000000, shm_comm, &my_base, &shm_win);) (26 2,   MPI_Win_shared_query(shm_win, -1, &size, &disp_unit, &abs_base);) (30 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &bases[i]);) (34 1,   MPI_Win_lock_all(1024, shm_win);) (39 1,   MPI_Win_sync(shm_win);) (39 2,   MPI_Barrier(shm_comm);) (39 3,   MPI_Win_sync(shm_win);) (43 1,   MPI_Win_sync(shm_win);) (43 2,   MPI_Barrier(shm_comm);) (43 3,   MPI_Win_sync(shm_win);) (53 1,   MPI_Win_unlock_all(shm_win);) (53 2,   MPI_Win_free(&shm_win);) (53 3,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (57 1,   MPI_Comm_free(&shm_comm);) (57 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (17 1,     MPI_Finalize();) (24 1,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &otype);) (24 2,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ttype);) (24 3,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (24 4,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (24 5,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (24 6,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (28 1,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &otype);) (28 2,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (29 1,     MPI_Type_free(&(MPI_Datatype) ((void *) (&ompi_mpi_aint)), &ntype);) (31 1,   MPI_Finalize();)         MPI_Type_free(&(MPI_Datatype", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (36 1,   MPI_Type_vector(ny, nx, str_loc, MPI_DOUBLE, &otype);) (36 2,   MPI_Type_commit(&otype);) (36 3,   MPI_Type_vector(ny, nx, str_buf, MPI_DOUBLE, &ttype);) (36 4,   MPI_Type_commit(&ttype);) (38 1,     MPI_Win_lock(1, i, 0, MPI_WIN);) (38 2,     MPI_Get(&LOC_BUF[i * nx], 1, otype, i, 0, 1, ttype, MPI_WIN);) (38 3,     MPI_Win_unlock(i, MPI_WIN);) (40 1,   MPI_Barrier(MPI_COMM_WORLD);) (40 2,   MPI_Type_free(&otype);) (40 3,   MPI_Type_free(&ttype);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>,4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n27:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Irecv(buffer, 8000, MPI_INT, -1, -1, MPI_COMM_WORLD, &req);) (18 2,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 1,     MPI_Irecv(buffer_r, 4000, MPI_INT, pre, 42, MPI_COMM_WORLD, &req);) (19 2,     MPI_Send(buffer, 4000, MPI_INT, nxt, 42, MPI_COMM_WORLD);) (19 3,     MPI_Wait(&req, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada1(A, 0, &n, &primes, &globalPrimes, &elapsed_time);) (13 0,  -MPI_Wtime();) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  -MPI_Wtime();) (14 1,   MPI_Bcast(&nfind, 1, MPI_INT, 0, MPI_COMM_WORLD);) (14 2,   MPI_Bcast(&nprimes, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 1,   MPI_Reduce(&primes, &globalPrimes, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (42 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Barrier(MPI_COMM_WORLD);) (12 0,  -MPI_Wtime();) (12 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (18 1,   MPI_Bcast(primes, A, MPI_INT, 0, MPI_COMM_WORLD);) (22 1,   MPI_Allreduce(primes, globalPrimes, A, MPI_INT, (MPI_Op) ((void *) (&ompi_mpi_op_lor)), MPI_COMM_WORLD);) (42 1,   MPI_Barrier(MPI_COMM_WORLD);) (42 2,   MPI_Reduce(&theorem, &t1, 1, MPI_INT, (MPI_Op) ((void *) (&ompi_mpi_op_land)), 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (48 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&mpi_mpi_comm_world, &mpi_mpi_comm_world);) (5 2,   MPI_Comm_size(mpi_mpi_comm_world, &mpi_mpi_comm_world_size);) (9 1,   MPI_Barrier(mpi_mpi_comm_world);) (9 2,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_numProc);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (115 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, wrong_count, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,       MPI_Send(&arraySize, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (18 2,       MPI_Send(&arraySize, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (22 1,     MPI_Recv(b, chunk, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (22 2,     MPI_Recv(a, chunk, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (23 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,       MPI_Send(&a[i * chunk], chunk, MPI_INT, i, 770 + i, MPI_COMM_WORLD);) (22 1,     MPI_Recv(b, 4, MPI_INT, 0, 770 + rank, MPI_COMM_WORLD, &status);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>24:   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &idp);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (7 1,     MPI_Recv(msg, 128, MPI_CHAR, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &idp);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (9 1,       MPI_Recv(msg, 128, MPI_CHAR, -1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,     MPI_Send(msg, strlen(msg) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,   MPI_Type_contiguous(100, MPI_INT, &MPI_dtp);) (19 2,   MPI_Type_commit(&MPI_dtp);) (19 3,   MPI_Win_create(my_base, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (19 4,   MPI_Win_fence(0, win);) (19 5,   MPI_Put(&my_base[0], 1, MPI_INT, 1, 0, 1, MPI_INT, win);) (19 6,   MPI_Win_fence(0, win);) (19 7,   MPI_Win_free(&win);) (19 8,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 4,   MPI_Win_allocate_shared((sizeof(int)) * 1, sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &my_base, &win);) (9 1,     MPI_Win_lock(1, 1, 0, win);) (10 1,     MPI_Barrier(MPI_COMM_WORLD);) (11 1,     MPI_Win_unlock(1, win);) (12 1,   MPI_Win_fence(0, win);) (14 1,     MPI_Put(&origin_data, 1, MPI_INT, 1, 0, 1, MPI_INT, win);) (14 2,     MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Win_fence(0, win);) (15 2,   MPI_Win_free(&win);) (15 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &nb_mpi_processes);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 1,       MPI_Send(&ball, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&ball, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &nb_mpi_processes);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,       MPI_Send(&ball, 1, MPI_INTEGER, 1, 0, MPI_COMM_WORLD);) (16 2,       MPI_Recv(&ball, 1, MPI_INTEGER, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,       MPI_Recv(&ball, 1, MPI_INTEGER, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,       MPI_Send(&ball, 1, MPI_INTEGER, 0, 0, MPI_COMM_WORLD);) (23 1,     MPI_Barrier(MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (27 1,       MPI_Send(&n, 1, MPI_INT, i, tag1, MPI_COMM_WORLD);) (27 2,       MPI_Send(n, max, MPI_INT, i, tag2, MPI_COMM_WORLD);) (33 1,       MPI_Recv(&n, 1, MPI_INT, -1, tag1, MPI_COMM_WORLD, &status);) (33 2,       MPI_Recv(n, max, MPI_INT, -1, tag2, MPI_COMM_WORLD, &status);) (85 1,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (18 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (25 1,       MPI_Send(&n, 1, MPI_INT, id, tag, MPI_COMM_WORLD);) (28 1,       MPI_Send(&str[i], 1, MPI_CHAR, id, tag1, MPI_COMM_WORLD);) (33 1,     MPI_Recv(&n, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (34 1,       MPI_Recv(&str[i], 1, MPI_CHAR, 0, tag1, MPI_COMM_WORLD, &status);) (46 1,     MPI_Send(&vowel[my_rank], 1, MPI_INT, 0, tag2, MPI_COMM_WORLD);) (61 1,       MPI_Send(&vowel[my_rank], 1, MPI_INT, 0, tag2, MPI_COMM_WORLD);) (67 1,         MPI_Recv(&vowel[id], 1, MPI_INT, id, tag2, MPI_COMM_WORLD, &status);) (85 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[9][10] = 0;\n90:   int n = 0;\n91:   int myid;\n92:   int numprocs;\n93:   int i;\n94:   int j;\n95:   int k;\n96:   int nrows_local = n / numprocs;\n97:   int ncols_local = n / numprocs;\n98:   int *local_cc = (int *) malloc((sizeof(int)) * ncols_local);\n99:   int *local_cc_reduced = (int *) malloc((sizeof(int)) * ncols_local);\n100:   int *local_buffer_reduced = (int *) malloc((sizeof(int)) * ncols_local);\n101:   int *local_buffer_slice = (int *) malloc((sizeof(int)) * ncols_local);\n102:   int *local_buffer_slice_reduced = (int *) malloc((sizeof(int)) * ncols_local);\n103:   int *local_buffer_slice_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n104:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n105:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n106:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n107:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n108:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n109:   int *local_buffer_slice_slice = (int *) malloc((sizeof(int)) * ncols_local);\n110:   int *local_buffer_slice_slice = (int *) malloc((size", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (26 0,  MPI_Wtime();) (28 1,       MPI_Bcast(bb, nrows * ncols, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (38 1,         MPI_Send(strp_buffer, strp_rows * ncols, MPI_DOUBLE, i + 1, i + 1, MPI_COMM_WORLD);) (53 1,         MPI_Send(strp_buffer, j, MPI_DOUBLE, i + 1, i + 1, MPI_COMM_WORLD);) (57 1,         MPI_Recv(&cc1, strp_rows * ncols, MPI_DOUBLE, -1, -1, MPI_COMM_WORLD, &status);) (59 0,  MPI_Wtime();) (68 1,         MPI_Bcast(bb, nrows * ncols, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (68 2,         MPI_Recv(strp_buffer, strp_rows, MPI_DOUBLE, 0, -1, MPI_COMM_WORLD, &status);) (75 1,         MPI_Send(&strp_ret, strp_rows * ncols, MPI_DOUBLE, 0, strp_number, MPI_COMM_WORLD);) (83 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_send_recv(rank, col, blocklen, newtype, 0, 100, &ptr_send);) (20 1,     MPI_Finalize();) (27 1,     MPI_Finalize();) (59 1,     MPI_Finalize();) (91 0,  MPI_Wtime();) (93 1,       MPI_Sendrecv(ptr_send, size, MPI_CHAR, 1, 100, &rcv_recv[0], size, MPI_CHAR, 1, 100, rcv_recv);) (93 2,       MPI_Sendrecv(ptr_send, size, MPI_CHAR, 1, 100, rcv_recv[0], size, MPI_CHAR, 1, 100, rcv_recv[1], size, MPI_CHAR, 1, 100, rcv_recv[2], size, MPI_CHAR, 1, 100, rcv_recv[3]);) (93 3,       MPI_Send(ptr_send, size, MPI_CHAR, 1, 100, rcv_recv[0], size, MPI_CHAR, 1, 100, rcv_recv[1], size, MPI_CHAR, 1, 100, rcv_recv[2]);) (93 4,       MPI_Send(ptr_send, size, MPI_CHAR, 1, 100, rcv_recv[3]);) (93 5,       MPI_Recv(ptr_recv, size, MPI_CHAR, 1, 100, rcv_recv[4], size, MPI_CHAR, 1, 100, rcv_recv[5]);) (93 6,       MPI_Recv(ptr_recv, size, MPI_CHAR, 1, 100, rcv_recv[6], size, MPI_CHAR, 1, 100, rcv_recv[7]);) (93 7,       MPI_Recv(ptr_recv, size, MPI_CHAR, 0, 100, rcv_", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (25 1,     MPI_Finalize();) (34 1,     MPI_Finalize();) (45 1,       MPI_Finalize();) (73 1,         MPI_Abort(MPI_COMM_WORLD, -1);) (83 1,     MPI_Type_indexed(4096, blklens, disps, (opt == 0)? (MPI_INT) : (MPI_DOUBLE), &newtype);) (83 2,     MPI_Type_commit(&newtype);) (89 1,       MPI_Finalize();) (93 0,  MPI_Wtime();) (97 1,         MPI_Send(ptr_send, 1, newtype, 1, 999, MPI_COMM_WORLD);) (97 2,         MPI_Recv(ptr_recv, 1, newtype, 1, 999, MPI_COMM_WORLD, &status);) (104 1,         MPI_Recv(ptr_recv, 1, newtype, 0, 999, MPI_COMM_WORLD, &status);) (104 2,         MPI_Send(ptr_send, 1, newtype, 0, 999, MPI_COMM_WORLD);) (107 0,  MPI_Wtime();) (113 1,     MPI_Type_free(&newtype);) (115 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 0,  MPI_Init(&argc, &argv);) (21 0,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 0,  MPI_Open_port(MPI_INFO_NULL, port);) (25 0,  MPI_Comm_accept(port, MPI_INFO_NULL, 0, MPI_COMM_SELF, &comm);) (27 0,  MPI_Close_port(port);) (29 0,  MPI_Comm_disconnect(&comm);) (33 0,  MPI_Recv(port, 256, MPI_CHAR, 0, 0, MPI_COMM_SELF, &status);) (34 0,  MPI_Comm_connect(port, MPI_INFO_NULL, 0, MPI_COMM_SELF, &comm);) (38 0,  MPI_Comm_disconnect(&comm);) (39 0,  MPI_Send(port, 256, MPI_CHAR, 0, 0, MPI_COMM_SELF);) (40 0,  MPI_Comm_disconnect(&comm);) (41 0,  MPI_Comm_connect(port, MPI_INFO_NULL, 0, MPI_COMM_SELF, &comm);) (43 0,  MPI_Comm_disconnect(&comm);) (44 0,  MPI_Send(port, 256, MPI_CHAR, 0, 0, MPI_COMM_SELF);) (45 0,  MPI_Comm_disconnect(&comm);) (49 0,  MPI_Comm_connect(port, MPI_INFO_NULL, 0, MPI_COMM_SELF, &comm);) (51 0,  MPI_Comm_disconnect(&comm);) (52 0,  MPI_Send(port, 256, MPI_CHAR, 0, 0, MPI_COMM_SELF);) (53", "label": " (23 0,  MPI_Init(&argc, &argv);) (24 1,   MPI_Comm_set_errhandler((MPI_Comm) 0x44000000, (MPI_Errhandler) 0x54000001);) (24 2,   MPI_Comm_set_errhandler((MPI_Comm) 0x44000001, (MPI_Errhandler) 0x54000001);) (29 0,  MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (35 0,  MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (39 1,     MPI_Finalize();) (48 0,  MPI_Open_port((MPI_Info) 0x1c000000, port);) (59 0,  MPI_Send(port, 256, (MPI_Datatype) 0x4c000101, 1, 0, (MPI_Comm) 0x44000000);) (65 0,  MPI_Comm_accept(port, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000001, &comm);) (71 0,  MPI_Close_port(port);) (77 0,  MPI_Comm_disconnect(&comm);) (87 0,  MPI_Recv(port, 256, (MPI_Datatype) 0x4c000101, 0, 0, (MPI_Comm) 0x44000000, &status);) (98 0,  MPI_Comm_connect(port, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000001, &comm);) (99 1,     MPI_Comm_set_errhandler(comm, (MPI_Errhandler) 0x54000001);) (104 0,  MPI_Comm_disconnect(&comm);) (106 0,  MPI_Barrier((MPI_Comm) 0x44000000);) (111 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,   MPI_Comm_group(MPI_COMM_WORLD, &full_group);) (29 1,     MPI_Group_incl(full_group, count, ranks, &sub_group);) (31 1,       MPI_Comm_create_group(MPI_COMM_WORLD, sub_group, 0, &comm);) (31 2,       MPI_Barrier(comm);) (31 3,       MPI_Comm_free(&comm);) (36 1,   MPI_Group_free(&sub_group);) (36 2,   MPI_Group_free(&full_group);) (37 1,   MPI_Finalize();)         return 0;) (38 1,   MPI_Finalize();)         return 0;)         ;) (38 2,   MPI_Comm_free(&comm);) (38 3,   MPI_Group_free(&sub_group);) (38 4,   MPI_Group_free(&full_group);) (38 5,   MPI_Comm_free(&comm);) (38 6,   MPI_Finalize();)         return 0;)       ;) (38 7,   MPI_Comm_free(&comm);) (38 8,   MPI_Group_free(&sub_group);) (38 9,   MPI_Group_free(&full_group);) (38 10,   MPI_Comm", "label": " (12 1,   MPI_Init(0, 0);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,   MPI_Comm_group(MPI_COMM_WORLD, &full_group);) (29 1,     MPI_Group_incl(full_group, count, ranks, &sub_group);) (31 1,       MPI_Comm_create_group(MPI_COMM_WORLD, sub_group, 0, &comm);) (31 2,       MPI_Barrier(comm);) (31 3,       MPI_Comm_free(&comm);) (32 1,     MPI_Group_free(&sub_group);) (34 1,   MPI_Group_free(&full_group);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (35 1,   MPI_Allreduce(&nglb, &dspls[myid], 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (48 1,   MPI_Allgatherv(v_lcl, counts[myid], MPI_DOUBLE, v_glb, counts, displs, MPI_DOUBLE, MPI_COMM_WORLD);) (58 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (49 1,     MPI_Bcast(&v_glb[dspls[ip]], counts[ip], (MPI_Datatype) ((void *) (&ompi_mpi_dblprec)), ip, MPI_COMM_WORLD);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada4(MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (17 0,  -MPI_Wtime();) (35 1,     MPI_Bcast(&A, 1, MPI_INT, 0, MPI_COMM_WORLD);) (35 2,     MPI_Bcast(&B, 1, MPI_INT, 0, MPI_COMM_WORLD);) (35 3,     MPI_Bcast(&C, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,       MPI_Bcast(&A, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 2,       MPI_Bcast(&B, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 3,       MPI_Bcast(&C, 1, MPI_INT, 0, MPI_COMM_WORLD);) (44 0,  MPI_Wtime();) (47 1,     MPI_Bcast(&A, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 2,     MPI_Bcast(&B, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 3,     MPI_Bcast(&C, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 4,     MPI_Bcast(&B, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 5,     MPI_Bcast(&C, 1, MPI_INT, 0, MPI_COMM_WORLD);) (47 6,     MPI_Bcast(&B, 1, MPI_INT, 0, MPI_", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (17 0,  -MPI_Wtime();) (31 1,   MPI_Reduce(&k, &globalSolutionCount, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (33 1,     MPI_Send(&k, 1, MPI_INT, 0, 20, MPI_COMM_WORLD);) (33 2,     MPI_Send(partialPrimes, k, MPI_INT, 0, 21, MPI_COMM_WORLD);) (39 1,       MPI_Recv(&pomCount, 1, MPI_INT, j, 20, MPI_COMM_WORLD, &status);) (39 2,       MPI_Recv(&globalPrimes[lastCount], pomCount, MPI_INT, j, 21, MPI_COMM_WORLD, &status);) (45 0,  -MPI_Wtime();) (47 0,  MPI_Wtime();) (47 0,  MPI_Wtime();) (54 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 4,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (37 1,   MPI_Comm_spawn(\"spawn_merge_child1\", (char **) 0, NumberProcesses, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &interComm, erro);) (37 2", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_UNIVERSE_SIZE, &UniverseSize, &Flag);) (10 3,   MPI_Comm_get_parent(&InterComm);) (10 4,   MPI_Intercomm_merge(InterComm, 1, &IntraComm);) (10 5,   MPI_Comm_size(IntraComm, &NumberProcesses);) (10 6,   MPI_Comm_rank(IntraComm, &ID);) (10 7,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 1,     MPI_Win_free(&win);) (24 2,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (11 2,   MPI_Win_lock(1, rank, 0, win);) (16 1,   MPI_Win_unlock(rank, win);) (16 2,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,     MPI_Win_free(&win);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_stream = fopen(\"ant_stream.txt\", \"w\");) (ant_stream.write_size = 100;) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (32 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (33 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (35 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,   MPI_File_open(MPI_COMM_WORLD, file, 1 | 4, MPI_INFO_NULL, &fh);) (15 2,   MPI_File_write(fh, buf, 256, MPI_CHAR, &status);) (15 3,   MPI_File_close(&fh);) (15 4,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,   MPI_File_open(MPI_COMM_SELF, file, 1 | 4, MPI_INFO_NULL, &fh);) (15 2,   MPI_File_write(fh, buf, 256, MPI_CHAR, &status);) (15 3,   MPI_File_close(&fh);) (15 4,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_type = (float) 0;\n23:   if (rank == 0)\n24:   {\n25:     printf(\"\\nfloat value of f is %f\\n\", f);\n26:     printf(\"\\nfloat value of f is %f\\n\", f);\n27:     printf(\"\\nfloat value of f is %f\\n\", f);\n28:     printf(\"\\nfloat value of f is %f\\n\", f);\n29:     printf(\"\\nfloat value of f is %f\\n\", f);\n30:     printf(\"\\nfloat value of f is %f\\n\", f);\n31:     printf(\"\\nfloat value of f is %f\\n\", f);\n32:     printf(\"\\nfloat value of f is %f\\n\", f);\n33:     printf(\"\\nfloat value of f is %f\\n\", f);\n34:     printf(\"\\nfloat value of f is %f\\n\", f);\n35:     printf(\"\\nfloat value of f is %f\\n\", f);\n36:     printf(\"\\nfloat value of f is %f\\n\", f);\n37:     printf(\"\\nfloat value of f is %f\\n\", f);\n38:     printf(\"\\nfloat value of f is %f\\n\", f);\n39:     printf(\"\\nfloat value of f is %f\\n\", f);\n40:     printf(\"\\nfloat value of f is %f\\n\", f);\n41:     printf(\"\\nfloat value of f is %f\\n\", f);\n42:     printf(\"\\nfloat value of f is %f\\n\", f);\n43:     printf(\"\\nfloat value of f is %f\\n\", f);\n44:     printf(\"\\nfloat value of f is %f\\n\", f);\n45:     printf(\"\\nfloat value of f is %f\\n\", f);\n46:", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,       MPI_Recv(&f, 1, MPI_FLOAT, source, 11, MPI_COMM_WORLD, &status);) (17 1,     MPI_Send(&f, 1, MPI_FLOAT, 0, 11, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 1,   MPI_Get_address(&val, &val_ptrs[rank]);) (14 2,   MPI_Allgather((void *) 1, 0, MPI_DATATYPE_NULL, val_ptrs, 1, (MPI_Datatype) ((void *) (&ompi_mpi_aint)), MPI_COMM_WORLD);) (14 3,   MPI_Win_create_dynamic(MPI_INFO_NULL, MPI_COMM_WORLD, &dyn_win);) (14 4,   MPI_Win_attach(dyn_win, &val, sizeof(int));) (14 5,   MPI_Win_fence(2, dyn_win);) (14 6,   MPI_Accumulate(&one, 1, MPI_INT, i % nproc, val_ptrs[i % nproc], 1, MPI_INT, MPI_SUM, dyn_win);) (14 7,   MPI_Win_fence(16, dyn_win);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Win_detach(dyn_win, &val);) (22 2,   MPI_Win_free(&dyn_win);) (22 3,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (12 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (14 1,   MPI_Get_address(&val, &val_ptrs[rank]);) (14 2,   MPI_Allgather((void *) (-1), 0, (MPI_Datatype) 0x0c000000, val_ptrs, 1, (MPI_Datatype) 0x4c000843, (MPI_Comm) 0x44000000);) (14 3,   MPI_Win_create_dynamic((MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &dyn_win);) (14 4,   MPI_Win_attach(dyn_win, &val, sizeof(int));) (16 1,     MPI_Win_fence(8192, dyn_win);) (16 2,     MPI_Accumulate(&one, 1, (MPI_Datatype) 0x4c000405, i % nproc, val_ptrs[i % nproc], 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, dyn_win);) (16 3,     MPI_Win_fence(16384, dyn_win);) (18 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (23 1,   MPI_Win_detach(dyn_win, &val);) (23 2,   MPI_Win_free(&dyn_win);) (23 3,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (11 1,     MPI_Win_free(&win);) (12 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (11 1,     MPI_Win_free(&win);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60:   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 0,  -MPI_Wtime();) (28 1,   MPI_Scatter(primes, 1, MPI_INT, globalPrimes, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 2,   MPI_Barrier(MPI_COMM_WORLD);) (28 0,  MPI_Wtime();) (37 1,   MPI_Reduce(&elapsed_time, &elapsed_time, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (37 2,   MPI_Barrier(MPI_COMM_WORLD);) (37 0,  MPI_Wtime();) (42 1,   MPI_Barrier(MPI_COMM_WORLD);) (42 2,   MPI_Finalize();)         MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 0,  -MPI_Wtime();) (28 1,   MPI_Bcast(&A, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Bcast(primes, A, MPI_INT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Allreduce(primes, globalPrimes, A, MPI_INT, (MPI_Op) ((void *) (&ompi_mpi_op_lor)), MPI_COMM_WORLD);) (47 1,     MPI_Send(greens, nGreens, MPI_INT, 0, 20, MPI_COMM_WORLD);) (52 1,       MPI_Probe(i, 20, MPI_COMM_WORLD, &status);) (52 2,       MPI_Get_count(&status, MPI_INT, &size);) (52 3,       MPI_Recv(&greens[mySize], size, MPI_INT, i, 20, MPI_COMM_WORLD, &status);) (59 0,  MPI_Wtime();) (65 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada3d(size, rank, size);) (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 0,  MPI_Wtime();) (24 1,       MPI_Isend(&low_bound, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &request);) (24 2,       MPI_Isend(&upper_bound, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &request);) (24 3,       MPI_Isend(&mat_a[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, i, 1 + 2, MPI_COMM_WORLD, &request);) (27 1,   MPI_Bcast(&mat_b, 100 * 100, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&low_bound, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (29 2,     MPI_Recv(&upper_bound, 1, MPI_INT, 0, 1 + 1, MPI_COMM_WORLD, &status);) (29 3,     MPI_Recv(&mat_a[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, 0, 1 + 2, MPI_COMM_WORLD, &status);) (42 1,     MPI_Isend(&low_bound, 1, MPI_INT, 0, 4, MPI_COMM_WORLD, &request);) (42 2,     MPI_Isend(&upper_bound, 1, MPI_INT, 0, 4 + 1, MPI_COM", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 0,  MPI_Wtime();) (23 1,       MPI_Isend(&low_bound, 1, MPI_INT, i, 1, MPI_COMM_WORLD, &request);) (23 2,       MPI_Isend(&upper_bound, 1, MPI_INT, i, 1 + 1, MPI_COMM_WORLD, &request);) (23 3,       MPI_Isend(&mat_a[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, i, 1 + 2, MPI_COMM_WORLD, &request);) (23 4,       MPI_Isend(&mat_b[0][0], 100 * 100, MPI_DOUBLE, i, 1 + 3, MPI_COMM_WORLD, &request);) (28 1,     MPI_Recv(&low_bound, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (28 2,     MPI_Recv(&upper_bound, 1, MPI_INT, 0, 1 + 1, MPI_COMM_WORLD, &status);) (28 3,     MPI_Recv(&mat_a[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, 0, 1 + 2, MPI_COMM_WORLD, &status);) (28 4,     MPI_Recv(&mat_b[0][0], 100 * 100, MPI_DOUBLE, 0, 1 + 3, MPI_COMM_WORLD, &status);) (42 1,     MPI_Isend(&low_bound, 1, MPI_INT, 0, 10, MPI_COMM_WORLD, &request);) (42 2,     MPI_Isend(&upper_bound, 1, MPI_INT, 0, 10 + 1, MPI_COMM_WORLD, &request);) (42 3,     MPI_Isend(&mat_rs[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, 0, 10 + 2, MPI_COMM_WORLD, &request);) (47 1,       MPI_Recv(&low_bound, 1, MPI_INT, i, 10, MPI_COMM_WORLD, &status);) (47 2,       MPI_Recv(&upper_bound, 1, MPI_INT, i, 10 + 1, MPI_COMM_WORLD, &status);) (47 3,       MPI_Recv(&mat_rs[low_bound][0], (upper_bound - low_bound) * 100, MPI_DOUBLE, i, 10 + 2, MPI_COMM_WORLD, &status);) (49 0,  MPI_Wtime();) (52 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andto: (16 1,   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (59 1,       MPI_Finalize();) (64 1,   MPI_Type_vector(blocklen, blocklen_pos, MPI_DOUBLE, &newtype);) (64 2,   MPI_Type_commit(&newtype);) (64 3,   MPI_Barrier(MPI_COMM_WORLD);) (71 1,   MPI_Barrier(MPI_COMM_WORLD);) (71 0,  MPI_Wtime();) (75 1,       MPI_Send(ptr_send, col, MPI_BYTE, 1, 0, MPI_COMM_WORLD);) (75 2,       MPI_Recv(ptr_recv, col, MPI_BYTE, 1, 0, MPI_COMM_WORLD, &status);) (78 1,         MPI_Recv(ptr_recv, col, MPI_BYTE, 0, 0, MPI_COMM_WORLD, &status);) (78 2,         MPI_Send(ptr_send, col, MPI_BYTE, 0, 0, MPI_COMM_WORLD);) (86 1,   MPI_Barrier(MPI_COMM_WORLD);) (90 0,  MPI_Wtime();) (94 1,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 1,     MPI_Finalize();) (31 1,     MPI_Finalize();) (40 1,     MPI_Finalize();) (51 1,       MPI_Finalize();) (79 1,         MPI_Finalize();) (83 1,     MPI_Type_vector(4096, blocklen, 4096, (opt == 0)? (MPI_INT) : (MPI_DOUBLE), &newtype);) (83 2,     MPI_Type_commit(&newtype);) (85 0,  MPI_Wtime();) (89 1,         MPI_Send(ptr_send, 1, newtype, 1, 999, MPI_COMM_WORLD);) (89 2,         MPI_Recv(ptr_recv, 1, newtype, 1, 999, MPI_COMM_WORLD, &status);) (96 1,         MPI_Recv(ptr_recv, 1, newtype, 0, 999, MPI_COMM_WORLD, &status);) (96 2,         MPI_Send(ptr_send, 1, newtype, 0, 999, MPI_COMM_WORLD);) (99 0,  MPI_Wtime();) (105 1,     MPI_Type_free(&newtype);) (107 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(0, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (8 1,     MPI_Ibcast(buffer, 4, MPI_INT, 1, MPI_COMM_WORLD, &request);) (13 1,     MPI_Wait(&request, &status);) (14 1,     MPI_Ibcast(buffer, 4, MPI_INT, 0, MPI_COMM_WORLD, &request);) (14 2,     MPI_Wait(&request, &status);) (22 1,     MPI_Ibcast(buffer, 4, MPI_INT, 0, MPI_COMM_WORLD, &request);) (22 2,     MPI_Wait(&request, &status);) (23 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (7 1,     MPI_Send(buffer, 4, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(buffer, 4, MPI_INT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,   MPI_Alloc_mem(65536 * (sizeof(int)), MPI_INFO_NULL, &buf);) (16 2,   MPI_Alloc_mem(65536 * (sizeof(int)), MPI_INFO_NULL, &winbuf);) (20 1,     MPI_Win_create(winbuf, 65536 * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &window);) (20 2,     MPI_Win_lock(1, 0, 0, window);) (20 3,     MPI_Get_accumulate(buf, 65536, MPI_INT, &val0, &val1, 1, MPI_INT, 0, 65536, MPI_COMM_WORLD, &window);) (20 4,     MPI_Win_unlock(0, window);) (20 5,     MPI_Barrier(MPI_COMM_WORLD);) (20 6,     MPI_Win_lock(1, 0, 0, window);) (20 7,     MPI_Get_accumulate(buf, 65536, MPI_INT, &val1, &val2, 1, MPI_INT, 0, 65536, MPI_COMM_WORLD, window);) (20 8,     MPI_Win_unlock(0, window);) (23 1,       MPI_Win_lock(1, 0, 0, window);) (23 2,       MP", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (14 1,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (15 1,   MPI_Alloc_mem(65536 * (sizeof(int)), (MPI_Info) 0x1c000000, &buf);) (15 2,   MPI_Alloc_mem(65536 * (sizeof(int)), (MPI_Info) 0x1c000000, &winbuf);) (15 3,   MPI_Win_create(winbuf, 65536 * (sizeof(int)), sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &window);) (15 4,   MPI_Win_lock_all(0, window);) (22 1,       MPI_Rput(&buf[0], 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, window, &put_req);) (22 2,       MPI_Wait(&put_req, (MPI_Status *) 1);) (23 1,       MPI_Win_flush(0, window);) (23 2,       MPI_Get(&val, 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, window);) (23 3,       MPI_Win_flush(0, window);) (31 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (45 1,       MPI_Rput(buf, 65536, (MPI_Datatype) 0x4c000405, 0, 0, 65536, (MPI_Datatype) 0x4c000405, window, &put_req);) (45 2,       MPI_Wait(&put_req, (MPI_Status *) 1);) (48 1,       MPI_Win_flush(0, window);) (48 2,       MPI_Get(&val0, 1, (MPI_Datatype) 0x4c000405, 0, 0, 1, (MPI_Datatype) 0x4c000405, window);) (48 3,       MPI_Get(&val1, 1, (MPI_Datatype) 0x4c000405, 0, 65536 - 1, 1, (MPI_Datatype) 0x4c000405, window);) (48 4,       MPI_Get(&val2, 1, (MPI_Datatype) 0x4c000405, 0, 65536 / 2, 1, (MPI_Datatype) 0x4c000405, window);) (48 5,       MPI_Win_flush(0, window);) (66 1,   MPI_Win_unlock_all(window);) (66 2,   MPI_Barrier((MPI_Comm) 0x44000000);) (66 3,   MPI_Win_free(&window);) (67 1,     MPI_Free_mem(buf);) (68 1,     MPI_Free_mem(winbuf);) (68 2,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (70 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>6(MPI_Init(0, 0);) (6(MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6(MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,   MPI_Comm_split(MPI_COMM_WORLD, color, 0, &newcomm);) (10 1,   MPI_Comm_rank(newcomm, &newRank);) (10 2,   MPI_Comm_size(newcomm, &newSize);) (15 1,     MPI_Send(&a, 1, MPI_INT, 4, 0, newcomm);) (19 1,     MPI_Recv(&a, 1, MPI_INT, -1, 0, newcomm, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Comm_split(MPI_COMM_WORLD, color, 0, &newcomm);) (10 1,   MPI_Comm_size(newcomm, &newSize);) (10 2,   MPI_Comm_rank(newcomm, &newRank);) (20 1,   MPI_Bcast(&a, 1, MPI_INT, 0, newcomm);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and(buff, procs);\n30:   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 1,       MPI_Irecv(&buff, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &request);) (17 1,         MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 1,       MPI_Irecv(&buff, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &request);) (22 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (26 1,   MPI_Finalize();)         MPI_Irecv(&buff, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &request);)       MPI_Wait(&request, MPI_STATUS_IGNORE);)         MPI_Isend(&buff, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (26 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Irecv(&buff, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &request);) (26 3,       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Isend(&buff, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (26 4,       MPI_Wait(&request, MPI_STATUS_IGNORE);)       MPI_Isend(&buff, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (26 5,       MPI_Wait(&request, MPI", "label": " (2 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (8 1,   MPI_Irecv(&buff, 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (17 1,         MPI_Send(&data, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (25 1,   MPI_Wait(&request, MPI_STATUS_IGNORE);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 0,  MPI_Wtime();) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (15 0,  MPI_Wtime();) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 2,   MPI_Finalize();)              MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 2);)             MPI_Abort(MPI_COMM_WORLD, 3);)             MPI_Abort(MPI_COMM_WORLD, 4);)             MPI_Abort(MPI_COMM_WORLD, 5);)             MPI_Abort(MPI_COMM_WORLD, 6);)             MPI_Abort(MPI_COMM_WORLD, 7);)             MPI_Abort(MPI_COMM_WORLD, 8);)             MPI_Abort(MPI_COMM_WORLD, 9);)             MPI_Abort(MPI_COMM_WORLD, 10);)             MPI_Abort(MPI_COMM_WORLD, 11);)             MPI_Abort(MPI_COMM_WORLD, 12);)             MPI_Abort(MPI_", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (9 0,  MPI_Wtime();) (10 0,  MPI_Wtime();) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (17 0,  MPI_Wtime();) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arsenow(d, d, 2);\n31:   startTime =\n32:   mySize = (d.size / sqrtMax) + (d.size % sqrtMax);\n33:   myLocalSize = (d.size / sqrtMax) + (d.size % sqrtMax);\n34:   readData(filename, myRank, numProcs, mySize, myLocalSize, mySize, mySize, myCommSize, myComm);\n35:   if (myRank == 0)\n36:   {\n37:     readData(d, filename, d.size, numProcs, mySize, mySize, myCommSize, myComm);\n38:   }\n39:   else\n40:   {\n41:     readData(d, filename, d.size, numProcs, myRank, numProcs, mySize, myCommSize, myComm);\n42:   }\n43:   for (i = 0; i < (d.size / sqrtMax); i++)\n44:   {\n45:     marked[i] = 0;\n46:     for (j = 0; j < (d.size / sqrtMax); j++)\n47:     {\n48:       if (i == j)\n49:         continue;\n50:       if (index!= (-1))\n51:         myTemp[index] = myTemp[index] + 1;\n52:       else\n53:         if (j == j)\n54:         continue;\n55:     }\n56: \n57:     if (myRank == 0)\n58:     {\n59:       for (i = 0; i < (d.size / sqrtMax); i++)\n60:       {\n61:         if (i == j)\n62:", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>25 1,   MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  -MPI_Wtime();) (24 1,   MPI_Scatter(a, nn, MPI_INT, pocTac, nn, MPI_INT, 0, MPI_COMM_WORLD);) (24 2,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (31 1,   MPI_Reduce(&elapsed_time, &elapsed_time, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (32 1,   MPI_Barrier(MPI_COMM_WORLD);) (32 0,  MPI_Wtime();) (38 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  -MPI_Wtime();) (24 1,   MPI_Scatter(svakoPo, 1, MPI_INT, &nn, 1, MPI_INT, 0, MPI_COMM_WORLD);) (26 1,     MPI_Send(&a[pocTacke[i]], svakoPo[i], MPI_INT, i, 17, MPI_COMM_WORLD);) (30 1,     MPI_Recv(a, nn, MPI_INT, 0, 17, MPI_COMM_WORLD, &status);) (32 1,   MPI_Reduce(&sum, &global_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (32 0,  MPI_Wtime();) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (11 1,       MPI_Send(&ProcRank, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (17 1,     MPI_Recv(&RecvRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &Status);) (17 2,     MPI_Finalize();) (18 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (11 1,       MPI_Recv(&RecvRank, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &Status);) (17 1,     MPI_Send(&ProcRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2,   MPI_Init(&argc, &argv);) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (16 3,   MPI_Info_create(&alloc_shared_info);) (16 4,   MPI_Info_set(alloc_shared_info, \"alloc_shared_noncontig\", \"true\");) (16 5,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, MPI_INFO_NULL, &shm_comm);) (16 6,   MPI_Comm_rank(shm_comm, &shm_rank);) (16 7,   MPI_Comm_size(shm_comm, &shm_nproc);) (17 1,   MPI_Win_allocate_shared(my_size, sizeof(int), alloc_shared_info, shm_comm, &my_base, &shm_win);) (19 1,     MPI_Win_fence(2, shm_win);) (21 1,       MPI_Put(&i, 1, MPI_INT, ((shm_rank + 2) > shm_nproc)? (0) : ((shm_rank + 2) % shm_nproc), i, 1, MPI_INT, shm_win);) (22 1,     MPI_Win_fence(16, shm_win);) (24 1,   MPI_Barrier(shm_comm);) (28 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &base);) (48 1,   MPI_Win_free(&shm_win);) (48 2,   MPI_Comm_free(&shm_comm);) (48 3,   MPI_Info_free(&alloc_shared_info);) (48 4,", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (16 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (16 4,   MPI_Info_create(&alloc_shared_info);) (16 5,   MPI_Info_set(alloc_shared_info, \"alloc_shared_noncontig\", \"true\");) (16 6,   MPI_Comm_split_type((MPI_Comm) 0x44000000, 1, rank, (MPI_Info) 0x1c000000, &shm_comm);) (16 7,   MPI_Comm_rank(shm_comm, &shm_rank);) (16 8,   MPI_Comm_size(shm_comm, &shm_nproc);) (17 1,   MPI_Win_allocate_shared(my_size, sizeof(int), alloc_shared_info, shm_comm, &my_base, &shm_win);) (19 1,     MPI_Win_fence(8192, shm_win);) (21 1,       MPI_Put(&i, 1, (MPI_Datatype) 0x4c000405, ((shm_rank + 2) > shm_nproc)? (0) : ((shm_rank + 2) % shm_nproc), i, 1, (MPI_Datatype) 0x4c000405, shm_win);) (22 1,     MPI_Win_fence(16384, shm_win);) (24 1,   MPI_Barrier(shm_comm);) (28 1,     MPI_Win_shared_query(shm_win, i, &size, &disp_unit, &base);) (48 1,   MPI_Win_free(&shm_win);) (48 2,   MPI_Comm_free(&shm_comm);) (48 3,   MPI_Info_free(&alloc_shared_info);) (48 4,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4 1,   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(comm, &rank);) (13 2,   MPI_Comm_size(comm, &size);) (18 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,       MPI_Irecv(buf, 1, MPI_INT, source, 0, comm, &req[i]);) (20 2,       MPI_Waitall(256, req, MPI_STATUS_IGNORE);) (20 0,  MPI_Irecv(buf, 1, MPI_INT, source, 0, comm, &req[i]);) (20 1,       MPI_Waitall(256, req, MPI_STATUS_IGNORE);) (20 0,  MPI_Irecv(buf, 1, MPI_INT, source, 0, comm, &req[i]);) (22 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,     MPI_Send(buf, 1, MPI_INT, dest, 0, comm);) (26 1,     MPI_Waitall(256, req, MPI_STATUS_IGNORE);) (26 0,  MPI_Irecv(buf, 1, MPI_INT, source, 0, comm, &req[i]);) (27 1,     MPI_Waitall(256, req, MPI_STATUS_IGNORE);) (29 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (12 1,   MPI_Comm_rank(comm, &rank);) (12 2,   MPI_Comm_size(comm, &size);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 0,  MPI_Recv(buf, 1, MPI_INT, source, i, comm, MPI_STATUS_IGNORE);) (31 0,  MPI_Isend(buf, 1, MPI_INT, dest, i, comm, &req[i]);) (38 0,  MPI_Waitall(256000, req, MPI_STATUS_IGNORE);) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Send(&sendbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (11 2,     MPI_Recv(&recvbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (15 1,     MPI_Recv(&recvbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (15 2,     MPI_Send(&sendbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (16 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Send(&sendbuf, count, MPI_INT, 1, tag, MPI_COMM_WORLD);) (11 2,     MPI_Recv(&recvbuf, count, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (15 1,     MPI_Send(&sendbuf, count, MPI_INT, 0, tag, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&recvbuf, count, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, null_comm, &mpi_request);) (14 1,   MPI_Wait(&mpi_request, &mpi_status);) (14 2,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, null_comm, &mpi_request);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Iallgather(buffer, buffer_size, MPI_INT, buffer, buffer_size, MPI_INT, MPI_COMM_WORLD, &req);) (18 2,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 1,   MPI_Irecv(buffer_r, buffer_size, MPI_INT, pre, 42, MPI_COMM_WORLD, &req);) (19 2,   MPI_Send(buffer, buffer_size, MPI_INT, nxt, 42, MPI_COMM_WORLD);) (19 3,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (12 2,   MPI_Win_free(&win);) (12 3,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (12 1,     MPI_Win_free(&win);) (12 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(count, block, global_count, n);) (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  -MPI_Wtime();) (17 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (21 1,     MPI_Finalize();) (32 1,     MPI_Finalize();) (38 1,   MPI_Bcast(&prime, 1, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,   MPI_Reduce(&count, &global_count, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (67 0,  MPI_Wtime();) (67 1,   MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)         MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  -MPI_Wtime();) (17 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (26 1,     MPI_Finalize();) (32 1,     MPI_Finalize();) (61 1,     MPI_Bcast(&prime, 1, MPI_INT, 0, MPI_COMM_WORLD);) (68 1,   MPI_Reduce(&count, &global_count, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (68 0,  MPI_Wtime();) (73 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (17 1,     MPI_Send(local_char, strlen(local_char), MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (17 2,     MPI_Send(local_array, strlen(local_array), MPI_CHAR, 2, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(local_char, 10, MPI_CHAR, 3, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 2,     MPI_Recv(local_array, 10, MPI_CHAR, 3, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,     MPI_Recv(local_char, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MP", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (53 1,   MPI_SEC_Allgather(local_char, 10, (MPI_Datatype) 0x4c000101, local_array, 10, (MPI_Datatype) 0x4c000101, (MPI_Comm) 0x44000000);) (55 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (55 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>k3dMPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Get_address(buf, displacements);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Type_free(&new_t);) (25 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Type_free(&new_t);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_calculation(rcv_matrix, snd_matrix, rcv_matrix, &newtype);) (77 1,   MPI_Type_vector(50, 1, 20, MPI_DOUBLE, &type);) (77 2,   MPI_Type_commit(&type);) (77 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (77 4,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (77 5,   MPI_Type_contiguous(100, MPI_DOUBLE, &newtype);) (77 6,   MPI_Type_commit(&newtype);) (77 7,   MPI_Barrier(MPI_COMM_WORLD);) (77 8,   MPI_Bcast(&max_idx, 1, newtype, 0, MPI_COMM_WORLD);) (94 1,   MPI_Barrier(MPI_COMM_WORLD);) (94 0,  MPI_Wtime();) (100 1,     MPI_Bcast(rcv_matrix, 1024, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (111 1,     MPI_Barrier(MPI_COMM_WORLD);) (111 0,  MPI_Wtime();) (113 1,   MPI_Barrier(MPI_COMM_WORLD);) (113 0,  MPI_Wtime();) (115 1,       MPI_Bcast(rcv_matrix, 1024, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (119 1,   MPI_Barrier(MPI_COMM_WORLD);) (119 0,  MPI_Wtime();) (120 1,   MPI_Barrier(MPI_COMM_WORLD);) (120 0,  MPI_Wtime();) (121 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (25 1,     MPI_Finalize();) (36 1,     MPI_Finalize();) (45 1,     MPI_Finalize();) (56 1,       MPI_Finalize();) (95 1,     MPI_Type_indexed(4096, blklens, disps, MPI_INT, &newtype);) (98 1,     MPI_Type_indexed(4096, blklens, disps, MPI_DOUBLE, &newtype);) (99 1,   MPI_Type_commit(&newtype);) (103 0,  MPI_Wtime();) (105 1,       MPI_Send(snd_matrix, 1, newtype, 1, 999, MPI_COMM_WORLD);) (105 2,       MPI_Recv(rcv_matrix, 1, newtype, 1, 999, MPI_COMM_WORLD, &status);) (107 0,  MPI_Wtime();) (112 1,       MPI_Recv(rcv_matrix, 1, newtype, 0, 999, MPI_COMM_WORLD, &status);) (112 2,       MPI_Send(snd_matrix, 1, newtype, 0, 999, MPI_COMM_WORLD);) (122 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &irank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &nrank);) (28 1,     MPI_Bcast(&nrank, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 2,     MPI_Bcast(&rows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 3,     MPI_Bcast(&cols, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 4,     MPI_Bcast(&rows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 5,     MPI_Bcast(&cols, 1, MPI_INT, 0, MPI_COMM_WORLD);) (63 1,     MPI_Bcast(vec, cols, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (63 2,     MPI_Bcast(&rows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (63 3,     MPI_Bcast(res, cols, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (64 1,     MPI_Bcast(&nrank, 1, MPI_INT, 0, MPI_COMM_WORLD);) (64 2,     MPI_Bcast(vec, cols, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (64 3,     MPI_Bcast(&nrank, 1, MPI_INT, 0, MPI_COMM_WORLD);) (64 4,     MPI_Bcast(res, cols, MPI_DOUBLE", "label": " (11 1,   MPI_Init(0, 0);) (14 1,   MPI_Comm_size(MPI_COMM_WORLD, &nrank);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &irank);) (27 1,     MPI_Bcast(vec, cols, MPI_DOUBLE, manager, MPI_COMM_WORLD);) (29 1,       MPI_Send(mat + (count * cols), cols, MPI_DOUBLE, i + 1, count + 1, MPI_COMM_WORLD);) (34 1,       MPI_Recv(&ans, 1, MPI_DOUBLE, -1, -1, MPI_COMM_WORLD, &status);) (39 1,         MPI_Send(mat + (count * cols), cols, MPI_DOUBLE, sender, count + 1, MPI_COMM_WORLD);) (43 1,         MPI_Send((void *) 0, 0, MPI_DOUBLE, sender, 0, MPI_COMM_WORLD);) (63 1,     MPI_Bcast(vec, cols, MPI_DOUBLE, manager, MPI_COMM_WORLD);) (67 1,         MPI_Recv(row, cols, MPI_DOUBLE, manager, -1, MPI_COMM_WORLD, &status);) (76 1,         MPI_Send(&res, 1, MPI_DOUBLE, manager, row_idx, MPI_COMM_WORLD);) (82 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,     MPI_Win_free(&win);) (35 2,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (16 2,   MPI_Win_lock(1, rank, 0, win);) (21 1,   MPI_Win_unlock(rank, win);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 1,     MPI_Win_free(&win);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (9 3,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &l.rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &l.size);) (27 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(33 1,   MPI_Init(&argc, &argv);) (33 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (33 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (35 1,   MPI_Bcast(&numRows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (35 2,   MPI_Bcast(&numCols, 1, MPI_INT, 0, MPI_COMM_WORLD);) (35 3,   MPI_Bcast(&numRows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,   MPI_Bcast(bias, numRows, MPI_INT, 0, MPI_COMM_WORLD);) (36 2,   MPI_Bcast(bias, numRows, MPI_INT, 0, MPI_COMM_WORLD);) (36 3,   MPI_Bcast(bias, numRows, MPI_INT, 0, MPI_COMM_WORLD);) (36 4,   MPI_Bcast(bias, numRows, MPI_INT, 0, MPI_COMM_WORLD);) (36 5,   MPI_Bcast(bias, numRows, MPI_INT, 0, MPI_COMM_WORLD);) (52 1,     MPI_Barrier(MPI_COMM_WORLD);) (52 2,     MPI_Barrier(MPI_COMM_WORLD);", "label": " (53 1,   MPI_Init(&argc, &argv);) (53 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (53 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (60 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (128 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (12 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &cartesianCommunicator);) (12 2,   MPI_Comm_rank(cartesianCommunicator, &cartDims[rank]);) (12 3,   MPI_Comm_size(cartesianCommunicator, &cartPeriodic[rank]);) (12 4,   MPI_Comm_rank(cartesianCommunicator, &cartDims[rank]);) (13 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (15 0,  MPI_Wtime();) (23 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 0,  MPI_Wtime();) (12 1,   MPI_Dims_create(nproc, 3, cartDims);) (12 2,   MPI_Barrier(MPI_COMM_WORLD);) (12 0,  MPI_Wtime();) (14 1,   MPI_Cart_create(MPI_COMM_WORLD, 3, cartDims, cartPeriodic, 1, &cartesianCommunicator);) (14 2,   MPI_Barrier(MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (16 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &splitCommunicator);) (16 2,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (10 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (18 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (10 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (18 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>10(0, 0);) (10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,     MPI_Send(&dizi, 50, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (16 2,     MPI_Recv(&dizi_1, 50, MPI_DOUBLE, 1, -1, MPI_COMM_WORLD, &status1);) (16 3,     MPI_Send(&dizi_2, 50, MPI_DOUBLE, 1, 1, MPI_COMM_WORLD);) (16 4,     MPI_Recv(&dizi_1, 50, MPI_DOUBLE, 1, -1, MPI_COMM_WORLD, &status1);) (16 5,     MPI_Get_count(&status1, MPI_INT, &count);) (20 1,     MPI_Recv(&dizi_2, 50, MPI_DOUBLE, 0, -1, MPI_COMM_WORLD, &status2);) (20 2,     MPI_Get_count(&status2, MPI_INT, &count);) (24 1,     MPI_Send(&dizi, 50, MPI_DOUBLE, 0, status1.MPI_TAG, MPI_COMM_WORLD);) (24 2,     MPI_Recv(&dizi_1, 50, MPI_DOUBLE, 0, -1, MPI_COMM_WORLD, &status1);) (24 3,     MPI_Get_count(&status1, MPI_INT, &count);) (30 1,     MPI_Send(&dizi, 50, MPI_DOUBLE, 0, status1.MPI_TAG,", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,     MPI_Send(&dizi[0], 50, MPI_DOUBLE, 1, 113, MPI_COMM_WORLD);) (16 2,     MPI_Send(&dizi[50], 25, MPI_DOUBLE, 2, 114, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&dizi_1[0], 50, MPI_DOUBLE, 0, 113, MPI_COMM_WORLD, &status1);) (23 1,     MPI_Get_count(&status1, MPI_DOUBLE, &count);) (28 1,     MPI_Recv(&dizi_2[0], 25, MPI_DOUBLE, 0, 114, MPI_COMM_WORLD, &status2);) (30 1,     MPI_Get_count(&status2, MPI_DOUBLE, &count);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>at(MPI_Init(&argc, &argv);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (17 0,  MPI_Wtime();) (18 1,     MPI_Send(&part, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (18 2,     MPI_Recv(&part, 1, MPI_INT, np - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 0,  MPI_Wtime();) (38 1,     MPI_Recv(&part, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 2,     MPI_Send(&part, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (17 0,  -MPI_Wtime();) (29 1,     MPI_Gather(&flag, 1, MPI_INT, flags, 1, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,     MPI_Bcast(&globalL, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (38 2,     MPI_Bcast(&globalR, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (43 0,  MPI_Wtime();) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>acctest_mpi(MPI_COMM_WORLD, &nb_proc);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Scatter(buf, 1, MPI_INT, &val, 1, MPI_INT, root, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &nb_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Scatter(buf, count, MPI_INT, &val, count, MPI_INT, root, MPI_COMM_WORLD);) (14 1,     MPI_Scatter(0, 0, MPI_INT, &val, count, MPI_INT, root, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 1,   MPI_Scatter(local_int, 10, MPI_FLOAT, local_array, 10, MPI_FLOAT, 0, MPI_COMM_WORLD);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (30 1,   MPI_Gather(&local_int, 10, MPI_FLOAT, local_array, 10, MPI_FLOAT, 0, MPI_COMM_WORLD);) (51 1,   MPI_Barrier(MPI_COMM_WORLD);) (51 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (34 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c00040a, local_array, 4, (MPI_Datatype) 0x4c00040a, (MPI_Comm) 0x44000000);) (36 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (36 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Type_size(MPI_INT, &T[0]);) (26 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (30 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (32 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (34 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (35 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (38 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (41 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (42 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (45 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (49 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (51 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (52 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (53 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (54 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (57 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (58 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (59 0,  MPI_Type_get_extent(MPI_INT, &lb, &extent);) (62 0,  MPI_Type_get_extent(MPI_INT", "label": " (13 1,   MPI_Init(&argc, &argv);) (25 0,  MPI_Type_create_struct(2, array_of_blocklengths, array_of_displacements, array_of_types, &type0);) (29 1,     MPI_Error_string(err, errorString, &errorStringLen);) (31 0,  MPI_Type_commit(&type0);) (35 1,     MPI_Error_string(err, errorString, &errorStringLen);) (37 0,  MPI_Type_create_resized(type0, 0, 16, &type1);) (37 0,  MPI_Type_commit(&type1);) (41 1,     MPI_Error_string(err, errorString, &errorStringLen);) (46 0,  MPI_Type_create_struct(3, B, D, T, &newtype);) (50 1,     MPI_Error_string(err, errorString, &errorStringLen);) (52 0,  MPI_Type_commit(&newtype);) (56 1,     MPI_Error_string(err, errorString, &errorStringLen);) (58 1,   MPI_Type_ub(newtype, &ub);) (58 2,   MPI_Type_size(newtype, &typesize);) (58 3,   MPI_Type_get_extent(newtype, &lb, &extent);) (58 4,   MPI_Type_get_true_extent(newtype, &true_lb, &true_extent);) (59 0,  MPI_Type_free(&type0);) (63 1,     MPI_Error_string(err, errorString, &errorStringLen);) (65 0,  MPI_Type_free(&type1);) (69 1,     MPI_Error_string(err, errorString, &errorStringLen);) (71 0,  MPI_Type_free(&newtype);) (75 1,     MPI_Error_string(err, errorString, &errorStringLen);) (77 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 4,   MPI_Info_create(&info_in);) (13 5,   MPI_Info_set(info_in, invalid_key, \"true\");) (13 6,   MPI_Win_allocate(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &base, &win);) (13 7,   MPI_Info_get(info_in, \"no_locks\", 256, MPI_CHAR, buf, &flag);) (13 8,   MPI_Info_get(info_in, \"no_locks\", 256, MPI_CHAR, buf, &flag);) (13 9,   MPI_Info_get(info_in, \"no_locks\", 256, MPI_CHAR, buf, &flag);) (13 10,   MPI_Win_lock_all(0, win);) (13 11,   MPI_Win_sync(win);) (13 12,   MPI_Info_free(&info_in);) (13 13,   MPI_Info_free(&info_out);) (13 14,   MPI_Win_unlock_all(win);) (13 15,   MPI_Win_free(&win);) (13 16,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (14 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 4,   MPI_Info_create(&info_in);) (13 5,   MPI_Info_set(info_in, \"no_locks\", \"true\");) (13 6,   MPI_Win_allocate(sizeof(int), sizeof(int), info_in, MPI_COMM_WORLD, &base, &win);) (13 7,   MPI_Win_get_info(win, &info_out);) (13 8,   MPI_Info_get(info_out, \"no_locks\", 256, buf, &flag);) (21 1,   MPI_Info_free(&info_in);) (21 2,   MPI_Info_free(&info_out);) (21 3,   MPI_Win_free(&win);) (21 4,   MPI_Win_allocate(sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &base, &win);) (21 5,   MPI_Info_create(&info_in);) (21 6,   MPI_Info_set(info_in, invalid_key, \"true\");) (21 7,   MPI_Win_set_info(win, info_in);) (21 8,   MPI_Win_get_info(win, &info_out);) (21 9,   MPI_Info_get(info_out, invalid_key, 256, buf, &flag);) (26 1,   MPI_Info_free(&info_in);) (26 2,   MPI_Info_free(&info_out);) (26 3,   MPI_Info_create(&info_in);) (26 4,   MPI_Info_set(info_in, \"no_locks\", \"false\");) (26 5,   MPI_Win_set_info(win, info_in);) (26 6,   MPI_Win_get_info(win, &info_out);) (26 7,   MPI_Info_get(info_out, \"no_locks\", 256, buf, &flag);) (36 1,   MPI_Info_free(&info_in);) (36 2,   MPI_Info_free(&info_out);) (36 3,   MPI_Info_create(&info_in);) (36 4,   MPI_Info_set(info_in, \"no_locks\", \"true\");) (36 5,   MPI_Win_set_info(win, info_in);) (36 6,   MPI_Win_get_info(win, &info_out);) (36 7,   MPI_Info_get(info_out, \"no_locks\", 256, buf, &flag);) (46 1,   MPI_Info_free(&info_in);) (46 2,   MPI_Info_free(&info_out);) (46 3,   MPI_Win_get_info(win, &info_out);) (46 4,   MPI_Info_get(info_out, \"accumulate_ordering\", 256, buf, &flag);) (48 1,   MPI_Info_get(info_out, \"accumulate_ops\", 256, buf, &flag);) (50 1,   MPI_Info_get(info_out, \"same_size\", 256, buf, &flag);) (52 1,   MPI_Info_get(info_out, \"alloc_shm\", 256, buf, &flag);) (54 1,   MPI_Info_free(&info_out);) (54 2,   MPI_Win_free(&win);) (54 3,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Recv(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (12 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, size, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_NULL, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2d = MPI_Init(&argc, &argv);) (22 1,   MPI_Comm_size(MPI_COMM_WORLD, &mysize);) (22 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (39 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 1, &comm_2d);) (39 2,   MPI_Comm_rank(comm_2d, &myrank);) (39 3,   MPI_Cart_coords(comm_2d, myrank, 2, coords);) (44 1,   MPI_Barrier(MPI_COMM_WORLD);) (44 2,   MPI_Finalize();)", "label": " (22 1,   MPI_Init(&argc, &argv);) (22 2,   MPI_Comm_size(comm, &npes);) (22 3,   MPI_Comm_rank(comm, &myrank);) (24 1,   MPI_Cart_create(comm, 2, dims, periods, 1, &comm_2d);) (24 2,   MPI_Comm_rank(comm_2d, &my2drank);) (24 3,   MPI_Cart_coords(comm_2d, my2drank, 2, mycoords);) (24 4,   MPI_Cart_shift(comm_2d, 1, -1, &rightrank, &leftrank);) (24 5,   MPI_Cart_shift(comm_2d, 0, -1, &downrank, &uprank);) (39 1,   MPI_Cart_shift(comm_2d, 1, -mycoords[0], &shiftsource, &shiftdest);) (39 2,   MPI_Sendrecv_replace(a, nlocal * nlocal, MPI_DOUBLE, shiftdest, 1, shiftsource, 1, comm_2d, &status);) (39 3,   MPI_Cart_shift(comm_2d, 0, -mycoords[1], &shiftsource, &shiftdest);) (39 4,   MPI_Sendrecv_replace(b, nlocal * nlocal, MPI_DOUBLE, shiftdest, 1, shiftsource, 1, comm_2d, &status);) (42 1,     MPI_Sendrecv_replace(a, nlocal * nlocal, MPI_DOUBLE, leftrank, 1, rightrank, 1, comm_2d, &status);) (42 2,     MPI_Sendrecv_replace(b, nlocal * nlocal, MPI_DOUBLE, uprank, 1, downrank, 1, comm_2d, &status);) (44 1,   MPI_Comm_free(&comm_2d);) (44 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (16 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (36 1,   MPI_Comm_split(MPI_COMM_WORLD, rank % 2, rank, &localcomm);) (36 2,   MPI_Comm_rank(localcomm, &lrank);) (36 3,   MPI_Comm_size(localcomm, &lsize);) (36 4,   MPI_Comm_remote_size(localcomm, &rsize);) (38 1,     MPI_Intercomm_merge(localcomm, 0, &intracomm);) (38 2,     MPI_Comm_rank(intracomm, &lrank);) (38 3,     MPI_Comm_size(intracomm, &lsize);) (41 1,       MPI_Intercomm_merge(intracomm, 0, &intracomm);) (41 2,       MPI_Comm_free(&intracomm);) (41 3,       MPI_Comm_rank(intracomm, &lrank);) (41 4,       MPI_Comm_size(intracomm, &lsize);) (54 1,       MPI_Recv(&buf[0], 1, MPI_INT, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 2,       MPI_Recv(&buf[1], 1, MPI_INT, -1", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (25 1,       MPI_Recv(buf, 2, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,     MPI_Comm_idup(MPI_COMM_WORLD, &newcomm, &rreq);) (27 2,     MPI_Wait(&rreq, MPI_STATUS_IGNORE);) (30 1,     MPI_Comm_idup(MPI_COMM_WORLD, &newcomm, &rreq);) (32 1,     MPI_Ssend(buf, 2, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 2,     MPI_Wait(&rreq, MPI_STATUS_IGNORE);) (35 1,   MPI_Allreduce(&buf[0], &buf[1], 1, MPI_INT, MPI_SUM, newcomm);) (47 1,   MPI_Comm_free(&newcomm);) (47 2,   MPI_Comm_split(MPI_COMM_WORLD, rank % 2, rank, &localcomm);) (47 3,   MPI_Intercomm_create(localcomm, 0, MPI_COMM_WORLD, (rank == 0)? (1) : (0), 1234, &ic);) (50 1,     MPI_Comm_dup(localcomm, &stagger_comm);) (51 1,   MPI_Comm_rank(ic, &lrank);) (51 2,   MPI_Comm_size(ic, &lsize);) (51 3,   MPI_Comm_remote_size(ic, &rsize);) (57 1,       MPI_Recv(buf, 2, MPI_INT, i, 0, ic, MPI_STATUS_IGNORE);) (59 1,     MPI_Comm_idup(ic, &newcomm, &rreq);) (59 2,     MPI_Wait(&rreq, MPI_STATUS_IGNORE);) (62 1,     MPI_Comm_idup(ic, &newcomm, &rreq);) (64 1,     MPI_Ssend(buf, 2, MPI_INT, 0, 0, ic);) (64 2,     MPI_Wait(&rreq, MPI_STATUS_IGNORE);) (67 1,   MPI_Allreduce(&buf[0], &buf[1], 1, MPI_INT, MPI_SUM, newcomm);) (79 1,   MPI_Comm_free(&localcomm);) (81 1,     MPI_Comm_free(&stagger_comm);) (82 1,   MPI_Comm_free(&newcomm);) (82 2,   MPI_Comm_free(&ic);) (82 3,   MPI_Reduce((rank == 0)? ((void *) 1) : (&errs), &errs, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (93 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler((MPI_Comm) 0x44000000, (MPI_Errhandler) 0x54000001);) (17 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_rank(0, 0);) (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (15 1,     MPI_Send(&local_int, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&local_int, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,     MPI_Send(&local_int, 1, MPI_INT, 2, 0, MPI_COMM_WORLD);) (24 2,     MPI_Recv(&local_int, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (34 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (36 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (36 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(0, 0);) (6 1,   MPI_Comm_size(comm_shared, &np);) (6 2,   MPI_Comm_rank(comm_shared, &me);) (6 3,   MPI_Get_processor_name(pname, &rlen);) (9 1,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &comm_shared);) (10 1,   MPI_Comm_size(comm_shared, &localnp);) (10 2,   MPI_Comm_rank(comm_shared, &localme);) (22 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (6 1,   MPI_Get_processor_name(pname, &rlen);) (8 1,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &comm_shared);) (10 1,   MPI_Comm_size(comm_shared, &localnp);) (10 2,   MPI_Comm_rank(comm_shared, &localme);) (13 1,   MPI_Win_allocate_shared(nbytes, 1, MPI_INFO_NULL, comm_shared, &baseptr, &win_shared);) (19 1,     MPI_Win_shared_query(win_shared, rank, &lsize, &ldisp, &lbase);) (22 1,   MPI_Win_free(&win_shared);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13:   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000000, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 0,  MPI_Wtime();) (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(com, &np);) (13 3,   MPI_Comm_rank(com, &me);) (13 4,   MPI_Comm_dup(com, &com_com);) (13 5,   MPI_Comm_set_errhandler(com, MPI_ERRORS_RETURN);) (13 0,  MPI_Wtime();) (13 1,     MPI_Barrier(com);) (13 0,  MPI_Wtime();) (13 1,     MPI_Bcast(&msg, 1, MPI_INT, 0, com);) (16 1,       MPI_Error_string(ier, msg, &len, &disp, &tbmax);) (16 2,       MPI_Barrier(com);) (16 3,       MPI_Error_string(ier, msg, &len, &disp, &tbmax);) (16 4,       MPI_Barrier(com);) (16 5,       MPI_Error_string(ier, msg, &len, &disp, &tbmax);) (16 6,       MPI_Barrier(com);) (16 7,       MPI_Error_string(ier, msg, &len, &disp, &tbmax);) (16 8,       MPI_Barrier(com);) (16 0,  MPI_Wtime();) (22 1,       MPI_Error_string(ier, msg, &len, &disp, &tbmax);) (22 2,", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (13 4,   MPI_Barrier(MPI_COMM_WORLD);) (13 0,  MPI_Wtime();) (13 0,  MPI_Wtime();) (18 1,       MPI_Send(&msg, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&msg, 1, MPI_INT, ip, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,       MPI_Send(&msg, 1, MPI_INT, ip, 0, MPI_COMM_WORLD);) (31 1,       MPI_Recv(&msg, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Reduce(&t1, &tbmax, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n14:   int my_rank;\n15:   int p;\n16:   int source;\n17:   int dest;\n18:   int tag = 0;\n19:   int i;\n20:   int j;\n21:   int k;\n22:   int *array;\n23:   int *sorted_array;\n24:   int *result;\n25:   int *sorted_array2;\n26:   int *result2;\n27:   int *sorted_array2;\n28:   int *result;\n29:   int *receive_array;\n30:   int *receive_array2;\n31:   int *receive_array2;\n32:   int *receive_array2;\n33:   int *receive_array2;\n34:   int *receive_array2;\n35:   int *receive_array2;\n36:   int *receive_array2;\n37:   int *receive_array2;\n38:   int *receive_array2;\n39:   int *receive_array2;\n40:   int *sorted_array2;\n41:   int *result2;\n42:   int *result22;\n43:   int *receive_array2;\n44:   int *receive_array2;\n45:   int *result2;\n46:   int *result22;\n47:   int *receive_array2;\n48:   int *result2;\n49:   int *receive_array2;\n50:   int *result2;\n51:   int *receive_array2;\n52:   int *result2;\n53:   int *receive_array2;\n54:   int *result2;\n55:   int *receive_array2;\n56:   int *result2;\n57:   int *receive_array2;\n58:   int *result2;\n59:   int *", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ka_init(MPI_COMM_WORLD, rank);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Get_processor_name(processor_name, &namelen);) (7 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Get_processor_name(processor_name, &namelen);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (2 0,  MPI_Wtime();) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Barrier(MPI_COMM_WORLD);) (7 0,  MPI_Wtime();) (10 1,   MPI_Allreduce(&minMaxLen, &minMaxLen, 1, MPI_INT, MPI_MIN, MPI_COMM_WORLD);) (10 2,   MPI_Allreduce(&minMaxLen, &minMaxLen, 1, MPI_INT, MPI_MIN, MPI_COMM_WORLD);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 0,  MPI_Wtime();) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(comm, &size);) (2 3,   MPI_Comm_rank(comm, &rank);) (3 0,  MPI_Wtime();) (10 1,     MPI_Finalize();) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (12 1,   MPI_Win_create(val_ptr, sizeof(int), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (14 1,     MPI_Win_lock(1, rank, 0, win);) (14 2,     MPI_Compare_and_swap(&next, &i, &result, MPI_INT, rank, 0, win);) (14 3,     MPI_Win_unlock(rank, win);) (21 1,       MPI_Error_string(errors, error, &result, &result);) (48 1,   MPI_Win_lock(1, rank, 0, win);) (48 2,   MPI_Compare_and_swap(&next, &i, &result, MPI_INT, (rank + 1) % nproc, 0, win);) (48 3,   MPI_Win_unlock(rank, win);) (51 1,   MPI_Win_free(&win);) (51 2,   MPI_Reduce(&errors, &all_errors, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (76 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (9 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (11 1,   MPI_Win_create(val_ptr, sizeof(int), sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &win);) (15 1,     MPI_Win_lock(234, rank, 0, win);) (15 2,     MPI_Compare_and_swap(&next, &i, &result, (MPI_Datatype) 0x4c000405, rank, 0, win);) (15 3,     MPI_Win_unlock(rank, win);) (30 1,   MPI_Win_lock(234, rank, 0, win);) (31 1,   MPI_Win_unlock(rank, win);) (31 2,   MPI_Barrier((MPI_Comm) 0x44000000);) (35 1,     MPI_Win_lock(234, (rank + 1) % nproc, 0, win);) (35 2,     MPI_Compare_and_swap(&next, &i, &result, (MPI_Datatype) 0x4c000405, (rank + 1) % nproc, 0, win);) (35 3,     MPI_Win_unlock((rank + 1) % nproc, win);) (51 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (51 2,   MPI_Win_lock(234, rank, 0, win);) (52 1,   MPI_Win_unlock(rank, win);) (52 2,   MPI_Barrier((MPI_Comm) 0x44000000);) (58 1,       MPI_Win_lock(234, 0, 0, win);) (58 2,       MPI_Compare_and_swap(&next, &i, &result, (MPI_Datatype) 0x4c000405, 0, 0, win);) (58 3,       MPI_Win_unlock(0, win);) (61 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (77 1,   MPI_Win_free(&win);) (77 2,   MPI_Reduce(&errors, &all_errors, 1, (MPI_Datatype) 0x4c000405, (MPI_Op) 0x58000003, 0, (MPI_Comm) 0x44000000);) (80 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(0, 0);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Bcast(&local_int, 200, MPI_INT, 0, MPI_COMM_WORLD);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (34 1,   MPI_SEC_Allgather(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (36 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (36 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_Init(rank, size);) (4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,     MPI_Finalize();) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (30 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (34 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (43 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (53 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (56 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (57 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (82 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (88 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (89 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (90 1,     MPI_Finalize();) (95 1,       MPI_Finalize();) (98 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,     MPI_Get_version(&version, &subversion);) (11 1,  MPI (version,subversion) is not consistent:\\n compiled: (%d,%d)\\n runtime:  (%d,%d)\\n\", 3, 1, version, subversion);) (20 1,     MPI_Get_library_version(version, &resultlen);) (97 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (19 4,   MPI_Barrier(MPI_COMM_WORLD);) (19 0,  MPI_Wtime();) (25 1,     MPI_Send(temp, nX, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (25 2,     MPI_Recv(temp, nX, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD, &status);) (34 1,     MPI_Recv(temp, nX, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD, &status);) (34 2,     MPI_Send(temp, nX, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (44 1,   MPI_Barrier(MPI_COMM_WORLD);) (44 0,  MPI_Wtime();) (45 1,       MPI_Send(temp, nX, MPI_DOUBLE,", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (25 0,  -MPI_Wtime();) (26 1,   MPI_Bcast(&npX, 1, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,       MPI_Send(&temp[1], 1, MPI_DOUBLE, id - 1, 1, MPI_COMM_WORLD);) (41 1,       MPI_Recv(&temp[npX + 1], 1, MPI_DOUBLE, id + 1, 1, MPI_COMM_WORLD, &status);) (44 1,       MPI_Send(&temp[npX], 1, MPI_DOUBLE, id + 1, 2, MPI_COMM_WORLD);) (47 1,       MPI_Recv(&temp[0], 1, MPI_DOUBLE, id - 1, 2, MPI_COMM_WORLD, &status);) (68 1,   MPI_Barrier(MPI_COMM_WORLD);) (70 0,  MPI_Wtime();) (77 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (11 1,     MPI_Win_free(&win);) (12 1,     MPI_Win_free(&win);) (19 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (11 1,     MPI_Win_free(&win);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(0, 0);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (49 1,       MPI_Send(&local_sum[i], 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (56 1,     MPI_Recv(local_mat, local_sz * n, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_", "label": " (14 1,   MPI_Init(0, 0);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (36 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,     MPI_Scatter(mat, local_sz * n, MPI_DOUBLE, local_mat, local_sz * n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (40 2,     MPI_Scatter(vec, local_sz, MPI_DOUBLE, local_vec, local_sz, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (43 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (46 1,     MPI_Scatter(mat, local_sz * n, MPI_DOUBLE, local_mat, local_sz * n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (46 2,     MPI_Scatter(vec, local_sz, MPI_DOUBLE, local_vec, local_sz, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (61 1,   MPI_Reduce(local_mat, local_sum, n, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (79 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(&local_buf, 10, MPI_INT, 1, 5, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(2, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[3] = MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_create_errhandler(verbose_errhandler, &errulo);) (7 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (3 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 4,   MPI_Comm_dup(MPI_COMM_WORLD, &errhan_comm);) (3 5,   MPI_Comm_create_errhandler(comm_errhan_fnc, &errhan);) (3 6,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, errhan);) (3 7,   MPI_Comm_set_errhandler(errhan_comm, errhan);) (5 1,   MPI_Errhandler_free(&errhan);) (5 2,   MPI_Comm_free(&errhan_comm);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n65:   MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (19 1,     MPI_Finalize();) (27 1,   MPI_Bcast(buf, 9 * (sizeof(int)), MPI_INT, 0, MPI_COMM_WORLD);) (27 2,   MPI_Type_vector(9, 1, 9, MPI_INT, &filetype);) (27 3,   MPI_Type_commit(&filetype);) (41 1,     MPI_File_open(MPI_COMM_WORLD, \"testfile\", 1 | 4, MPI_INFO_NULL, &fh);) (42 1,     MPI_File_set_view(fh, 0, MPI_INT, filetype, \"native\", MPI_INFO_NULL);) (42 2,     MPI_File_write(fh, buf, 9 * (sizeof(int)), MPI_INT, &status);) (42 3,     MPI_File_close(&fh);) (60 1,   MPI_File_open(MPI_COMM_WORLD, \"testfile\", 2, MPI_INFO_NULL, &fh);) (60 2,   MPI_File_set_view(fh, 0, MPI_INT, filetype, \"native\", MPI_INFO_NULL);) (60 3,   MPI_File_write(fh, buf, 9 * (sizeof(int)), MPI_INT, &status);) (60 4,   MPI_File_close(&fh);) (60 5,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (19 1,     MPI_Finalize();) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (47 1,   MPI_Type_indexed(num, blocklen, indices, MPI_INT, &filetype);) (47 2,   MPI_Type_commit(&filetype);) (50 1,   MPI_File_open(MPI_COMM_WORLD, \"dummy\", 4, MPI_INFO_NULL, &fh);) (50 2,   MPI_File_set_view(fh, 0, MPI_INT, filetype, \"native\", MPI_INFO_NULL);) (50 3,   MPI_File_write_all(fh, buf, buflen, MPI_INT, &status);) (50 4,   MPI_Type_free(&filetype);) (50 5,   MPI_File_sync(fh);) (50 6,   MPI_File_close(&fh);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>, MPI_Init(&argc, &argv);) (5 1,   MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (10 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4(0, 0);) (10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Send(&number, 1, MPI_INT, first, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&number, 1, MPI_INT, first, 0, MPI_COMM_WORLD, &status);) (34 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &name);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(0, 0);) (3 0,  MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (5 1,   MPI_Barrier(MPI_COMM_WORLD);) (7 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_Recv(&local_char, 18, MPI_CHAR, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (3 0,  MPI_Init(0, 0);) (4 0,  MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 0,  MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (23 0,  MPI_SEC_Allgather(local_char, 1, (MPI_Datatype) 0x4c000101, local_array, 1, (MPI_Datatype) 0x4c000101, (MPI_Comm) 0x44000000);) (25 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (25 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 0,  MPI_Wtime();) (11 1,     MPI_Type_vector(128, 1, len, MPI_DOUBLE, &newtype);) (11 2,     MPI_Type_commit(&newtype);) (11 3,     MPI_Type_free(&newtype);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 4,   MPI_Type_contiguous(64, MPI_DOUBLE, &newtype);) (5 5,   MPI_Type_commit(&newtype);) (8 0,  MPI_Bcast(A, 1, newtype, 0, MPI_COMM_WORLD);) (12 1,     MPI_Error_string(rc, buf, &len);) (12 2,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Type_free(&newtype);) (15 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(id, nX, nY, r, r2, tMax, tInit);) (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (31 1,     MPI_Send(&wallTime, 1, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (31 2,     MPI_Recv(&temp[(id * nX) + 1][0], (nX + 2) * npX, MPI_DOUBLE, -1, tag, MPI_COMM_WORLD, &status);) (33 1,     MPI_Recv(&temp[(id * nX) + 1][0], (nX + 2) * npX, MPI_DOUBLE, -1, tag, MPI_COMM_WORLD, &status);) (33 2,     MPI_Send(&wallTime, 1, MPI_DOUBLE, 0, tag, MPI_COMM_WORLD);) (34 0,  MPI_Wtime();) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 2,   MPI_Finalize();)", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (22 1,   MPI_Bcast(&npX, 1, MPI_INT, 0, MPI_COMM_WORLD);) (31 0,  -MPI_Wtime();) (41 1,       MPI_Send(&temp[step - 1][1], 1, MPI_DOUBLE, id - 1, 1, MPI_COMM_WORLD);) (44 1,       MPI_Recv(&temp[step - 1][npX + 1], 1, MPI_DOUBLE, id + 1, 1, MPI_COMM_WORLD, &status);) (47 1,       MPI_Send(&temp[step - 1][npX], 1, MPI_DOUBLE, id + 1, 2, MPI_COMM_WORLD);) (50 1,       MPI_Recv(&temp[step - 1][0], 1, MPI_DOUBLE, id - 1, 2, MPI_COMM_WORLD, &status);) (68 0,  MPI_Wtime();) (75 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>44 1,   MPI_Init(0, 0);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 2,     MPI_Bcast(&rNum2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 3,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 4,     MPI_Bcast(&rNum2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 5,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 6,     MPI_Bcast(&rNum2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 7,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 8,     MPI_Bcast(&rNum2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 9,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 10,     MPI_Bcast(&rNum2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 11,     MPI_Bcast(&rNum1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 12,", "label": " (12 1,   MPI_Init(0, 0);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (23 1,       MPI_Send(&rNum1, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&rNum1, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (76 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 3,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (10 4,   MPI_Get_version(&ProcessorName, &MPI_VERSION_NULL);) (10 5,   MPI_Comm_get_parent(&interComm);) (10 6,   MPI_Intercomm_merge(interComm, 0, &intraComm);) (10 7,   MPI_Comm_size(intraComm, &NumberProcesses);) (10 8,   MPI_Comm_rank(intraComm, &Rank);) (10 9,   MPI_Comm_get_parent(&interComm);) (18 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,   MPI_Bcast(&Flag, 1, MPI_INT, 0, MPI_COMM_WORLD);) (19 2,   MPI_Comm_free(&intraComm);) (19 3,   MPI_Comm_free(&interComm);) (19 4,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_UNIVERSE_SIZE, &UniverseSize, &Flag);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 4,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 5,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (20 0,  MPI_Comm_spawn(\"./SpawnChild\", (char **) 0, (*UniverseSize) - 1, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &InterComm, ErrorCodes);) (22 1,       MPI_Intercomm_merge(InterComm, 0, &IntraComm);) (22 2,       MPI_Comm_free(&InterComm);) (23 1,       MPI_Comm_size(IntraComm, &NumberProcesses);) (23 2,       MPI_Comm_rank(IntraComm, &ID);) (23 3,       MPI_Comm_disconnect(&IntraComm);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations(MPI_Init(&argc, &argv));\n35:   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (21 1,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (22 1,   MPI_Reduce(&loc_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (21 0,  MPI_Wtime();) (22 1,   MPI_Reduce(&loc_elapsed, &elapsed, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (22 2,   MPI_Reduce(&local_int, &total_int, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (49 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (42 1,   MPI_Gatherv(v_lcl, counts[myid], MPI_DOUBLE, v_glb, counts, dspls, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (42 2,   MPI_Bcast(v_glb, nglb, (MPI_Datatype) ((void *) (&ompi_mpi_dblprec)), 0, MPI_COMM_WORLD);) (49 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>idev(arr, n, rank, num_proc, MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (21 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 0,  MPI_Wtime();) (20 1,   MPI_Scatter(arr, local_size, MPI_INT, local_arr, local_size, MPI_INT, 0, MPI_COMM_WORLD);) (21 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,       MPI_Send(&f, 1, MPI_FLOAT, dest, 0, MPI_COMM_WORLD);) (17 1,     MPI_Recv(&f, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, &status);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,       MPI_Send(&f, 1, MPI_FLOAT, dest++, 11, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&f, 1, MPI_FLOAT, 0, 11, MPI_COMM_WORLD, &status);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (25 4,   MPI_Bcast(&d, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (25 5,   MPI_Bcast(&bias, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (25 6,   MPI_Bcast(&index, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init(0, 0);) (4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (16 1,     MPI_Barrier(MPI_COMM_WORLD);) (22 1,     MPI_Barrier(MPI_COMM_WORLD);) (23 1,   MPI_Scatter(local_array, 4, MPI_CHAR, local_char, 4, MPI_CHAR, 0, MPI_COMM_WORLD);) (27 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (25 1,   MPI_Alltoall(local_char, 1, (MPI_Datatype) 0x4c000101, local_array, 1, (MPI_Datatype) 0x4c000101, (MPI_Comm) 0x44000000);) (27 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (27 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_cuda_support(MPI_COMM_WORLD, cuda_support);) (cuda_support)\n27:   {\n28:     printf(\"\\nCUDA is supported\\n\");\n29:   }\n30:   else\n31:     if (ze_support)\n32:   {\n33:     printf(\"\\nZE is supported\\n\");\n34:   }\n35:   else\n36:     if (cuda_support)\n37:   {\n38:     printf(\"\\nZE is supported\\n\");\n39:   }\n40:   else\n41:     if (cuda_support)\n42:   {\n43:     printf(\"\\nZE is supported\\n\");\n44:   }\n45:   else\n46:     if (ze_support)\n47:   {\n48:     printf(\"\\nZE is supported\\n\");\n49:   }\n50:   else\n51:     if (cuda_support)\n52:   {\n53:     printf(\"\\nZE is supported\\n\");\n54:   }\n55:   else\n56:     if (ze_support)\n57:   {\n58:     printf(\"\\nZE is supported\\n\");\n59:   }\n60:   else\n61:     if (cuda_support)\n62:   {\n63:     printf(\"\\nZE is supported\\n\");\n64:   }\n65:   else\n66:     if (ze_support)\n67:   {\n68:     printf(\"\\nZE is supported\\n\");\n69:   }\n70:   else\n71:     if (cuda_support)\n72:   {\n73:     printf(\"\\nZE is supported\\n\");\n74:   }\n75:   else\n76:     if (ze_", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPIX_GPU_query_support(MPIX_GPU_SUPPORT_CUDA, &cuda_support);) (4 3,   MPIX_GPU_query_support(MPIX_GPU_SUPPORT_ZE, &ze_support);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace: int main(int argc, char **argv)\n26: {\n27:   MPI_Comm comm = MPI_COMM_WORLD;\n28:   int countOProcesses = 10;\n29:   int countArray[countOProcesses];\n30:   int *resultsArray;\n31:   int *countArray;\n32:   int *localArray;\n33:   countOProcesses = countOProcesses / numProcs;\n34:   localArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n35:   countArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n36:   for (i = 0; i < countArray[countOProcesses]; i++)\n37:   {\n38:     localArray[i] = i;\n39:     countArray[i] = countArray[i] + countArray[i];\n40:   }\n41: \n42:   int *localArray;\n43:   localArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n44:   countArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n45:   for (i = 0; i < countArray[countOProcesses]; i++)\n46:   {\n47:     localArray[i] = countArray[i] + countArray[i];\n48:   }\n49: \n50:   int *localArray;\n51:   localArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n52:   countArray = (int *) malloc(countArray[countOProcesses] * (sizeof(int)));\n53:   for (i = 0; i < countArray[countOProcesses]; i++)\n54:   {\n55:     localArray[i] = countArray[i] + countArray[i];\n56:", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,       MPI_Send(buffer, 1, MPI_INT, 1, tag_sender, MPI_COMM_WORLD);) (18 1,       MPI_Recv(buffer, 1, MPI_INT, 0, tag_receiver, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (37 0,  -MPI_Wtime();) (38 1,       MPI_Send(&temp[0][0], 1, MPI_DOUBLE, procId + 1, 0, MPI_COMM_WORLD);) (38 2,       MPI_Send(&temp[0][0], 1, MPI_DOUBLE, procId + 1, 1, MPI_COMM_WORLD);) (38 3,       MPI_Recv(&temp[0][0], 1, MPI_DOUBLE, procId - 1, 0, MPI_COMM_WORLD, &status);) (38 4,", "label": " (22 1,   MPI_Init(&argc, &argv);) (22 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (22 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProc);) (26 1,   MPI_Bcast(&npX, 1, MPI_INT, 0, MPI_COMM_WORLD);) (38 0,  -MPI_Wtime();) (59 1,       MPI_Send(&temp[1][0], ncellsY, MPI_DOUBLE, id - 1, 1, MPI_COMM_WORLD);) (62 1,       MPI_Recv(&temp[npX + 1][0], ncellsY, MPI_DOUBLE, id + 1, 1, MPI_COMM_WORLD, &status);) (65 1,       MPI_Send(&temp[npX][0], ncellsY, MPI_DOUBLE, id + 1, 2, MPI_COMM_WORLD);) (68 1,       MPI_Recv(&temp[0][0], ncellsY, MPI_DOUBLE, id - 1, 2, MPI_COMM_WORLD, &status);) (89 1,   MPI_Barrier(MPI_COMM_WORLD);) (91 0,  MPI_Wtime();) (108 1,     MPI_Barrier(MPI_COMM_WORLD);) (110 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(&argc, &argv);) (5 1,     MPI_Abort(MPI_COMM_WORLD, rc);) (5 2,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (37 1,     MPI_Bcast(&a, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (37 2,     MPI_Bcast(&b, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (37 3,     MPI_Bcast(&c, 1, MPI_CHAR, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andSerial();\n32:   do\n33:   {\n34:     if ((limit % groupSize) == 0)\n35:     {\n36:       if (isOutput(input))\n37:         answerNumber++;\n38:       input.bit++;\n39:     }\n40:     if (processNumber == (groupSize - 1))\n41:     {\n42:       if (isOutput(input))\n43:         answerNumber++;\n44:       input.bit++;\n45:     }\n46:     if (processNumber == 0)\n47:       printf(\"processor:%lf of total:%d\\n\", processNumber, groupSize);\n48:     printf(\"processor:%lf of total:%d\\n\", processNumber, groupSize);\n49:     if (isOutput(input))\n50:     {\n51:       if (isOutput(input))\n52:         answerNumber++;\n53:       input.bit++;\n54:     }\n55:     if (processNumber == 0)\n56:       printf(\"processor:%lf of total:%d\\n\", processNumber, groupSize);\n57:     printf(\"processor:%lf of total:%d\\n\", processNumber, groupSize);\n58:     if (isOutput(input))\n59:     {\n60:       if (isOutput(input))\n61:         answerNumber++;\n62:       input.bit++;\n63:     }\n64:     if (processNumber == 0)\n65:       printf(\"processor:%lf of total:%d\\n\", processNumber, groupSize);\n66:     printf(\"processor:%lf of total", "label": " (2 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &processNumber);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &groupSize);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 0,  MPI_Wtime();) (23 1,   MPI_Reduce(&answerNumber, &sumNumber, 1, MPI_UNSIGNED, MPI_SUM, 0, MPI_COMM_WORLD);) (23 2,   MPI_Barrier(MPI_COMM_WORLD);) (23 0,  MPI_Wtime();) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 1,         MPI_Send(buffer, 1024, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 2,         MPI_Send(&max, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (29 3,         MPI_Send(&min, 1, MPI_INT, i, 2, MPI_COMM_WORLD);) (29 4,         MPI_Send(&max, 1, MPI_INT, i, 3, MPI_COMM_WORLD);) (36 1,       MPI_Recv(buffer, 1024, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (36 2,       MPI_Recv(&max, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,         MPI_Recv(buffer, 1024, MPI_INT, 0, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,         MPI_Recv(&max, 1, MP", "label": " (3 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (29 1,         MPI_Send(buffer, 1024, MPI_INT, pre, 42, MPI_COMM_WORLD);) (29 2,         MPI_Recv(buffer + 1024, 1024, MPI_INT, pre, 42, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,         MPI_Send((((buffer + 1024) + 1024) + LOCAL_SIZE) + 1024, 1024, MPI_INT, nxt, 42, MPI_COMM_WORLD);) (32 2,         MPI_Recv(((buffer + 1024) + 1024) + LOCAL_SIZE, 1024, MPI_INT, nxt, 42, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,         MPI_Recv(buffer + 1024, 1024, MPI_INT, pre, 42, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 2,         MPI_Send(buffer, 1024, MPI_INT, pre, 42, MPI_COMM_WORLD);) (41 1,         MPI_Recv(((buffer + 1024) + 1024) + LOCAL_SIZE, 1024, MPI_INT, nxt, 42, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 2,         MPI_Send((((buffer + 1024) + 1024) + LOCAL_SIZE) + 1024, 1024, MPI_INT, nxt, 42, MPI_COMM_WORLD);) (45 1,       MPI_Reduce((void *) 1, &max, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (49 1,       MPI_Reduce(&max, 0, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &irank);) (19 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,   MPI_Reduce(&local_sum, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (36 2,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &irank);) (18 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,     MPI_Reduce(&local_sum, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (34 1,     MPI_Barrier(MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_sort(n, 0, MPI_COMM_WORLD);) (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_p);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (22 0,  MPI_Wtime();) (23 1,   MPI_Bcast(&seed, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Bcast(v, n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_p);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (22 0,  MPI_Wtime();) (26 0,  MPI_Wtime();) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>'ta(MPI_Init(0, 0);) (6 1,   MPI_Comm_get_parent(&parent);) (8 1,     MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (8 2,     MPI_Comm_spawn(\"./spawn-rootargs\", args, 5, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000001, &child, (int *) 0);) (8 3,     MPI_Barrier(child);) (8 4,     MPI_Comm_disconnect(&child);) (13 1,     MPI_Barrier(parent);) (13 2,     MPI_Comm_disconnect(&parent);) (14 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_get_parent(&parent);) (8 1,     MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (8 2,     MPI_Comm_spawn(\"./spawn_rootargs\", args, 5, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000001, &child, (int *) 0);) (8 3,     MPI_Barrier(child);) (8 4,     MPI_Comm_disconnect(&child);) (13 1,     MPI_Barrier(parent);) (13 2,     MPI_Comm_disconnect(&parent);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &request);) (8 2,     MPI_Wait(&request, &status);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &status);) (12 2,     MPI_Wait(&request, &status);) (13 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124, MPI_COMM_NULL, &request);) (8 2,     MPI_Wait(&request, &status);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (25 1,   MPI_Bcast(&local_int, 400, MPI_FLOAT, 0, MPI_COMM_WORLD);) (27 1,     MPI_Scatter(local_int, 1, MPI_FLOAT, local_int, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (41 1,     MPI_Scatter(local_int, 1, MPI_FLOAT, local_int, 2, MPI_FLOAT, 0, MPI_COMM_WORLD);) (44 1,       MPI_Scatter(local_int, 1, MPI_FLOAT, local_int, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (53 1,       MPI_Scatter(local_int, 1, MPI_FLOAT, local_int, 2, MPI_FLOAT, 0, MPI_COMM_WORLD);) (56 1,   MPI_Barrier(MPI_COMM_WORLD);) (72 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (70 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c00040a, local_array, 4, (MPI_Datatype) 0x4c00040a, (MPI_Comm) 0x44000000);) (72 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (72 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (8 2,     MPI_Barrier(MPI_COMM_WORLD);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Barrier(MPI_COMM_WORLD);) (12 2,     MPI_Win_fence(0, win);) (12 3,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = 1;\n74:   res =\n75:   assert(res == 0);\n76:   res =\n77:   assert(res == 0);\n78:   res =\n79:   assert(res == 0);\n80:   assert(count == 1);\n81:   res =\n82:   assert(res == 0);\n83:   res =\n84:   assert(res == 0);\n85:   assert(count == 0);\n86:   res =\n87:   assert(res == 0);\n88:   assert(count == 0);\n89:   res =\n90:   assert(res == 0);\n91:   assert(count == 0);\n92:   res =\n93:   assert(res == 0);\n94:   assert(count == 0);\n95:   res =\n96:   assert(res == 0);\n97:   assert(count == 0);\n98:   res =\n99:   assert(res == 0);\n100:   assert(count == 0);\n101:   res =\n102:   assert(res == 0);\n103:   assert(count == 0);\n104:   assert(count == 0);\n105:   res =\n106:   assert(res == 0);\n107:   assert(count == 0);\n108:   res =\n109:   assert(res == 0);\n110:   assert(count == 0);\n111:   res =\n112:   assert(res == 0);\n113:   assert(count == 0);\n114:   res =\n115:   assert(res == 0);\n116:   assert(count == 0);\n117:   res =\n118:   assert(res == 0);\n119:   assert(count == 0);\n120:   res =\n121:   assert(res == 0);\n122:   assert(count == 0);\n123:   res =\n124:   assert(res == 0);\n125:   assert(count == 0);\n126:   res", "label": " (21 0,  MPI_Init(&argc, &argv);) (22 0,  MPI_Comm_size(comm, &size);) (23 0,  MPI_Comm_rank(comm, &rank);) (24 0,  MPI_File_open(comm, file, 2, MPI_INFO_NULL, &fh);) (25 0,  MPI_File_get_size(fh, &fs);) (35 0,  MPI_Get_address(rbuf + (i * 10), &addr);) (39 0,  MPI_Type_create_hindexed(count, lens, disp, MPI_CHAR, &data);) (40 0,  MPI_Type_commit(&data);) (41 0,  MPI_Type_indexed(count, lens, offs, MPI_CHAR, &view);) (42 0,  MPI_Type_commit(&view);) (43 0,  MPI_File_set_view(fh, 0, MPI_CHAR, view, \"native\", MPI_INFO_NULL);) (44 0,  MPI_File_read(fh, (void *) 0, 1, data, &sts);) (45 0,  MPI_Get_count(&sts, data, &count);) (48 0,  MPI_Type_free(&view);) (49 0,  MPI_Type_free(&data);) (50 0,  MPI_File_close(&fh);) (51 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Type_size(MPI_INT, &t);) (8 1,   MPI_Type_get_extent(MPI_INT, &ni, &na, &na);) (8 2,   MPI_Type_create_hindexed(MPI_INT, nd, na, t, &t);) (8 3,   MPI_Type_commit(&t);) (12 1,       MPI_Type_size(t, &t);) (12 2,       MPI_Type_get_extent(t, &ni, &na, &na);) (12 3,       MPI_Type_get_size(t, &t);) (12 4,       MPI_Type_get_extent(t, &ni, &na);) (12 5,       MPI_Type_get_size(t, &t);) (12 6,       MPI_Type_get_extent(t, &ni, &na);) (17 1,       MPI_Type_size(t, &t);) (17 2,       MPI_Type_get_extent(t, &ni, &na);) (19 1,       MPI_Type_get_size(t, &t);) (19 2,       MPI_Type_get_extent(t, &ni, &na);) (106 1,     MPI_Type_size(t, &t);) (118 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,     MPI_Type_create_hindexed_block(count, blocklength, displacements, MPI_INT, &t);) (10 2,     MPI_Type_commit(&t);) (19 1,       MPI_Type_get_envelope(t, &ni, &na, &nd, &combiner);) (19 2,       MPI_Type_get_contents(t, ni, na, nd, i, a, d);) (106 1,     MPI_Type_free(&t);) (118 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &total);) (36 1,   MPI_Scatter(A, n * m, MPI_DOUBLE, A[0], n * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (36 2,   MPI_Scatter(B, n * m, MPI_DOUBLE, B[0], n * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (38 1,   MPI_Gather(c, n * m, MPI_DOUBLE, C, n * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &total);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (36 1,   MPI_Bcast((void *) intBuf, 2, MPI_INT, 0, MPI_COMM_WORLD);) (45 1,   MPI_Bcast((void *) b, n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (45 2,   MPI_Scatter((void *) A, n * m, MPI_DOUBLE, (void *) a, n * m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (53 1,   MPI_Gather((void *) c, m, MPI_DOUBLE, (void *) C, m, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (53 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (17 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (17 2,   MPI_Comm_rank(allcomm, &my_rank);) (17 3,   MPI_Comm_size(allcomm, &size);) (17 4,   MPI_Barrier(allcomm);) (17 5,   MPI_Comm_free(&allcomm);) (17 6,   MPI_Comm_disconnect(&intercomm);) (17 7,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000000, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Type_contiguous(buffer_size, MPI_INT, &null_type);) (5 4,   MPI_Type_commit(&null_type);) (10 1,     MPI_Send(buffer, 1, null_type, 1, 0, MPI_COMM_WORLD);) (13 1,     MPI_Recv(buffer, 1, null_type, 0, 0, MPI_COMM_WORLD, &stat);) (14 1,   MPI_Type_free(&null_type);) (14 2,   MPI_Type_free(&type_contig);) (14 3,   MPI_Finalize();)       MPI_Type_free(&buffer_contig);)       MPI_Type_free(&type_contig", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer2, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,   MPI_Reduce(&sum, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)     MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Recv(&sum, 1, MPI_INT, j, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);)     MPI_Recv(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)   MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);)   MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)   MPI_Finalize();)     MPI_Abort(MPI_COMM_WORLD, 1);)   MPI_Reduce(&sum, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);)     MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Reduce(&sum, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WOR", "label": " (16 1,   MPI_Init(0, 0);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (25 1,     MPI_Send(&z, 1, MPI_INT, (my_rank + RIGHT) % comm_sz, 0, MPI_COMM_WORLD);) (26 1,       MPI_Recv(&z, 1, MPI_INT, comm_sz - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,       MPI_Recv(&z, 1, MPI_INT, my_rank + LEFT, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (22 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (28 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (29 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (20 1,     MPI_Win_lock(2, rank, 0, win);) (21 1,     MPI_Win_unlock(rank, win);) (21 2,     MPI_Barrier(MPI_COMM_WORLD);) (28 1,     MPI_Win_free(&win);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (16 1,   MPI_Type_size(type, &size);) (16 2,   MPI_Type_get_extent(type, &lb, &extent);) (16 3,   MPI_Type_ub(type, &ub);) (16 4,   MPI_Type_size(type, &size);) (16 5,   MPI_Type_get_extent(type, &lb, &extent);) (17 0,  MPI_Type_ub(type, &ub);) (21 1,       MPI_Type_size(type, &size);) (22 1,       MPI_Type_get_extent(type, &lb, &extent);) (24 1,       MPI_Type_ub(type, &ub);) (24 2,       MPI_Type_size(type, &size);) (27 1,       MPI_Type_get_extent(type, &lb, &extent);) (32 1,       MPI_Type_ub(type, &ub);) (32 2,       MPI_Type_size(type, &size);) (34 1,     MPI_Type_get_extent(type, &lb, &extent);) (35 1,     MPI_Type_ub(type, &ub);) (36 1,     MPI_Type_size(type, &size);) (38 1,     MPI_Type_get_extent(type, &lb, &extent);) (41 1,     MPI_Type_ub(type, &ub);) (45 1,   MPI_Type_size(type, &size);) (47 1,   MPI_Type_get_extent(type, &lb, &extent", "label": " (14 1,   MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (16 0,  MPI_Type_size(type, &size);) (28 1,  \"MPI_Type_size of MPI_INT incorrect size (%d);) (31 0,  MPI_Type_get_extent(type, &lb, &extent);) (43 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect extent (%d);) (50 1,  \"MPI_Type_get_extent of MPI_INT returned incorrect lb (%d);) (53 0,  MPI_Type_ub(type, &ub);) (65 1,  \"MPI_Type_ub of MPI_INT returned incorrect ub (%d);) (69 0,  MPI_Type_size(type, &size);) (81 1,  \"MPI_Type_size of MPI_FLOAT_INT returned incorrect size (%d);) (84 0,  MPI_Type_get_extent(type, &lb, &extent);) (96 1,  \"MPI_Type_get_extent of MPI_FLOAT_INT returned incorrect extent (%d);) (103 1,  \"MPI_Type_get_extent of MPI_FLOAT_INT returned incorrect lb (%d);) (106 0,  MPI_Type_ub(type, &ub);) (118 1,  \"MPI_Type_ub of MPI_FLOAT_INT returned incorrect ub (%d);) (129 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada3(0, 0, procs, MPI_COMM_WORLD, &request);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (18 1,       MPI_Irecv(&buff, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (18 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (31 1,     MPI_Irecv(sendarr, procs, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (31 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (31 3,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (14 1,     MPI_Irecv(&sendarr[0], 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (14 2,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (18 1,       MPI_Recv(&sendarr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 1,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (43 1,   MPI_Bcast(&partialResult, 1, MPI_INT, 0, MPI_COMM_WORLD);) (46 1,   MPI_Scatter(randomNumbers, count, MPI_INT, randomNumbers, count, MPI_INT, 0, MPI_COMM_WORLD);) (46 2,   MPI_Bcast(&partialResult, 1, MPI_INT, 0, MPI_COMM_WORLD);) (53 1,   MPI_Gather(&partialResult, 1, MPI_INT, gatherResult, 1, MPI_INT, 0, MPI_COMM_WORLD);) (53 2,   MPI_Bcast(&partialResult, 1, MPI_INT, 0, MPI_COMM_WORLD);) (53 3,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (46 1,   MPI_Scatter(randomNumbers, count, MPI_INT, splitCount, count, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,   MPI_Reduce(&partialResult, &finalResult, 1, MPI_INT, MPI_PROD, 0, MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Send(&sendbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD);) (12 2,     MPI_Recv(&recvbuf, 1, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (16 1,     MPI_Recv(&recvbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (16 2,     MPI_Send(&sendbuf, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 1,     MPI_Sendrecv(&sendbuf, count, MPI_INT, 1, tag, &recvbuf, count, MPI_INT, 1, tag, MPI_COMM_WORLD, &status);) (16 1,     MPI_Sendrecv(&sendbuf, count, MPI_INT, 0, tag, &recvbuf, count, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_free(&locbuf);) (22 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>k3d_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Get_address(&buf->c, &base);) (7 2,   MPI_Get_address(&buf->d, &displacements[0]);) (7 3,   MPI_Get_address(&buf->d, &displacements[1]);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Type_free(&new_t);) (27 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Type_free(&new_t);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_v(v, n, local_n, me, v, &local_w[0]);) (v)\n71:   for (i = 0; i < local_n; i++)\n72:     v[i] = local_w[i] + local_w[i];\n73: \n74:   printf(\"\\n\");\n75:   if (me == 0)\n76:   {\n77:     printf(\"\\nGlobal sum:", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (48 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (48 2,   MPI_Bcast(&local_n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 1,   MPI_Bcast(&v[0], n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (55 1,   MPI_Scatter(&A[0], num, MPI_DOUBLE, &localA[0], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (59 1,   MPI_Gather(&local_w[0], local_n, MPI_DOUBLE, &w[0], local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_2d_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (27 1,       MPI_Send(&local_int, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (27 2,       MPI_Send(&local_int, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (27 3,       MPI_Send(&local_int, 1, MPI_INT, i, 2, MPI_COMM_WORLD);) (27 4,       MPI_Send(&local_int, 1, MPI_INT, i, 3, MPI_COMM_WORLD);) (27 5,       MPI_Send(&local_int, 1, MPI_INT, i, 4, MPI_COMM_WORLD);) (27 6,       MPI_Send(&local_int, 1, MPI_INT, i, 5, MPI_COMM_WORLD);) (27 7,       MPI_Send(&local_int, 1, MPI_INT, i, 6, MPI_COMM_WORLD);) (27 8,       MPI_Send(&local_int, 1, MPI_INT, i, 7, MPI_COMM_WORLD);) (27 9,       MPI_Send(&local_int, 1, MPI_INT, i, 8, MPI_COMM_WORLD);) (27 10,       MPI_Send(&local_int, 1, MPI_INT, i, 9, MPI_COMM_WORLD);) (27 11,       MPI_Send(&local_int, 1, MPI_INT, i, 10, MPI_COMM_WORLD);) (27 12,", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (70 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (72 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (72 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>6 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,     MPI_Type_vector(countL, 1, 4, MPI_INT, &vppType);) (16 2,     MPI_Type_commit(&vppType);) (17 1,     MPI_Type_create_resized(vppType, 0, 1 * (sizeof(int)), &lowType);) (17 2,     MPI_Type_commit(&lowType);) (17 3,     MPI_Type_create_resized(vppType, 0, 1 * (sizeof(int)), &countL);) (17 4,     MPI_Type_commit(&countL);) (25 1,     MPI_Scatter(A, 1, MPI_INT, &x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 2,     MPI_Scatter(0, 1, MPI_INT, &x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 3,     MPI_Scatter(A, 1, MPI_INT, &x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 1,     MPI_Gather(0, 1, MPI_INT, &x, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 2,     MPI_Gather(0, 1, MPI_INT, 0, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 1,   MPI_Type_indexed(countU, blengthsU, displsU, MPI_INT, &uppType);) (23 2,   MPI_Type_commit(&uppType);) (26 1,   MPI_Type_indexed(countL, blengthsL, displsL, MPI_INT, &lowType);) (26 2,   MPI_Type_commit(&lowType);) (28 1,     MPI_Send(A, 1, uppType, 1, 777, MPI_COMM_WORLD);) (28 2,     MPI_Send(A, 1, lowType, 1, 778, MPI_COMM_WORLD);) (32 1,     MPI_Recv(upp, 10, MPI_INT, 0, 777, MPI_COMM_WORLD, &status);) (32 2,     MPI_Recv(low, 10, MPI_INT, 0, 778, MPI_COMM_WORLD, &status);) (33 1,   MPI_Type_free(&uppType);) (33 2,   MPI_Type_free(&lowType);) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andBarrier(MPI_COMM_WORLD);) (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (21 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (21 4,   MPI_Get_processor_name(myName, &myRows);) (21 5,   MPI_Get_version(&version, &subversion);) (21 6,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (21 7,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (27 1,   MPI_Barrier(MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (27 1,   MPI_Bcast(matrix[0][0], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 2,   MPI_Bcast(matrix[0][1], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 3,   MPI_Bcast(matrix[0][2], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 4,   MPI_Bcast(matrix[0][1], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 5,   MPI_Bcast(matrix[0][0], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 6,   MPI_Bcast(matrix[0][1], numCols * 2, MPI_INT, 0, MPI_COMM_WORLD);) (27 7,   MPI_Bcast(matrix[0][2], numCols * 2, MPI_INT, 0, MPI_COMM_WOR", "label": " (41 1,   MPI_Init(&argc, &argv);) (41 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (41 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (41 0,  MPI_Wtime();) (48 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (56 0,  MPI_Wtime();) (110 0,  MPI_Wtime();) (119 0,  MPI_Wtime();) (123 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (26 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + (current_sz / 2), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,         MPI_Send(&add, 1, MPI_DOUBLE, my_rank - (current_sz / 2), 0, MPI_COMM_WORLD);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (17 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (17 2,   MPI_Comm_rank(allcomm, &my_rank);) (17 3,   MPI_Comm_size(allcomm, &size);) (17 4,   MPI_Barrier(allcomm);) (17 5,   MPI_Comm_free(&allcomm);) (17 6,   MPI_Comm_disconnect(&intercomm);) (17 7,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada4(&ProcNum, &ProcRank, MPI_COMM_WORLD, &ProcNum);) (ProcRank == 0)? (0) : (ProcNum - 1);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (12 1,       MPI_Send(&ball, 1, MPI_INT, j, 0, MPI_COMM_WORLD);) (12 2,       MPI_Recv(&recv_ball, 1, MPI_INT, j, 0, MPI_COMM_WORLD, &Status);) (18 1,       MPI_Recv(&recv_ball, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &Status);) (18 2,       MPI_Send(&ball, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (21 1,     MPI_Bcast(&ball, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,       MPI_Send(&ball, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (23 2,       MPI_Recv(&recv_ball, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &Status);) (26 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (12 1,     MPI_Finalize();) (18 1,       MPI_Rsend(&ProcRank, 1, MPI_INT, -2, 0, MPI_COMM_WORLD);) (19 1,       MPI_Recv(&RecvRank, 1, MPI_INT, -2, -1, MPI_COMM_WORLD, &Status);) (23 1,       MPI_Recv(&RecvRank, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, &Status);) (23 2,       MPI_Send(&ProcRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (40 1,       MPI_Send(&ball, 1, MPI_INT, -2, 0, MPI_COMM_WORLD);) (41 1,       MPI_Recv(&hits1_ball, 2, MPI_INT, -2, -1, MPI_COMM_WORLD, &Status);) (50 1,       MPI_Send(&hits1_ball, 2, MPI_INT, 0, 0, MPI_COMM_WORLD);) (50 2,       MPI_Recv(&ball, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, &Status);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_REQUEST_NULL, &req);) (6 1,   MPI_Comm_set_attr(MPI_COMM_WORLD, MPI_REQUEST_NULL, &flag);) (8 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Comm_idup(MPI_COMM_WORLD, &newcomm, &req);) (7 1,   MPI_Test(&req, &flag, MPI_STATUS_IGNORE);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (19 1,     MPI_Send(&local_int, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (25 1,     MPI_Recv(&local_int, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (7 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (37 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (39 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (39 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, invalid_count, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 2,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, invalid_count, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Get(&local_buf, 10, MPI_INT, -1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, -1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, chunkSize, num_proc, rank, size);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (14 0,  MPI_Wtime();) (15 1,     MPI_Scatter(arr, chunkSize, MPI_INT, chunkArr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,     MPI_Gather(chunkArr, chunkSize, MPI_INT, arr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (32 1,       MPI_Scatter(arr, chunkSize, MPI_INT, chunkArr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (43 1,       MPI_Gather(chunkArr, chunkSize, MPI_INT, arr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (53 0,  MPI_Wtime();) (55 1,   MPI_Finalize();)             MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Finalize();)             MPI_Abort(MPI_COMM_WORLD, 1);)             MPI_Abort(MPI_COMM_WORLD, 1);)         MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort(MPI_COMM_WORLD, 1);)       MPI_Abort", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 0,  MPI_Wtime();) (19 1,     MPI_Scatter(arr, chunkSize, MPI_INT, chunkArr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,     MPI_Barrier(MPI_COMM_WORLD);) (25 1,     MPI_Gather(countLocal, 2, MPI_INT, countGlobal, 2, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,     MPI_Barrier(MPI_COMM_WORLD);) (29 2,     MPI_Bcast(offsetGlobal, 2 * num_proc, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,         MPI_Send(&chunkArr[i], 1, MPI_INT, 0, offsetGlobal[rank + (bit * num_proc)]++, MPI_COMM_WORLD);) (40 1,         MPI_Recv(&output[i], 1, MPI_INT, -1, i, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,         MPI_Send(&chunkArr[i], 1, MPI_INT, 0, offsetGlobal[rank + (bit * num_proc)]++, MPI_COMM_WORLD);) (53 1,     MPI_Barrier(MPI_COMM_WORLD);) (55 0,  MPI_Wtime();) (62 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n20:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_get_parent(&parentcomm);) (8 1,     MPI_Comm_spawn(\"spawn_example\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (15 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_get_parent(&parentcomm);) (8 1,     MPI_Comm_spawn(\"a.out\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (21 1,   MPI_Bcast(&local_char, 10, MPI_CHAR, 0, MPI_COMM_WORLD);) (27 1,", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (53 1,   MPI_SEC_Alltoall(local_char, 10, (MPI_Datatype) 0x4c000101, local_array, 10, (MPI_Datatype) 0x4c000101, (MPI_Comm) 0x44000000);) (55 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (55 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,     MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (10 1,     MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (16 1,     MPI_Recv(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (18 1,     MPI_Send(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,   MPI_Info_create(&win_info);) (13 2,   MPI_Info_set(win_info, (char *) \"accumulate_ordering\", (char *) \"\");) (13 3,   MPI_Win_allocate(win_info, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (14 1,     MPI_Win_free(&win);) (15 1,     MPI_Info_free(&win_info);) (15 2,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,   MPI_Info_create(&win_info);) (9 2,   MPI_Info_set(win_info, (char *) \"no_local_load_store\", (char *) \"true\");) (10 1,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (13 1,     MPI_Win_free(&win);) (15 1,     MPI_Info_free(&win_info);) (15 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &my_size);) (9 1,     MPI_Reduce(&total, &recv_value, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (14 1,   MPI_Reduce(&recv_value, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 1,   MPI_Reduce(&my_value, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>unk7:   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &s_value);) (15 1,     MPI_Send(&s_value, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&r_value, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (24 1,         MPI_Abort(MPI_COMM_WORLD, 1);) (25 1,         MPI_Send(&s_value, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (25 2,         MPI_Recv(&r_value, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (27 1,       MPI_Recv(&r_value, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (27 2,       MPI_Send(&s_value, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,       MPI_Send(&r_value, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (22 1,       MPI_Recv(&r_value, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (24 1,         MPI_Send(&r_value, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>v4;\n89:   MPI_Init(&argc, &argv);) (23 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (42 1,     MPI_Send(xlocal[12 / size], 12, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD);) (43 1,     MPI_Recv(xlocal[0], 12, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, &status);) (47 1,     MPI_Send(xlocal[1], 12, MPI_DOUBLE, rank - 1, 1, MPI_COMM_WORLD);) (48 1,       MPI_Recv(xlocal[(12 / size) + 1], 12, MPI_DOUBLE, rank + 1, 1, MPI_COMM_WORLD, &status);) (61 1,     MPI_Allreduce(&diffnorm, &gdiffnorm, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (85 1,   MPI_Finalize();)", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (21 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (32 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (43 1,   MPI_Scatter(x[0], 12 * (12 / size), MPI_DOUBLE, xlocal[1], 12 * (12 / size), MPI_DOUBLE, 0, MPI_COMM_WORLD);) (48 1,       MPI_Sendrecv(xlocal[1], 12, MPI_DOUBLE, rank - 1, 1, xlocal[0], 12, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, &status);) (51 1,       MPI_Sendrecv(xlocal[12 / size], 12, MPI_DOUBLE, rank + 1, 0, xlocal[(12 / size) + 1], 12, MPI_DOUBLE, rank + 1, 1, MPI_COMM_WORLD, &status);) (67 1,     MPI_Allreduce(&diffnorm, &gdiffnorm, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (72 1,   MPI_Gather(xlocal[1], 12 * (12 / size), MPI_DOUBLE, x, 12 * (12 / size), MPI_DOUBLE, 0, MPI_COMM_WORLD);) (84 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4(my_rank, comm_sz, MPI_COMM_WORLD, 1);) (4(my_rank, comm_sz, MPI_COMM_WORLD, 2);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,     MPI_Allgather(&lis, 1, MPI_DOUBLE, &step, 1, MPI_DOUBLE, MPI_COMM_WORLD);) (25 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (34 1,       MPI_Send(&lis, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (25 1,         MPI_Send(&add, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD);) (28 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_split(MPI_COMM_WORLD, rank % 2, rank, &newcomm);) (4 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_split(MPI_COMM_WORLD, rank % 2, rank, &newcomm);) (4 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (32 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (32 4,   MPI_Barrier(MPI_COMM_WORLD);) (32 5,   MPI_Bcast(buf, messageLength, MPI_CHAR, 0, MPI_COMM_WORLD);) (32 6,   MPI_Barrier(MPI_COMM_WORLD);) (32 7,   MPI_Barrier(MPI_COMM_WORLD);) (32 8,   MPI_Barrier(MPI_COMM_WORLD);) (32 9,   MPI_Barrier(MPI_COMM_WORLD);) (32 10,   MPI_Bcast(buf, messageLength, MPI_CHAR, 0, MPI_COMM_WORLD);) (32 11,   MPI_Barrier(MPI_COMM_WORLD);) (32 12,   MPI_Barrier(MPI_COMM_WORLD);) (32 13,   MPI_Barrier(MPI_COMM_WORLD);) (32 14,   MPI_Barrier(MPI_COMM_WORLD);) (32 15,   MPI_Barrier(MPI_COMM_WORLD);) (32 16,   MPI_Bcast(buf, messageLength, MPI_CHAR, 0, MPI_COMM_", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Comm_group(MPI_COMM_WORLD, &local_group);) (10 2,   MPI_Group_incl(local_group, 2, ranks, &group_world);) (10 3,   MPI_Comm_create(MPI_COMM_WORLD, group_world, &comm_local);) (10 4,   MPI_Comm_rank(comm_local, &rank);) (10 5,   MPI_Comm_size(comm_local, &size);) (11 1,   MPI_Group_free(&group_world);) (11 2,   MPI_Group_free(&group_imbalanced);) (13 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &local_comm);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (8 4,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 5,   MPI_Comm_size(local_comm, &local_nprocs);) (8 6,   MPI_Comm_rank(local_comm, &local_rank);) (9 1,   MPI_Comm_free(&local_comm);) (9 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 2,   MPI_Reduce(locbuf, errs, 5, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18:   MPI_Init(0, 0);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (19 1,   MPI_Allreduce(&sum, &total, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (24 1,   MPI_Reduce(&sum, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (46 1,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(0, 0);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (27 1,       MPI_Send(&sum, 1, MPI_INT, my_rank + RIGHT, 0, MPI_COMM_WORLD);) (30 1,       MPI_Recv(&z, 1, MPI_INT, my_rank + LEFT, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 1,       MPI_Send(&sum, 1, MPI_INT, my_rank + r, 0, MPI_COMM_WORLD);) (38 1,       MPI_Recv(&z, 1, MPI_INT, my_rank - r, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (46 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 0,  MPI_Init(&argc, &argv);) (16 0,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 0,  MPI_Comm_rank(MPI_COMM_WORLD, &my_id);) (43 0,  MPI_Barrier(MPI_COMM_WORLD);) (52 0,  MPI_Scatter(a, size, MPI_DOUBLE, output1, size, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (52 0,  MPI_Scatter(a_global, size, MPI_DOUBLE, output2, size, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (53 0,  MPI_Reduce(&my_id, &my_global, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (53 0,  MPI_Reduce(&my_id, &my_global, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (53 0,  MPI_Reduce(&my_id, &my_global, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (54 0,  MPI_Finalize();)", "label": " (15 0,  MPI_Init(&argc, &argv);) (15 0,  MPI_Comm_rank(MPI_COMM_WORLD, &my_id);) (15 0,  MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (27 1,   MPI_Gather(&a, N, MPI_DOUBLE, a_global, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (45 1,   MPI_Gather(&a, N, MPI_DOUBLE, a_global, N, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (49 0,  MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &new_rank);) (11 1,     MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (16 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myFirstComm);) (17 1,     MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &myThirdComm);) (22 1,     MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &mySecondComm);) (25 1,     MPI_Comm_split(MPI_COMM_WORLD, 2, new_rank, &myThirdComm);) (29 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &mySecondComm);) (31 1,       MPI_Comm_split(MPI_COMM_WORLD, 1, new_rank, &myThirdComm);) (33 1,       MPI_Comm_split(MPI_COMM_WORLD, 2, new_rank, &mySecondComm);) (35 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,   MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (11 1,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 1, 1, &myFirstComm);) (11 2,     MPI_Comm_size(myFirstComm, &new_rank);) (16 1,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 0, 1, &myFirstComm);) (16 2,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 2, 12, &mySecondComm);) (16 3,     MPI_Comm_size(myFirstComm, &new_rank);) (17 1,     MPI_Comm_size(mySecondComm, &new_rank);) (22 1,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 1, 12, &myFirstComm);) (22 2,     MPI_Comm_size(myFirstComm, &new_rank);) (27 1,       MPI_Comm_free(&mySecondComm);) (31 1,       MPI_Comm_free(&myFirstComm);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>3:   MPI_Init(&argc, &argv);) (3 0,  MPI_Wtime();) (7 1,     MPI_Comm_rank(MPI_COMM_WORLD, &i);) (7 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Recv(&flag, 1, MPI_INT, i, -1, MPI_COMM_WORLD, &status);) (11 1,       MPI_Send(&flag, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (12 1,     MPI_Barrier(MPI_COMM_WORLD);) (12 0,  MPI_Wtime();) (15 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 0,  MPI_Wtime();) (6 0,  MPI_Iprobe(-1, -1, MPI_COMM_WORLD, &flag, &status);) (7 1,       MPI_Abort(MPI_COMM_WORLD, flag);) (8 1,       MPI_Abort(MPI_COMM_WORLD, rc);) (10 0,  MPI_Wtime();) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60:   MPI_Init(&argc, &argv);) (60 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (60 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (66 1,       MPI_Info_create(&info))!= 0)   {     if (rank == 0)       fatal_error(mpi_ret, 0, \"MPI_info_create.\\n\");) (52 1,   MPI_Info_free(&info);) (52 2,   MPI_Finalize();)         MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort(MPI_COMM_WORLD, 1);)           MPI_Abort", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (9 3,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (9 0,  MPI_Info_create(&info))!= 0)   {     if (rank == 0)       fatal_error(mpi_ret, 0, \"MPI_info_create.\\n\");) (52 1,   MPI_Info_free(&info);) (52 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (9 1,   MPI_Comm_split(MPI_COMM_WORLD, color, 0, &newcomm);) (9 2,   MPI_Comm_rank(newcomm, &th1);) (9 3,   MPI_Comm_size(newcomm, &th1);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (8 1,   MPI_Comm_split(MPI_COMM_WORLD, color, th, &newcomm);) (8 2,   MPI_Comm_rank(newcomm, &th1);) (9 1,   MPI_Comm_free(&newcomm);) (9 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (9 1,     MPI_Isend(buffer, 4, MPI_INT, 1, 0, MPI_COMM_WORLD, &mpi_request);) (14 1,     MPI_Irecv(buffer, 4, MPI_INT, 0, 0, MPI_COMM_WORLD, &mpi_request);) (16 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (9 1,     MPI_Isend(buffer, 4, MPI_INT, 1, 0, MPI_COMM_WORLD, &mpi_request);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (14 1,     MPI_Recv(buffer, 4, MPI_INT, 0, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>60:   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nodenum);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 99, MPI_COMM_WORLD);) (29 2,       MPI_Send(&niter, 1, MPI_LONG, 0, 99, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&recieved[i], nodenum, MPI_INT, -1, 99, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&recvniter[i], nodenum, MPI_LONG, -1, 99, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)         MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Bcast(&niter, 1, MPI_LONG, 0, MPI_COMM_WORLD);)       MPI_Bcast(&recieved, niter, MPI_LONG, 0, MPI_COMM_WORLD);)       MPI_Bcast(&finalcount, 1, MPI_LONG, 0, MPI_COMM_WORLD);)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &nodenum);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (29 2,       MPI_Send(&niter, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&recieved[i], nodenum, MPI_INT, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&recvniter[i], nodenum, MPI_LONG, -1, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[1] = MPI_Type_create_hindexed_block(16, 1, 14, MPI_BYTE, &dt);) (17 1,   MPI_Type_commit(&dt);) (17 2,   MPI_Type_commit(&dt);) (17 3,   MPI_File_open(MPI_COMM_WORLD, \"file.txt\", 1 | 8, MPI_INFO_NULL, &fh);) (17 4,   MPI_File_set_errhandler(fh, MPI_ERRORS_RETURN);) (17 0,  MPI_File_open(MPI_COMM_WORLD, filename, 8 | 1, MPI_INFO_NULL, &fh);) (20 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (21 0,  MPI_File_set_view(fh, -1, MPI_BYTE, dt, \"native\", MPI_INFO_NULL);) (21 0,  MPI_File_iwrite_at_all(fh, 0, buf, 1024, MPI_BYTE, &st);) (25 1,   MPI_Wait(&st, &st);) (25 0,  MPI_File_close(&fh);) (28 1,   MPI_Allreduce(&errs, &errs, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (30 1,   MPI_Type_free(&dt);) (30 2,   MPI_Type_free(&dt);) (30 3,   MPI_Finalize();)", "label": " (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 0,  MPI_File_delete(filename, MPI_INFO_NULL);) (24 1,   MPI_Barrier(MPI_COMM_WORLD);) (24 0,  MPI_File_open(MPI_COMM_WORLD, filename, (4 | 1) | 32, MPI_INFO_NULL, &fh);) (28 0,  MPI_File_write(fh, buf, buflen, MPI_CHAR, &st);) (30 0,  MPI_File_write(fh, buf, buflen / 2, MPI_CHAR, &st);) (33 0,  MPI_File_close(&fh);) (35 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 0,  MPI_File_open(MPI_COMM_WORLD, filename, 2 | 32, MPI_INFO_NULL, &fh);) (38 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (40 1,   MPI_Type_contiguous(buflen, MPI_CHAR, &dt);) (41 1,   MPI_Type_create_resized(dt, 0, viewsize, &dt2);) (41 2,   MPI_Type_commit(&dt2);) (41 0,  MPI_File_set_view(fh, disp, MPI_CHAR, dt2, \"native\", MPI_INFO_NULL);) (44 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (45 0,  MPI_File_iread(fh, buf, buflen, MPI_CHAR, &rq);) (47 1,   MPI_Wait(&rq, &st);) (47 2,   MPI_Get_count(&st, MPI_CHAR, &outlen);) (75 0,  MPI_File_close(&fh);) (77 1,   MPI_Barrier(MPI_COMM_WORLD);) (79 0,  MPI_File_delete(filename, MPI_INFO_NULL);) (82 1,   MPI_Allreduce((void *) 1, &errs, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (89 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(2 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,   MPI_Type_create_struct(4, blocks, disps, types, &newtype);) (11 2,   MPI_Type_commit(&newtype);) (11 3,   MPI_Bcast(&s, 1, newtype, 0, MPI_COMM_WORLD);) (11 4,   MPI_Type_free(&newtype);) (11 5,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Get_address(&s.c, &disps[0]);) (10 2,   MPI_Get_address(&s.i, &disps[1]);) (10 3,   MPI_Get_address(&s.f, &disps[2]);) (10 4,   MPI_Get_address(&s.d, &disps[3]);) (15 1,   MPI_Type_create_struct(4, blocks, disps, types, &newtype);) (15 2,   MPI_Type_commit(&newtype);) (22 1,   MPI_Bcast(&s, 1, newtype, 0, MPI_COMM_WORLD);) (24 1,   MPI_Type_free(&newtype);) (24 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 3,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (10 4,   MPI_Get_version(&ProcessorName, &MPI_VERSION_NULL);) (10 5,   MPI_Comm_get_parent(&interComm);) (10 6,   MPI_Intercomm_merge(interComm, 0, &intraComm);) (10 7,   MPI_Comm_size(intraComm, &NumberProcesses);) (10 8,   MPI_Comm_rank(intraComm, &Rank);) (10 9,   MPI_Comm_get_parent(&interComm);) (18 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,   MPI_Bcast(&Flag, 1, MPI_INT, 0, MPI_COMM_WORLD);) (19 2,   MPI_Comm_free(&intraComm);) (19 3,   MPI_Comm_free(&interComm);) (19 4,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_UNIVERSE_SIZE, &UniverseSize, &Flag);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &NumberProcesses);) (10 4,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (10 5,   MPI_Get_processor_name(ProcessorName, &ProcessorNameLength);) (20 0,  MPI_Comm_spawn(\"SpawnChild\", (char **) 0, (*UniverseSize) - 1, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &InterComm, ErrorCodes);) (22 1,       MPI_Intercomm_merge(InterComm, 0, &IntraComm);) (23 1,       MPI_Comm_size(IntraComm, &NumberProcesses);) (23 2,       MPI_Comm_rank(IntraComm, &ID);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (7 1,   MPI_Win_free(&win);) (7 2,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (7 1,   MPI_Win_free(&win);) (7 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (12 1,     MPI_Send(&myComm, 1, MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (17 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (19 1,       MPI_Send(&myComm, 1, MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (24 1,     MPI_Comm_split(MPI_COMM_WORLD, 0, rank, &myComm);) (25 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &myComm);) (10 1,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 1, 1, &myFirstComm);) (10 2,     MPI_Comm_rank(myComm, &rank);) (12 1,       MPI_Send(&data, 1, MPI_INT, 0, 1, myFirstComm);) (17 1,     MPI_Intercomm_create(myComm, 0, MPI_COMM_WORLD, 0, 1, &myFirstComm);) (17 2,     MPI_Comm_rank(myComm, &rank);) (19 1,       MPI_Recv(&data, 1, MPI_INT, 0, 1, myFirstComm, MPI_STATUS_IGNORE);) (26 1,     MPI_Comm_free(&myFirstComm);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(&f, 1, MPI_FLOAT, 1, 0, MPI_COMM_WORLD);) (9 1,   MPI_Recv(&f, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, &status);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Bcast(&f, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 4,   MPI_Win_allocate((sizeof(double)) * OP_SIZE_MAX, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (6 5,   MPI_Win_free(&win);) (42 1,     MPI_Win_free(&win);) (42 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (26 1,   MPI_Win_allocate((sizeof(double)) * OP_SIZE_MAX, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (32 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,     MPI_Barrier(MPI_COMM_WORLD);) (40 1,     MPI_Win_free(&win);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (14 0,  MPI_Wtime();) (15 1,   MPI_Scatter(arr, chunkSize, MPI_INT, chunkArr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (15 0,  MPI_Wtime();) (33 1,   MPI_Gather(chunkArr, chunkSize, MPI_INT, arr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (33 0,  MPI_Wtime();) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (33 0,  MPI_Wtime();) (33 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 0,  MPI_Wtime();) (19 1,     MPI_Scatter(arr, chunkSize, MPI_INT, chunkArr, chunkSize, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,     MPI_Barrier(MPI_COMM_WORLD);) (25 1,     MPI_Reduce(countLocal, countGlobal, 2, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (31 1,     MPI_Barrier(MPI_COMM_WORLD);) (33 0,  MPI_Wtime();) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &buf);) (9 1,     MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (13 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (12 1,   MPI_SEC_Bcast(&buf, 1, (MPI_Datatype) 0x4c000405, root, (MPI_Comm) 0x44000000);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (17 1,   MPI_Bcast(&end, 1, MPI_INT, 0, MPI_COMM_WORLD);) (18 1,   MPI_Bcast(&step, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 1,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,         MPI_Send(&send, 1, MPI_DOUBLE, my_rank + 1, 0, MPI_COMM_WORLD);) (40 1,         MPI_Send(&receive_res, 1, MPI_DOUBLE, my_rank + 1, 0, MPI_COMM_WORLD);) (44 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (48 1,         MPI_Send(&send, 1, MPI_DOUBLE, my_rank - 1, 0, MPI_COMM_WORLD);) (51 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (66 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (27 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + (current_sz / 2), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, current_sz - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (34 1,         MPI_Send(&add, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (38 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + (current_sz / 2), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (44 1,         MPI_Send(&add, 1, MPI_DOUBLE, my_rank - (current_sz / 2), 0, MPI_COMM_WORLD);) (51 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + (current_sz / 2), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (57 1,         MPI_Send(&add, 1, MPI_DOUBLE, my_rank - (current_sz / 2), 0, MPI_COMM_WORLD);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 4,   MPI_Get_processor_name(name, &namelen);) (10 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 4,   MPI_Get_processor_name(name, &namelen);) (10 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ide_of_life_exchange(0, 0);) (10 1,   MPI_Init(0, 0);) (11 1,     MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 2,     MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (32 1,     MPI_Scatter(local_int, 4, MPI_FLOAT, local_int, 4, MPI_FLOAT, 0, MPI_COMM_WORLD);) (41 1,       MPI_Send(&local_int, 1, MPI_FLOAT, i, 0, MPI_COMM_WORLD);) (52 1,     MPI_Recv(&local_int, 1, MPI_FLOAT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (67 1,     MPI_Scatter(local_int, 4, MPI_FLOAT, local_int, 4, MPI_FLOAT, 0, MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (69 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c00040a, local_array, 4, (MPI_Datatype) 0x4c00040a, (MPI_Comm) 0x44000000);) (71 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (71 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (12 1,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, -1, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (8 2,     MPI_Wait(&mpi_request, &mpi_status);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (22 1,     MPI_Win_create(buf, 128 * 1024, sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (24 1,     MPI_Win_create((void *) 0, 0, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (25 1,   MPI_Win_fence(0, win);) (25 2,   MPI_Win_fence(0, win);) (26 1,     MPI_Win_fence(0, win);) (26 2,     MPI_Win_fence(0, win);) (27 1,   MPI_Win_free(&win);) (27 2,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (13 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (16 1,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (18 1,     MPI_Win_create(buf, 128 * 1024, sizeof(int), (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &win);) (19 1,     MPI_Win_create((void *) 0, 0, 1, (MPI_Info) 0x1c000000, (MPI_Comm) 0x44000000, &win);) (19 2,   MPI_Win_fence(0, win);) (22 1,       MPI_Get(buf, (128 * 1024) / (sizeof(int)), (MPI_Datatype) 0x4c000405, 0, 0, (128 * 1024) / (sizeof(int)), (MPI_Datatype) 0x4c000405, win);) (24 1,   MPI_Win_fence(0, win);) (24 2,   MPI_Win_free(&win);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (12 2,   MPI_Bcast(&ncols, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 3,   MPI_Bcast(&nrows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 4,   MPI_Bcast(&matrix[0][0], send_counts[world_rank] * send_offset[world_rank], MPI_DOUBLE, 0, MPI_COMM_WORLD);) (15 1,     MPI_Finalize();) (35 1,     MPI_Finalize();) (41 1,       MPI_Send(send_offset, send_counts[world_rank], MPI_DOUBLE, iters, 0, MPI_COMM_WORLD);) (41 2,       MPI", "label": " (9 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (56 1,     MPI_Scatterv(global_matrix, send_counts, send_offset, MPI_DOUBLE, from, send_counts[world_rank], MPI_DOUBLE, 0, MPI_COMM_WORLD);) (68 1,     MPI_Gatherv(to, rcv_counts[world_rank], MPI_DOUBLE, global_matrix, rcv_counts, rcv_offset, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (68 2,     MPI_Allreduce(&local_continue, &global_continue, 1, MPI_INTEGER, MPI_SUM, MPI_COMM_WORLD);) (96 1,   MPI_Barrier(MPI_COMM_WORLD);) (96 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>25 1,   MPI_Init(&argc, &argv);) (25 0,  MPI_Wtime();) (25 1,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_p);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (25 3,   MPI_Bcast(&seed, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 0,  MPI_Wtime();) (38 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_p);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (23 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (23 1,   MPI_Scatter(v, n / mpi_p, MPI_DOUBLE, temp, n / mpi_p, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (24 1,   MPI_Gather(temp, n / mpi_p, MPI_DOUBLE, v, n / mpi_p, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (24 0,  MPI_Wtime();) (29 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_3d MPI_Init(&argc, &argv);) (16 1,   MPI_Get_address(&buf->i, &displacements[0]);) (16 2,   MPI_Get_address(&buf->d, &displacements[1]);) (16 3,   MPI_Get_address(&buf->c, &displacements[2]);) (16 4,   MPI_Get_address(&buf->d, &displacements[3]);) (16 5,   MPI_Get_address(&buf->c, &displacements[4]);) (16 6,   MPI_Get_address(&buf->d, &displacements[5]);) (16 7,   MPI_Get_address(&buf->d, &displacements[6]);) (16 8,   MPI_Get_address(&buf->d, &displacements[7]);) (16 9,   MPI_Get_address(&buf->d, &displacements[8]);) (16 10,   MPI_Get_address(&buf->d, &displacements[9]);) (16 11,   MPI_Get_address(&buf->c, &displacements[10]);) (16 12,   MPI_Get_address(&buf->d, &displacements[11]);) (16 13,   MPI_Get_address(&buf->c, &displacements[12]);) (16 14,   MPI_Get_address(&buf->d, &displacements[13]);) (16 15,   MPI_Get_address(&buf->d, &displacements[14]);) (16 16,   MPI_Get_address(&buf->d, &displacements[15]);) (16 17,   MPI_Get_address(&buf->c, &displacements[0]);) (16 18,   MPI_Get_address(&buf->d, &displacements[1]);) (16 19,   MPI_Get_address(&buf->d, &displacements[2]);) (16 20,   MPI_Get_address(&buf->c, &displ", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->ui, displacements + 1);) (8 3,   MPI_Get_address(&buf->c, displacements + 2);) (8 4,   MPI_Get_address(&buf->d, displacements + 3);) (16 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (16 2,   MPI_Type_commit(&new_t);) (22 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (26 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,   MPI_Type_free(&new_t);) (28 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (20 1,   MPI_SEC_Bcast(buf, 10, (MPI_Datatype) 0x4c000405, root, (MPI_Comm) 0x44000000);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,       MPI_Isend(data, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &req);) (16 2,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (19 1,       MPI_Irecv(data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &req);) (19 2,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MPI_STATUS_IGNORE);)       MPI_Wait(&req, MP", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Bcast(&iters, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 1,       MPI_Isend(data, 1, MPI_INT, rank + half, 123, MPI_COMM_WORLD, &req);) (16 2,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (19 1,       MPI_Irecv(data, 1, MPI_INT, rank - half, 123, MPI_COMM_WORLD, &req);) (19 2,       MPI_Wait(&req, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (20 4,   MPI_Get_processor_name(name, &name_len);) (28 0,  MPI_T_init_thread(MPI_THREAD_SINGLE, &thread_support);) (29 1,       MPI_Abort(MPI_COMM_WORLD, err);) (33 1,     MPI_Abort(MPI_COMM_WORLD, err);) (37 1,       MPI_Abort(MPI_COMM_WORLD, err);) (42 1,       MPI_Abort(MPI_COMM_WORLD, err);) (47 1,       MPI_Abort(MPI_COMM_WORLD, err);) (50 1,       MPI_Abort(MPI_COMM_WORLD, err);) (52 1,       MPI_Abort(", "label": " (20 1,   MPI_Init(0, 0);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (28 0,  MPI_T_init_thread(MPI_THREAD_SINGLE, &thread_support);) (29 1,       MPI_Abort(MPI_COMM_WORLD, err);) (33 0,  MPI_T_pvar_get_num(&num);) (34 1,       MPI_Abort(MPI_COMM_WORLD, err);) (42 0,  MPI_T_pvar_get_info(i, name, &name_len, &verb, &varclass, &dtype, &enumtype, desc, &desc_len, &bind, &readonly, &continuous, &atomic);) (43 1,         MPI_Abort(MPI_COMM_WORLD, err);) (54 1,     MPI_T_pvar_session_create(&session);) (54 2,     MPI_T_pvar_handle_alloc(session, uqsize_idx, 0, &uqsize_handle, &count);) (57 1,     MPI_T_pvar_handle_free(session, &uqsize_handle);) (57 2,     MPI_T_pvar_session_free(&session);) (65 0,  MPI_T_finalize();) (66 1,       MPI_Abort(MPI_COMM_WORLD, err);) (68 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 4,   MPI_Type_contiguous(3, MPI_INT, &testtype);) (4 5,   MPI_Type_commit(&testtype);) (4 6,   MPI_Type_free(&testtype);) (4 7,   MPI_Finalize();)         MPI_Send(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Type_free(&testtype);) (4 8,   MPI_Finalize();)         MPI_Recv(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Send(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD);)         MPI_Type_free(&testtype);) (3 1,   MPI_Finalize();)         MPI_Send(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Type_free(&testtype);) (3 2,   MPI_Finalize();)             MPI_Send(&testtype, 1, testtype, 0, 0, MPI_COMM_WORLD", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPIDU_Datatype_debug(testtype);) (3 2,   MPI_Type_free(&testtype);) (3 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada();\n64:   dspls[myid] = dspls[myid] + 1;\n65:   counts[myid] = dspls[myid] + counts[myid];\n66:   dspls[myid] = dspls[myid] + counts[myid];\n67:   counts[myid] = dspls[myid] + dspls[myid];\n68:   dspls[myid] = dspls[myid] + dspls[myid];\n69:   counts[myid] = dspls[myid] + counts[myid];\n70:   dspls[myid] = dspls[myid] + counts[myid];\n71:   counts[myid] = dspls[myid] + counts[myid];\n72:   dspls[myid] = dspls[myid] + counts[myid];\n73:   counts[myid] = dspls[myid] + counts[myid];\n74:   dspls[myid] = dspls[myid] + counts[myid];\n75:   counts[myid] = dspls[myid] + counts[myid];\n76:   dspls[myid] = dspls[myid] + counts[myid];\n77:   counts[myid] = dspls[myid] + counts[myid];\n78:   dspls[myid] = dspls[myid] + counts[myid];\n79:   counts[myid] = dspls[myid] + counts[myid];\n80:   if (myid == 0)\n81:   {\n82:     printf(\"v_glb on %d >> \", myid);\n83:     for (i = 0; i < nglb; i++)\n84:     {\n85:       printf(\"  %2.0f\", v_glb[i]);\n86:       printf(\"  %2.0", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (44 1,   MPI_Buffer_attach(temp, 8 * nglb);) (46 1,     MPI_Bsend(v_lcl, counts[myid], MPI_DOUBLE, ip, 0, MPI_COMM_WORLD);) (50 1,     MPI_Recv(&v_glb[dspls[ip]], counts[ip], MPI_DOUBLE, ip, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (52 1,   MPI_Buffer_detach(&temp, &bsize);) (59 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 5, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(2, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Win_allocate((sizeof(double)) * 5, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (21 1,     MPI_Win_free(&win);) (23 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Win_allocate((sizeof(double)) * nprocs, sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (26 1,   MPI_Barrier(MPI_COMM_WORLD);) (30 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 1,     MPI_Win_free(&win);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (13 3,     MPI_Status_free(&stat);) (13 4,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 5,     MPI_Wait(&req, &stat);) (13 6,     MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_NULL, &req);) (12 2,     MPI_Wait(&req, &stat);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(greeting, MAX_STRING, MPI_CHAR, q, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Barrier(MPI_COMM_WORLD);) (7 2,   MPI_Bcast(&lis, sizeof(lis), MPI_DOUBLE, 0, MPI_COMM_WORLD);) (7 3,   MPI_Bcast(&lres, sizeof(lres), MPI_DOUBLE, 0, MPI_COMM_WORLD);) (11 1,     MPI_Barrier(MPI_COMM_WORLD);) (12 1,     MPI_Allreduce(&send, &receive_res, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (12 2,     MPI_Barrier(MPI_COMM_WORLD);) (12 3,     MPI_Allreduce(&send, &receive_res, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (12 4,     MPI_Barrier(MPI_COMM_WORLD);) (12 5,     MPI_Allreduce(&send, &receive_res, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (12 6,     MPI_Barrier(MPI_COMM_WORLD);) (12 7,     MPI_Allreduce(&send, &receive_res, 1, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);) (12 8,     MPI_Barrier(MPI_COMM_WORLD);) (12 9,     MPI_Barrier(MPI_COMM_WORLD);) (12 10,", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (28 1,           MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,           MPI_Recv(&receive_res_2, 1, MPI_DOUBLE, step * (current_sz - 1), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (36 1,           MPI_Send(&add, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (41 1,           MPI_Send(&add, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD);) (44 1,           MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (60 1,           MPI_Send(&add, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD);) (63 1,           MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (79 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(info, &my_info);) (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (13 4,   MPI_Type_contiguous(2, MPI_INT, &jobInfo);) (13 5,   MPI_Type_commit(&jobInfo);) (13 6,   MPI_Type_commit(&jobInfo);) (13 7,   MPI_Type_commit(&jobInfo);) (13 8,   MPI_Type_commit(&jobInfo);) (13 0,  MPI_Wtime();) (36 1,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (36 2,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (38 1,   MPI_Type_size(jobInfo, &result->size);) (38 2,   MPI_Type_size(jobInfo, &result->size);) (44 1,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (44 2,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (44 3,   MPI_Type_size(jobInfo, &result->size);) (44 4,   MPI_Type_size(jobInfo, &result->size);) (44 5,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (44 6,   MPI_Type_get_extent(jobInfo, &result->lb, &result->extent);) (44 7,   MPI_Type_size(jobInfo, &result->size);) (47 1,   MPI_Type_free(&jobInfo);) (47 2,   MPI_Type", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 1,   MPI_Type_create_struct(nitems, blocklengths, disp, types, &wordInfo);) (11 1,   MPI_Type_contiguous(4, MPI_INT, &jobInfo);) (11 2,   MPI_Type_commit(&jobInfo);) (11 3,   MPI_Type_commit(&wordInfo);) (14 1,   MPI_Bcast(&numFile, 1, MPI_INT, 0, MPI_COMM_WORLD);) (14 0,  MPI_Wtime();) (37 1,   MPI_Gather(nWordsFile, size, MPI_INT, totWordsFile, size, MPI_INT, 0, MPI_COMM_WORLD);) (49 1,   MPI_Bcast(&totWords, 1, MPI_INT, 0, MPI_COMM_WORLD);) (49 2,   MPI_Scatter(listJob, 1, jobInfo, &myJob, 1, jobInfo, 0, MPI_COMM_WORLD);) (55 1,   MPI_Gather(listWords, size, wordInfo, result, size, wordInfo, 0, MPI_COMM_WORLD);) (56 0,  MPI_Wtime();) (62 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (28 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (57 1,   MPI_Bcast(&matrix, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD", "label": " (28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (28 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (12 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (31 1,       MPI_Send(&S_0, 1, MPI_LONG_LONG_INT, i, 0, MPI_COMM_WORLD);) (31 2,       MPI_Send(&S_0, 1, MPI_LONG_LONG_INT, i, 0, MPI_COMM_WORLD);) (36 1,     MPI_Recv(&S_0, 1, MPI_LONG_LONG_INT, 0, 0, MPI_COMM_WORLD, &Status);) (36 2,     MPI_Recv(&S_0, 1, MPI_LONG_LONG_INT, 0, 0, MPI_COMM_WORLD, &Status);) (38 1,     MPI_Send(&result, 1, MPI_LONG_LONG_INT, 0, 0, MPI_COMM_WORLD);) (44 1,       MPI_Recv(&S_0, 1, MPI_LONG_LONG_INT, i, 0", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (26 1,         MPI_Send(&array[((i - 1) * step) + (i - 1)], step + 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (27 1,         MPI_Send(&array[((i - 1) * step) + rest], step, MPI_INT, i, 1, MPI_COMM_WORLD);) (31 1,       MPI_Recv((void *) (&cur_res), 1, MPI_LONG_LONG_INT, i, 0, MPI_COMM_WORLD, &Status);) (38 1,     MPI_Finalize();) (46 1,       MPI_Recv((void *) (&array), step + 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &Status);) (49 1,       MPI_Recv((void *) (&array), step, MPI_INT, 0, 1, MPI_COMM_WORLD, &Status);) (52 1,     MPI_Send(&result, 1, MPI_LONG_LONG_INT, 0, 0, MPI_COMM_WORLD);) (52 2,     MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_Free(sendbuf);) (18 1,   MPI_Init(0, 0);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (21 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (37 1,         MPI_Send(sendbuf, 4, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (37 2,         MPI_Recv(recvbuf, 4, MPI_CHAR, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 0,  MPI_Wtime();) (41 1,         MPI_Recv(recvbuf, 4, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 2,         MPI_Send(sendbuf, 4, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (45 0,  MPI_Wtime();) (54 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (13 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (13 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (21 1,     MPI_Abort((MPI_Comm) 0x44000000, 1);) (37 0,  MPI_Wtime();) (40 1,         MPI_SEC_Send(sendbuf, datasz, (MPI_Datatype) 0x4c000101, 1, 0, (MPI_Comm) 0x44000000);) (40 2,         MPI_SEC_Recv(recvbuf, datasz, (MPI_Datatype) 0x4c000101, 1, 1, (MPI_Comm) 0x44000000, (MPI_Status *) 1);) (44 1,         MPI_SEC_Recv(recvbuf, datasz, (MPI_Datatype) 0x4c000101, 0, 0, (MPI_Comm) 0x44000000, (MPI_Status *) 1);) (44 2,         MPI_SEC_Send(sendbuf, datasz, (MPI_Datatype) 0x4c000101, 0, 1, (MPI_Comm) 0x44000000);) (47 0,  MPI_Wtime();) (58 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arquivo(id_proceso, datos);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id_proceso);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &cantidad);) (14 1,       MPI_Send(&dato, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 2,       MPI_Recv(&dato, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &estado);) (20 1,     MPI_Recv(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &estado);) (22 1,     MPI_Send(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 2,     MPI_Recv(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &estado);) (23 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id_proceso);) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 1,       MPI_Send(datos, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (14 2,       MPI_Recv(&plaza, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &estado);) (18 1,     MPI_Send(datos, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (19 1,   MPI_Bcast(buf, 5, MPI_INT, root, MPI_COMM_WORLD);) (21 2,   MPI_Bcast(buf, 2, MPI_INT, root, MPI_COMM_WORLD);) (21 3,   MPI_Bcast(buf, 5, MPI_INT, root, MPI_COMM_WORLD);) (21 4,   MPI_Bcast(buf, 6, MPI_INT, root, MPI_COMM_WORLD);) (21 5,   MPI_Bcast(buf, 7, MPI_INT, root, MPI_COMM_WORLD);) (21 6,   MPI_Bcast(buf, 8, MPI_INT, root, MPI_COMM_WORLD);) (21 7,   MPI_Bcast(buf, 2, MPI_INT, root, MPI_COMM_WORLD);) (21 8,   MPI_Bcast(buf, 3, MPI_INT, root, MPI_COMM_WORLD);) (21 9,   MPI_Bcast(buf, 6, MPI_INT, root, MPI_COMM_WORLD);) (21 10,   MPI_Bcast(buf, 5, MPI_INT, root, MPI_COMM_WORLD);) (21 11,   MPI_Bcast(buf, 6, MPI_INT, root, MPI_COMM_WORLD);) (21 12,   MPI_Bcast(buf, 7, MPI_INT, root, MPI_COMM_WORLD);) (21 13,   MPI_Bcast(buf, 2, MPI_INT, root", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (10 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (20 1,   MPI_SEC_Bcast(buf, 10, (MPI_Datatype) 0x4c000405, root, (MPI_Comm) 0x44000000);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 1,   MPI_Scatter(data, 3, MPI_INT, &size, MPI_INT, 0, MPI_COMM_WORLD);) (37 1,   MPI_Gather(result, 3, MPI_INT, data, 3, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,   MPI_Finalize();)             MPI_Finalize", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,       MPI_Send(data, 3, MPI_INT, rank + 1, 123, MPI_COMM_WORLD);) (14 1,       MPI_Recv(data, 3, MPI_INT, rank - 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (31 1,     MPI_Abort(MPI_COMM_WORLD, me);) (35 0,  MPI_Wtime();) (69 1,   MPI_Barrier(MPI_COMM_WORLD);) (69 2,   MPI_Finalize();)       MPI_Finalize();) (74 1,   MPI_Barrier(MPI_COMM_WORLD);) (76 1,   MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();)       MPI_Finalize();", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (35 1,   MPI_Bcast(&flag, 1, MPI_INT, 0, MPI_COMM_WORLD);) (37 1,     MPI_Printf(me, \"MPI process started!\\n\\n\");) (64 1,       MPI_Printf(me, \"A = \\n\");) (65 1,       MPI_Printf(me, \"v =\\n\");) (69 1,   MPI_Bcast(&n, 1, MPI_INT, master, MPI_COMM_WORLD);) (69 2,   MPI_Bcast(&local_n, 1, MPI_INT, master, MPI_COMM_WORLD);) (73 1,   MPI_Bcast(&v[0], n, MPI_DOUBLE, master, MPI_COMM_WORLD);) (76 1,   MPI_Scatter(A, num, MPI_DOUBLE, localA, num, MPI_DOUBLE, master, MPI_COMM_WORLD);) (76 2,   MPI_Barrier(MPI_COMM_WORLD);) (76 0,  MPI_Wtime();) (78 1,     MPI_Printf(me, \"localA:\\n\");) (82 1,   MPI_Gather(local_w, local_n, MPI_DOUBLE, w, local_n, MPI_DOUBLE, master, MPI_COMM_WORLD);) (82 2,   MPI_Barrier(MPI_COMM_WORLD);) (83 1,   MPI_Reduce(&T_fine, &T_max, 1, MPI_DOUBLE, MPI_MAX, master, MPI_COMM_WORLD);) (87 1,       MPI_Printf(me, \"w =\\n\");) (95 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(myJob, \"start:%g, end:%g\\n\", start, end);) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();) (myJob.show();", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 0,  MPI_Wtime();) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &group);) (21 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>andMaster(myrank, worldSize, iterations, numBlocks, threads);) (48 1,   MPI_Barrier(MPI_COMM_WORLD);) (48 0,  MPI_Wtime();) (55 1,   MPI_Barrier(MPI_COMM_WORLD);) (55 0,  MPI_Wtime();) (57 1,   MPI_Barrier(MPI_COMM_WORLD);) (57 0,  MPI_Wtime();) (93 1,   MPI_Finalize();)", "label": " (54 1,   MPI_Init(&argc, &argv);) (54 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (54 3,   MPI_Comm_size(MPI_COMM_WORLD, &numranks);) (56 0,  MPI_Wtime();) (67 1,     MPI_Irecv(top_ghost_row, worldSize, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), ((myrank + numranks) - 1) % numranks, 0, MPI_COMM_WORLD, &recvReq[0]);) (67 2,     MPI_Irecv(bottom_ghost_row, worldSize, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), (myrank + 1) % numranks, 1, MPI_COMM_WORLD, &recvReq[1]);) (67 3,     MPI_Isend(&g_data[0], worldSize, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), ((myrank + numranks) - 1) % numranks, 1, MPI_COMM_WORLD, &sendReq[0]);) (67 4,     MPI_Isend(&g_data[worldSize * (worldSize - 1)], worldSize, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), (myrank + 1) % numranks, 0, MPI_COMM_WORLD, &sendReq[1]);) (67 5,     MPI_Wait(&recvReq[0], &status);) (67 6,     MPI_Wait(&recvReq[1], &status);) (67 7,     MPI_Wait(&sendReq[0], &status);) (67 8,     MPI_Wait(&recvReq[1], &status);) (72 0,  MPI_Wtime();) (90 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, -1, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 2 * 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 0,  MPI_Init(&argc, &argv);) (19 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (31 1,   MPI_Type_extent(MPI_INT, &extent);) (35 1,   MPI_Type_struct(1, array_of_blocklengths, array_of_displacements, array_of_types, &ftype);) (35 2,   MPI_Type_commit(&ftype);) (35 3,   MPI_Type_size(ftype, &size);) (35 4,   MPI_Type_get_extent(ftype, &lb, &extent);) (35 5,   MPI_Type_get_extent(ftype, &lb, &extent);) (35 6,   MPI_Type_size(ftype, &size);) (35 7,   MPI_Type_get_extent(ftype, &lb, &extent);) (35 8,   MPI_Type_get_", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (25 1,   MPI_Type_create_subarray(1, array_of_sizes, array_of_subsizes, array_of_starts, 0, MPI_INT, &bodytype);) (25 2,   MPI_Type_commit(&bodytype);) (25 3,   MPI_Type_ub(bodytype, &ub);) (25 4,   MPI_Type_size(bodytype, &typesize);) (25 5,   MPI_Type_get_extent(bodytype, &lb, &extent);) (35 0,  MPI_Type_create_struct(2, array_of_blocklengths, array_of_displacements, array_of_types, &ftype);) (39 1,     MPI_Error_string(err, errorString, &errorStringLen);) (41 0,  MPI_Type_commit(&ftype);) (45 1,     MPI_Error_string(err, errorString, &errorStringLen);) (47 1,   MPI_Type_ub(ftype, &ub);) (47 2,   MPI_Type_size(ftype, &typesize);) (47 3,   MPI_Type_get_extent(ftype, &lb, &extent);) (47 4,   MPI_Type_get_true_extent(ftype, &true_lb, &true_extent);) (55 0,  MPI_Pack(inbuf, 3, ftype, outbuf, outsize, &position, MPI_COMM_SELF);) (59 1,     MPI_Error_string(err, errorString, &errorStringLen);) (69 0,  MPI_Type_free(&ftype);) (73 1,     MPI_Error_string(err, errorString, &errorStringLen);) (75 0,  MPI_Type_free(&bodytype);) (79 1,     MPI_Error_string(err, errorString, &errorStringLen);) (81 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &numberOfProcs);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (34 1,   MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 2,   MPI_Bcast(&numberOfPoints, 1, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Gather(&myRectangles[0], 1, MPI_DOUBLE, gatherArray, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (38 2,   MPI_Gather(&myRectangles[1], 1, MPI_DOUBLE, gatherArray, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (26 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (31 1,   MPI_Scatter(rectangles, 3, MPI_DOUBLE, myRectangle, 3, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (31 2,   MPI_Bcast(gridDimension, 2, MPI_INT, 0, MPI_COMM_WORLD);) (39 1,   MPI_Gather(readyToSendToGatherFinish, 3, MPI_DOUBLE, gatherArray, 3, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Isend(data, 3, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD, &reqs[0]);) (13 2,     MPI_Irecv(data, 3, MPI_INT, ((rank + size) - 1) % size, 0, MPI_COMM_WORLD, &reqs[1]);) (13 3,     MPI_Waitall(2, reqs, MPI_STATUS_IGNORE);) (18 1,     MPI_Irecv(data, 3, MPI_INT, (rank + 1) % size, 0, MPI_COMM_WORLD, &reqs[0]);) (18 2,     MPI_Waitall(2, reqs, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Isend(data, 3, MPI_INT, rank + 1, 123, MPI_COMM_WORLD, &reqs[i]);) (13 1,     MPI_Waitany(N, reqs, &idx, MPI_STATUS_IGNORE);) (13 2,     MPI_Waitall(N, reqs, MPI_STATUS_IGNORE);) (17 1,       MPI_Recv(data, 3, MPI_INT, rank - 1, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(world_rank, procs, MPI_COMM_WORLD, &request);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (32 1,       MPI_Irecv(&recbuff[lopv], 1, MPI_INT, lopv, 0, MPI_COMM_WORLD, &request);) (32 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (32 3,       MPI_Irecv(&recbuff[lopv], 1, MPI_INT, lopv, 0, MPI_COMM_WORLD, &request);) (32 4,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (47 1,     MPI_Isend(&temparr[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (47 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (47 3,     MPI_Isend(&temparr[t], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (47 4,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (54 1,     MPI_Irecv(&recbuff[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (54 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (54 3,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (55 1,     MPI_Irecv(&recbuff[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (55 2,", "label": " (2 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (18 1,     MPI_Irecv(recbuff, distib[world_rank], MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (19 1,     MPI_Send(sendarr, distib[world_rank], MPI_INT, 0, 0, MPI_COMM_WORLD);) (31 1,       MPI_Recv(recbuff, distib[j], MPI_INT, j, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (54 1,     MPI_Send(temparr, distib[world_rank], MPI_INT, 0, 0, MPI_COMM_WORLD);) (55 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>icainit(rank2coor, 0, coor2rank(p, x, y, z, &north_rank), &south_rank, &east_rank);) (14 1,       MPI_Finalize();) (20 1,   MPI_Comm_rank(comm, &mpi_rank);) (20 2,   MPI_Comm_size(comm, &mpi_size);) (23 1,   MPI_Bcast(&niters, 1, 2, 0, comm);) (23 2,   MPI_Bcast(&p, 1, 2, 0, comm);) (23 3,   MPI_Bcast(&bx, 1, 2, 0, comm);) (23 4,   MPI_Bcast(&y, 1, 2, 0, comm);) (23 5,   MPI_Bcast(&z, 1, 2, 0, comm);) (26 1,   MPI_Scatter(sbufnorth, 1, north_rank, &x, 1, 2, 0, comm);) (26 2,   MPI_Scatter(sbufsouth, 1, south_rank, &y, 1, 2, 0, comm);) (26 3,   MPI_Scatter(sbufeast, 1, east_rank, &z, 1, 2, 0, comm);) (26 4,   MPI_Scatter(sbufwest, 1, west_rank, &x, 1, 2, 0, comm);) (26 5,   MPI_Scatter(sbuftop, 1, x, 1, y, 0, comm);) (26 6,   MPI_Scatter(sbufbottom, 1, x, 1, y, 0, comm);) (26 7,   MPI_Scatter(sbuftop, 1, x, 1, y, 0, comm);) (26 8,   MPI_Scatter(sbuftop, 1, x, 1, y, 0, comm);) (26 9,   MPI_Scatter(sbufbottom, 1, x, 1, y, 0, comm);) (26 10,   MPI_Scatter(", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_rank(comm, &mpi_rank);) (3 2,   MPI_Comm_size(comm, &mpi_size);) (14 1,       MPI_Finalize();) (19 1,   MPI_Bcast(&niters, 1, MPI_INT, 0, comm);) (19 2,   MPI_Bcast(&p, 1, MPI_INT, 0, comm);) (54 1,     MPI_Isend(sbufnorth, bx, MPI_DOUBLE, north_rank, 9, comm, &reqs[0]);) (54 2,     MPI_Isend(sbufsouth, bx, MPI_DOUBLE, south_rank, 9, comm, &reqs[1]);) (54 3,     MPI_Isend(sbufeast, by, MPI_DOUBLE, east_rank, 9, comm, &reqs[2]);) (54 4,     MPI_Isend(sbufwest, by, MPI_DOUBLE, west_rank, 9, comm, &reqs[3]);) (54 5,     MPI_Isend(sbuftop, by, MPI_DOUBLE, top_rank, 9, comm, &reqs[4]);) (54 6,     MPI_Isend(sbufbottom, by, MPI_DOUBLE, bottom_rank, 9, comm, &reqs[5]);) (54 7,     MPI_Irecv(rbufnorth, bx, MPI_DOUBLE, north_rank, 9, comm, &reqs[6]);) (54 8,     MPI_Irecv(rbufsouth, bx, MPI_DOUBLE, south_rank, 9, comm, &reqs[7]);) (54 9,     MPI_Irecv(rbufeast, by, MPI_DOUBLE, east_rank, 9, comm, &reqs[8]);) (54 10,     MPI_Irecv(rbufwest, by, MPI_DOUBLE, west_rank, 9, comm, &reqs[9]);) (54 11,     MPI_Irecv(rbuftop, by, MPI_DOUBLE, top_rank, 9, comm, &reqs[10]);) (54 12,     MPI_Irecv(rbufbottom, by, MPI_DOUBLE, bottom_rank, 9, comm, &reqs[11]);) (54 13,     MPI_Waitall(12, reqs, MPI_STATUS_IGNORE);) (56 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (40 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 2,   MPI_Bcast(&partner, 1, MPI_INT, 0, MPI_COMM_WORLD);) (40 3,   MPI_Bcast(&partner, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 1,   MPI_Scatter(send_array, n / numprocs, MPI_INT,", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (15 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Barrier(MPI_COMM_WORLD);) (37 1,     MPI_Barrier(MPI_COMM_WORLD);) (44 1,       MPI_Sendrecv(local_array, n / numprocs, MPI_INT, partner, 0, recv_array, n / numprocs, MPI_INT, partner, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (49 1,     MPI_Barrier(MPI_COMM_WORLD);) (51 1,   MPI_Gather(local_array, n / numprocs, MPI_INT, global_array, n / numprocs, MPI_INT, 0, MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = {0, 0};\n61:   for (int iter = 0; iter < niters; ++iter)\n62:   {\n63:     for (int i = 0; i < 12; ++i)\n64:     {\n65:       bx = coords[0] * 50;\n66:       by = coords[1] * 50;\n67:       bz = coords[2] * 50;\n68:       rbuftop[0] = (bx * (bz + 1)) + (2 * bx);\n69:       rbuftop[1] = (bz * (bz + 2)) + (2 * bz);\n70:       rbuftop[2] = (bz * (bz + 3)) + (2 * bz);\n71:       rbuftop[3] = (bz * (bz + 4)) + (2 * bz);\n72:       rbuftop[4] = (bz * (bz + 5)) + (2 * bz);\n73:       rbuftop[5] = (bz * (bz + 6)) + (2 * bz);\n74:       rbuftop[6] = (bz * (bz + 7)) + (2 * bz);\n75:       rbuftop[7] = (bz * (bz + 8)) + (2 * bz);\n76:       rbuftop[8] = (bz * (bz + 9)) + (2 * bz);\n77:       rbuftop[9] = (bz * (bz + 10)) + (2 * bz);\n78:       rbuftop[10] = (bz * (bz + 7)) + (2 * bz);\n79:       rbuftop[11", "label": " (2 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(comm, &rank);) (5 2,   MPI_Comm_size(comm, &mpi_size);) (15 1,       MPI_Finalize();) (19 1,   MPI_Bcast(&niters, 1, MPI_INT, 0, comm);) (22 1,   MPI_Dims_create(mpi_size, 3, dims);) (22 2,   MPI_Cart_create(MPI_COMM_WORLD, 3, dims, periods, 0, &cartcomm);) (26 1,   MPI_Comm_rank(cartcomm, &cart_rank);) (27 1,   MPI_Cart_coords(cartcomm, cart_rank, 3, coords);) (39 1,   MPI_Cart_rank(cartcomm, top, &top_rank);) (39 2,   MPI_Cart_rank(cartcomm, bottom, &bottom_rank);) (39 3,   MPI_Cart_rank(cartcomm, west, &west_rank);) (39 4,   MPI_Cart_rank(cartcomm, east, &east_rank);) (39 5,   MPI_Cart_rank(cartcomm, north, &north_rank);) (39 6,   MPI_Cart_rank(cartcomm, south, &south_rank);) (55 1,     MPI_Isend(sbufnorth, bx, MPI_DOUBLE, north_rank, 9, comm, &reqs[0]);) (55 2,     MPI_Isend(sbufsouth, bx, MPI_DOUBLE, south_rank, 9, comm, &reqs[1]);) (55 3,     MPI_Isend(sbufeast, by, MPI_DOUBLE, east_rank, 9, comm, &reqs[2]);) (55 4,     MPI_Isend(sbufwest, by, MPI_DOUBLE, west_rank, 9, comm, &reqs[3]);) (55 5,     MPI_Isend(sbuftop, by, MPI_DOUBLE, top_rank, 9, comm, &reqs[4]);) (55 6,     MPI_Isend(sbufbottom, by, MPI_DOUBLE, bottom_rank, 9, comm, &reqs[5]);) (55 7,     MPI_Irecv(rbufnorth, bx, MPI_DOUBLE, north_rank, 9, comm, &reqs[6]);) (55 8,     MPI_Irecv(rbufsouth, bx, MPI_DOUBLE, south_rank, 9, comm, &reqs[7]);) (55 9,     MPI_Irecv(rbufeast, by, MPI_DOUBLE, east_rank, 9, comm, &reqs[8]);) (55 10,     MPI_Irecv(rbufwest, by, MPI_DOUBLE, west_rank, 9, comm, &reqs[9]);) (55 11,     MPI_Irecv(rbuftop, by, MPI_DOUBLE, top_rank, 9, comm, &reqs[10]);) (55 12,     MPI_Irecv(rbufbottom, by, MPI_DOUBLE, bottom_rank, 9, comm, &reqs[11]);) (55 13,     MPI_Waitall(12, reqs, MPI_STATUS_IGNORE);) (57 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 0,  MPI_Wtime();) (6 0,  MPI_Wtime();) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 0,  MPI_Wtime();) (10 0,  MPI_Wtime();) (12 0,  MPI_Wtime();) (17 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 0,  MPI_Wtime();) (6 0,  MPI_Wtime();) (10 0,  MPI_Wtime();) (11 0,  MPI_Wtime();) (14 0,  MPI_Wtick();) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,   MPI_Info_create(&win_info);) (14 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (14 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (20 1,     MPI_Info_free(&win_info);) (20 2,   MPI_Win_free(&win);) (20 3,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &shm_comm);) (4 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (21 1,   MPI_Info_create(&win_info);) (21 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (21 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (29 1,     MPI_Info_free(&win_info);) (31 1,     MPI_Win_free(&win);) (34 1,     MPI_Comm_free(&shm_comm);) (34 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 1,       MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (13 2,       MPI_Recv(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (19 1,       MPI_Recv(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (19 2,       MPI_Send(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,       MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &status);) (19 1,       MPI_Recv(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (21 1,       MPI_Send(&message, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>18 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,         MPI_Recv(&inmsg, 1, MPI_CHAR, i, -1, MPI_COMM_WORLD, &Status);) (19 1,     MPI_Send(&outmsg, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,         MPI_Send(&outmsg, 1, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&inmsg, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &Status);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations(n, rank, num_proc);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (13 1,   MPI_Bcast(arr, n, MPI_INT, 0, MPI_COMM_WORLD);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 0,  MPI_Wtime();) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>44 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,   MPI_Scatter(data, 10, MPI_INT, &data[0], 10, MPI_INT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,       MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,           MPI_Send(data, 10, MPI_INT, 1, 123, MPI_COMM_WORLD);) (13 2,           MPI_Barrier(MPI_COMM_WORLD);) (24 1,       MPI_Comm_size(MPI_COMM_WORLD, &size);) (28 1,           MPI_Recv(data, 10, MPI_INT, 0, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 2,           MPI_Barrier(MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,         MPI_Recv(&inmsg, 1, MPI_CHAR, -1, -1, MPI_COMM_WORLD, &Stat);) (19 1,     MPI_Send(&rank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,         MPI_Send(&outmsg[i - 1], 1, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&inmsg, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &Stat);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (40 1,   MPI_Reduce(&lis, &lis, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (44 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (29 1,       MPI_Send(&add, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD);) (29 2,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (34 1,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (34 2,       MPI_Send(&add, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD);) (44 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 0,  MPI_Wtime();) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &procnums);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &procrank);) (22 1,   MPI_Reduce(&local_left, &out_oneproc, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), MPI_SUM, 0, MPI_COMM_WORLD);) (22 2,   MPI_Reduce(&local_right, &out_right, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), MPI_SUM, 0, MPI_COMM_WORLD);) (22 3,   MPI_Barrier(MPI_COMM_WORLD);) (22 0,  MPI_Wtime();) (24 1,   MPI_Reduce(&in, &out, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), MPI_SUM, 0, MPI_COMM_WORLD);) (24 2,   MPI_Reduce(&f, &out_oneproc, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), MPI_SUM, 0, MPI_COMM_WORLD);) (24 3,   MPI_Reduce(&in, &out_in, 1, (", "label": " (6 1,   MPI_Init(0, 0);) (10 0,  MPI_Wtime();) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &procrank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &procnums);) (16 1,   MPI_Op_create((MPI_User_function *) mySum, 1, &myOp);) (16 2,   MPI_Reduce(&local_trapezoid, &out, 1, (MPI_Datatype) ((void *) (&ompi_mpi_long_double)), myOp, 0, MPI_COMM_WORLD);) (20 0,  MPI_Wtime();) (23 0,  MPI_Wtime();) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,       MPI_Isend(&rank, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[0]);) (14 2,       MPI_Irecv(&buf, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[1]);) (14 3,       MPI_Waitall(1, reqs, MPI_STATUS_IGNORE);) (18 1,       MPI_Irecv(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (18 2,       MPI_Waitall(1, reqs, MPI_STATUS_IGNORE);) (20 1,       MPI_Isend(&rank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[1]);) (20 2,       MPI_Irecv(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (20 3,       MPI_Waitall(1, reqs, MPI_STATUS_IGNORE);) (22 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,       MPI_Isend(&rank, 1, MPI_INT, 1, 123, MPI_COMM_WORLD, &reqs[0]);) (12 1,       MPI_Waitall(1, reqs, MPI_STATUS_IGNORE);) (20 1,       MPI_Irecv(&buf, 1, MPI_INT, 0, 123, MPI_COMM_WORLD, &reqs[0]);) (20 2,       MPI_Waitall(1, reqs, MPI_STATUS_IGNORE);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(&test, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&recvbuffer, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(&test, 1, MPI_DOUBLE, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&recvbuffer, 1, MPI_DOUBLE, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 1,   MPI_Scatter(nums_rand, tamano, MPI_INT, sub_rand_nums, tamano, MPI_INT, 0, MPI_COMM_WORLD);) (22 2,   MPI_Scatter(sub_rand_nums, tamano, MPI_INT, sub_avgs, tamano, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 2,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,   MPI_Scatter(nums_rand, tamano, MPI_FLOAT, sub_rand_nums, tamano, MPI_FLOAT, 0, MPI_COMM_WORLD);) (22 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (11 1,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &win_comm, &win);) (11 2,   MPI_Win_lock_all(0, win);) (11 3,   MPI_Win_sync(win);) (11 0,  MPI_Wtime();) (14 1,     MPI_Win_sync(win);) (14 2,     MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Win_unlock_all(win);) (15 2,   MPI_Win_free(&win);) (15 3,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, rank > 0, 0, &win_comm);) (7 2,   MPI_Barrier(MPI_COMM_WORLD);) (9 0,  MPI_Wtime();) (12 1,     MPI_Win_allocate((sizeof(double)) * 16, sizeof(double), MPI_INFO_NULL, win_comm, &winbuf, &win);) (12 2,     MPI_Win_free(&win);) (15 1,     MPI_Comm_free(&win_comm);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = 1;\n13:   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,     MPI_Barrier(MPI_COMM_WORLD);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[0] = 1;\n42:   MPI_Group_range_incl(0, 1, ranges, &group);\n43:   int range_start[2] = {0, 1};\n44:   int range_subsize[2] = {0, 1};\n45:   int array_start[2] = {0, 1};\n46:   int array_subsize[2] = {0, 1};\n47:   int array_start_subsize[2] = {0, 1};\n48:   int array_subsize[2] = {0, 1};\n49:   int array_start_subsize[2] = {0, 1};\n50:   int array_subsize[2] = {0, 1};\n51:   int array_start_subsize[2] = {0, 1};\n52:   int array_subsize[2] = {0, 1};\n53:   MPI_Group group;\n54:   MPI_Group newgroup;\n55:   MPI_Comm splitcomm;\n56:   int *ranks;\n57:   int size_per_rank;\n58:   if (rank == 0)\n59:   {\n60:     ranks = malloc((sizeof(int)) * size_per_rank);\n61:   }\n62:   else\n63:   {\n64:     ranks = malloc((sizeof(int)) * size_per_rank);\n65:   }\n66:   if (rank == 0)\n67:   {\n68:     for (int i = 0; i < size_per_rank; i++)\n69: \n70:   }\n71:   else\n72:   {\n73:     for (int i = 0; i < size_per_rank; i++)\n74: \n75:   }\n76:   if (rank == 0)\n77:   {\n78:     free(ranks);\n79:     free(data);\n80:", "label": " (2 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Type_create_subarray(2, array_size, array_subsize, array_start, 0, MPI_INT, &subarray);) (10 2,   MPI_Type_commit(&subarray);) (10 3,   MPI_Type_free(&subarray);) (11 1,   MPI_Op_create(myfunc, 1, &op);) (13 1,   MPI_Comm_group(MPI_COMM_WORLD, &group);) (14 1,   MPI_Group_range_excl(group, 1, ranges, &newgroup);) (15 1,   MPI_Group_size(newgroup, &group_size);) (15 2,   MPI_Group_free(&newgroup);) (15 3,   MPI_Comm_dup(MPI_COMM_WORLD, &dupcomm);) (15 4,   MPI_Comm_split(MPI_COMM_WORLD, rank < 2, 1, &splitcomm);) (21 1,       MPI_Send(data, 3, MPI_INT, 1, 123, splitcomm);) (29 1,       MPI_Recv(&data[2], 3, MPI_INT, 0, 123, splitcomm, MPI_STATUS_IGNORE);) (35 1,       MPI_Comm_size(dupcomm, &size);) (37 1,   MPI_Comm_free(&dupcomm);) (37 2,   MPI_Comm_free(&splitcomm);) (37 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (23 1,     MPI_Send(local_int, 4, MPI_INT, 1, 0, MPI_COMM_WORLD);) (23 2,     MPI_Send(local_int, 12, MPI_INT, 2, 0, MPI_COMM_WORLD);) (23 3,     MPI_Send(local_int, 16, MPI_INT, 3, 0, MPI_COMM_WORLD);) (23 4,     MPI_Send(local_int, 16, MPI_INT, 4, 0, MPI_COMM_WORLD);) (23 5,     MPI_Send(local_int, 12, MPI_INT, 5, 0, MPI_COMM_WORLD);) (23 6,     MPI_Send(local_int, 16, MPI_INT, 6, 0, MPI_COMM_WORLD);) (25 1,     MPI_Recv(local_int, 4, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 2,     MPI_Recv(local_int, 12, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 3,     MPI_Recv(local_int, 12, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,     MPI_Recv(local_int, 4, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 2,     MPI_Recv(local_int, 12,", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (69 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (71 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (71 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(0, 0);) (12 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (32 1,   MPI_Scatter(pInputFileName, 12 * (12 / size), MPI_CHAR, &xlocal[12 / size], 12 * (12 / size), MPI_CHAR, 0, MPI_COMM_WORLD);) (39 1,   MPI_Gather(xlocal[0], 12 * (12 / size), MPI_CHAR, &xlocal[(12 / size) + 1], 12 * (12 / size), MPI_CHAR, 0, MPI_COMM_WORLD);) (68 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (33 1,   MPI_Sendrecv(xlocal[12 / size], 12, MPI_DOUBLE, up, 0, xlocal[0], 12, MPI_DOUBLE, down, 0, MPI_COMM_WORLD, &status);) (33 2,   MPI_Sendrecv(xlocal[1], 12, MPI_DOUBLE, down, 0, xlocal[(12 / size) + 1], 12, MPI_DOUBLE, up, 0, MPI_COMM_WORLD, &status);) (48 1,   MPI_Reduce(&errcnt, &toterr, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (28 1,       MPI_Isend(&total_time, 1, MPI_DOUBLE, j, 0, MPI_COMM_WORLD, &reqs[j]);) (28 2,       MPI_Irecv(&total_time, 1, MPI_DOUBLE, j, 0, MPI_COMM_WORLD, &reqs[i]);) (28 3,       MPI_Waitall(1, reqs, status);) (29 0,  MPI_Wtime();) (34 1,         MPI_Isend(&total_time, 1, MPI_DOUBLE, j, 0, MPI_COMM_WORLD, &reqs[j]);) (34 2,         MPI_Irecv(&total_time, 1, MPI_DOUBLE, j, 0, MPI_COMM_WORLD, &reqs[i]);) (34 3,         MPI_Waitall(1, reqs, status);) (37", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &comm_rank);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,         MPI_Isend(0, 0, MPI_CHAR, 1, 0, MPI_COMM_WORLD, &reqs[i]);) (20 1,       MPI_Isend(0, 0, MPI_CHAR, 1, 1, MPI_COMM_WORLD, &reqs[i]);) (20 2,       MPI_Barrier(MPI_COMM_WORLD);) (20 3,       MPI_Waitall(params.num_reqs + 1, reqs, status);) (20 4,       MPI_Barrier(MPI_COMM_WORLD);) (28 1,       MPI_Barrier(MPI_COMM_WORLD);) (28 0,  MPI_Wtime();) (28 1,       MPI_Recv(0, 0, MPI_CHAR, 0, 1, MPI_COMM_WORLD, &status[0]);) (31 1,         MPI_Recv(0, 0, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status[0]);) (33 1,       MPI_Barrier(MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (17 1,   MPI_Bcast(&message_content, 80, MPI_CHAR, 0, MPI_COMM_WORLD);) (17 2,   MPI_Bcast(&message_message, 80, MPI_CHAR, 0, MPI_COMM_WORLD);) (27 1,   MPI_Reduce(&my_neighbor, &recv_data, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (27 2,   MPI_Bcast(&message_received, 1, MPI_INT, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (21 1,     MPI_Send(message_content, strlen(message_content) + 1, MPI_BYTE, target_process_rank, process_tag, MPI_COMM_WORLD);) (24 1,     MPI_Recv(received_message, sizeof(received_message), MPI_BYTE, sender_process_rank, process_tag, MPI_COMM_WORLD, &receive_status);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Win_lock(2, 1, 0, win);) (9 2,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 3,     MPI_Win_unlock(1, win);) (9 4,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 0,  MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_set_errhandler(0, MPI_ERRORS_RETURN);) (6 2,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (5 0,  MPI_Attr_get(MPI_COMM_WORLD, MPI_TAG_UB, &v, &flag);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(0, 0);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (21 1,   MPI_Bcast(&soma, 1, MPI_INT, root, MPI_COMM_WORLD);) (21 2,   MPI_Bcast(&tam_s, 1, MPI_INT, root, MPI_COMM_WORLD);) (21 3,   MPI_Bcast(&tam_s, 1, MPI_INT, root, MPI_COMM_WORLD);) (24 1,     MPI_Send(&soma, 1, MPI_INT, next, 0, MPI_COMM_WORLD);) (24 2,     MPI_Send(&tam_s, 1, MPI_INT, next, 0, MPI_COMM_WORLD);) (24 3,     MPI_Send(&tam_s, 1, MPI_INT, next, 0, MPI_COMM_WORLD);) (24 4,     MPI_Send(&tam_s, 1, MPI_INT, next, 0, MPI_COMM_WORLD);) (27 1,     MPI_Recv(&soma, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (27 2,     MPI_Recv(&tam_s, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (27 3,     MPI_Recv(&tam_s, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (27 4,     MPI_Recv(&tam_s, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (27 5,     MPI", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (21 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (26 1,     MPI_Finalize();) (38 1,       MPI_Send(s, tam_s, MPI_INT, next, 0, MPI_COMM_WORLD);) (47 1,       MPI_Send(s, tam_s + ((next == (comm_sz - 1))? (SIZE - (tam_s * comm_sz)) : (0)), MPI_INT, next, 0, MPI_COMM_WORLD);) (65 1,       MPI_Send(s, tam_s, MPI_INT, next, 0, MPI_COMM_WORLD);) (66 1,     MPI_Recv(s, tam_s, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &status);) (78 1,       MPI_Send(s, tam_s + ((next == (comm_sz - 1))? (SIZE - (tam_s * comm_sz)) : (0)), MPI_INT, next, 0, MPI_COMM_WORLD);) (79 1,     MPI_Recv(s, tam_s + ((rank == (comm_sz - 1))? (SIZE - (tam_s * comm_sz)) : (0)), MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (85 1,   MPI_Reduce(&Soma_Parcial, &Soma, 1, MPI_INT, MPI_SUM, root, MPI_COMM_WORLD);) (87 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,     MPI_Isend(&sbuf, 1, MPI_INT, (rank + 1) % world_size, 0, MPI_COMM_WORLD, &reqs[0]);) (18 2,     MPI_Irecv(&rbuf, 1, MPI_INT, ((rank + world_size) - 1) % world_size, 0, MPI_COMM_WORLD, &reqs[1]);) (18 3,     MPI_Waitall(2, reqs, MPI_STATUSES_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,     MPI_Isend(&sbuf, 1, MPI_INT, rank, (a * rank) + b, MPI_COMM_WORLD, &reqs[0]);) (18 2,     MPI_Irecv(&rbuf, 1, MPI_INT, rank, (a * rank) + b, MPI_COMM_WORLD, &reqs[1]);) (18 3,     MPI_Waitall(2, reqs, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (35 1,         MPI_Send(&tablica, 20, MPI_INT, i, tag, MPI_COMM_WORLD);) (52 1,       MPI_Recv(&tmp, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (59 1,       MPI_Recv(&tmp, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (64 1,           MPI_Send(&max, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (69 1,         MPI_Send(&max, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (70 1,           MPI_Send(&tmp, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (77 1,           MPI_Recv(&tmp, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (82 1,           MPI_Send(&max, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (89 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Finalize();) (35 1,         MPI_Send(&max, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (39 1,         MPI_Send(&tablica[i], 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (43 1,     MPI_Send(&dummy, 1, MPI_INT, 1, 2, MPI_COMM_WORLD);) (46 1,       MPI_Recv(&sorted[i], 1, MPI_INT, i, 2, MPI_COMM_WORLD, &status);) (60 1,       MPI_Recv(&tmp, 1, MPI_INT, rank - 1, -1, MPI_COMM_WORLD, &status);) (63 1,         MPI_Send(&max, 1, MPI_INT, 0, 2, MPI_COMM_WORLD);) (65 1,           MPI_Send(&tmp, 1, MPI_INT, rank + 1, 2, MPI_COMM_WORLD);) (74 1,             MPI_Send(&max, 1, MPI_INT, rank + 1, tag, MPI_COMM_WORLD);) (78 1,             MPI_Send(&tmp, 1, MPI_INT, rank + 1, tag, MPI_COMM_WORLD);) (88 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Ssend(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, -1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Send(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (32 1,       MPI_Send(&send, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (32 2,       MPI_Send(&end, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (32 3,       MPI_Send(&receive_res, 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (36 1,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (36 2,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 2,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (44 1,         MPI_Send(&send, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (44 2,         MPI_Send(&send, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (47 1,         MPI_Recv(&receive_res, 1,", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (29 1,       MPI_Send(&add, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD);) (29 2,       MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,         MPI_Send(&add, 1, MPI_DOUBLE, my_rank + step, 0, MPI_COMM_WORLD);) (51 1,             MPI_Send(&add, 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (57 1,         MPI_Recv(&receive_res, 1, MPI_DOUBLE, my_rank - (my_rank % step), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (68 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,   MPI_Info_create(&win_info);) (21 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (21 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (29 1,     MPI_Win_lock_all(0, win);) (30 1,     MPI_Win_unlock_all(win);) (33 1,   MPI_Barrier(MPI_COMM_WORLD);) (34 1,   MPI_Info_free(&win_info);) (34 2,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &shm_comm);) (4 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (21 1,   MPI_Info_create(&win_info);) (21 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (21 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (29 1,     MPI_Win_free(&win);) (31 1,     MPI_Info_free(&win_info);) (34 1,     MPI_Comm_free(&shm_comm);) (34 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(comm, &size);) (2 3,   MPI_Comm_rank(comm, &rank);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (3 1,   MPI_Barrier(MPI_COMM_WORLD);) (5 1,   MPI_Alltoall(sbuf, 10, MPI_INT, rbuf, 10, MPI_INT, comm);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>k3d(2, 1, 3, buf, &size, S *buf->c, buf->d);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 4,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (10 5,   MPI_Type_commit(&new_t);) (16 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Type_free(&new_t);) (21 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (9 2,   MPI_Type_commit(&new_t);) (15 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Type_free(&new_t);) (21 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,       MPI_Send(&outmsg[outmsg[dest]], n_send, MPI_INT, dest, tag, MPI_COMM_WORLD);) (23 1,       MPI_Recv(&inmsg[outmsg[dest]], n_recv, MPI_INT, source, tag, MPI_COMM_WORLD, &Stat);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 2,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,       MPI_Send(&outmsg[dest], n, MPI_INT, dest, tag, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&inmsg, n, MPI_INT, source, tag, MPI_COMM_WORLD, &Stat);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (26 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (26 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (28 1,   MPI_Finalize();)", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (33 1,     MPI_Send(&pi, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (33 2,     MPI_Recv(&pi, 1, MPI_DOUBLE, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 1,     MPI_Recv(&pi, 1, MPI_DOUBLE, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 2,     MPI_Send(&pi, 1, MPI_DOUBLE, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (47 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (45 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,       MPI_Send(&outmsg, 1, MPI_INT, dest, tag, MPI_COMM_WORLD);) (14 2,       MPI_Recv(&inmsg, 1, MPI_INT, source, tag, MPI_COMM_WORLD, &Stat);) (20 1,     MPI_Recv(&inmsg, 1, MPI_INT, 0, tag, MPI_COMM_WORLD, &Stat);) (20 2,     MPI_Send(&outmsg, 1, MPI_INT, 0, tag, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,       MPI_Send(&outmsg, 1, MPI_INT, dest, tag, MPI_COMM_WORLD);) (20 1,     MPI_Recv(&inmsg, 1, MPI_INT, source, tag, MPI_COMM_WORLD, &Stat);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(0, 0);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (14 1,   MPI_Bcast(received_message, 80, MPI_CHAR, 0, MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (14 1,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (16 2,   MPI_Recv(received_message, sizeof(received_message), MPI_BYTE, sender_process_rank, process_tag, MPI_COMM_WORLD, &status);) (20 1,   MPI_Bsend(processed_message, 90, MPI_BYTE, target_process_rank, process_tag, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(MPI_COMM_WORLD, &win);) (8 1,   MPI_Win_create(win, (sizeof(char)) * (sizeof(char)), sizeof(char), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (9 1,   MPI_Win_fence(0, win);) (9 2,   MPI_Put(buf, sizeof(char), MPI_BYTE, 1, 0, sizeof(char), MPI_BYTE, win);) (9 3,   MPI_Win_fence(0, win);) (11 1,     MPI_Get(buf, sizeof(char), MPI_BYTE, 0, 0, sizeof(char), MPI_BYTE, win);) (12 1,   MPI_Win_fence(0, win);) (12 2,   MPI_Win_free(&win);) (13 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Comm_group(MPI_COMM_WORLD, &group);) (8 2,   MPI_Win_create(buf, 128, sizeof(char), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 3,   MPI_Win_fence(0, win);) (11 1,     MPI_Put(buf, 128, MPI_CHAR, 1, 0, 128, MPI_CHAR, win);) (12 1,   MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (13 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (10 1,       MPI_Isend(&data, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &reqs[i]);) (15 1,       MPI_Irecv(&data, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &reqs[i]);) (16 1,       MPI_Waitall(N, reqs, MPI_STATUS_IGNORE);) (21 1,     MPI_Isend(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (21 2,     MPI_Irecv(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &reqs[0]);) (23 1,       MPI_Waitall(N, reqs, MPI_STATUS_IGNORE);) (24 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &mpi_size);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);) (8 1,       MPI_Isend(&data, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &reqs[i]);) (15 1,       MPI_Testsome(N, reqs, &outcount, indices, MPI_STATUS_IGNORE);) (15 2,       MPI_Comm_rank(MPI_COMM_WORLD, &data);) (22 1,       MPI_Recv(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_Init(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (7 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 0,  MPI_Wtime();) (10 0,  MPI_Wtime();) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 0,  MPI_Wtime();) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &group);) (19 0,  MPI_Wtime();) (19 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &req);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &stat);) (13 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000 + 1, MPI_INT, 1, 123, MPI_COMM_WORLD, &req);) (8 2,     MPI_Wait(&req, &stat);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 123, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 1,     MPI_Send(numbers, number_amount, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Probe(0, 0, MPI_COMM_WORLD, &status);) (21 2,     MPI_Get_count(&status, MPI_INT, &number_amount);) (22 1,     MPI_Recv(numbers, number_amount, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 1,     MPI_Send(&numbers, number_amount, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&numbers, number_amount, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (21 2,     MPI_Get_count(&status, MPI_INT, &number_amount);) (23 1,   MPI_Barrier(MPI_COMM_WORLD);) (23 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>10 1,   MPI_Init(&argc, &argv);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (17 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (25 1,     MPI_Bcast(&size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 2,     MPI_Bcast(arrayOfNumbers, 64, MPI_INT, 0, MPI_COMM_WORLD);) (25 3,     MPI_Bcast(&size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 4,     MPI_Bcast(arrayOfNumbers, 64, MPI_INT, 0, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)", "label": " (12 1,   MPI_Init(&argc, &argv);) (12 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (17 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,     MPI_Send(&amountOfNumbers, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (24 2,     MPI_Send(arrayOfNumbers, amountOfNumbers / 2, MPI_INT, 1, 0, MPI_COMM_WORLD);) (25 1,     MPI_Recv(histogramaFromSlave, 256, MPI_INT, 1, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,     MPI_Recv(&amountOfNumbers, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (35 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (36 1,     MPI_Recv(arrayOfNumbers, amountOfNumbersToSlave, MPI_INT, 0, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,     MPI_Send(histograma, 256, MPI_INT, 0, 0, MPI_COMM_WORLD);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(&argc, &argv);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &NUM_FILES);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Info_create(&info);) (12 2,   MPI_Info_set(info, \"hostfile_name\", \"hostfile_tmp_file\", \"true\");) (12 3,   MPI_Info_set(info, \"ompi_global_scope\", \"true\");) (12 4,   MPI_Info_set(info, \"ompi_global_scope\", \"true\");) (15 1,   MPI_File_open(MPI_COMM_WORLD, argv[1], 2, info, &fh);) (15 2,   MPI_File_set_view(fh, -1, MPI_CHAR, MPI_CHAR, \"native\", info);) (15 3,   MPI_File_write(fh, &my_data[0], 10, MPI_CHAR, &status);) (15 4,   MPI_File_close(&fh);) (15 5,   MPI_Barrier(MPI_COMM_WORLD);) (53 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,   MPI_Get_processor_name(processor_name, &name_len);) (12 1,   MPI_Info_create(&info);) (12 2,   MPI_Info_set(info, \"osc_rdma_acc_single_intrinsic\", \"true\");) (12 3,   MPI_Win_allocate(sizeof(int), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &baseptr, &win);) (14 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 2,   MPI_Win_lock_all(0, win);) (20 1,     MPI_Fetch_and_op(&one, &file, MPI_INT, 0, 0, MPI_SUM, win);) (20 2,     MPI_Win_flush(0, win);) (53 1,   MPI_Win_unlock_all(win);) (53 2,   MPI_Win_free(&win);) (53 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>v2v(sendbuf, recvbuf, 10, MPI_INT, next_rank, 100, MPI_COMM_WORLD, &status);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 2,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,   MPI_Sendrecv(sendbuf, 3, MPI_INT, next_rank, 0, recvbuf, 3, MPI_INT, prev_rank, -1, MPI_COMM_WORLD, &status);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Info_create(&info);) (11 2,   MPI_Info_set(info, \"accumulate_ordering\", \"true\");) (11 3,   MPI_Info_set(info, \"same_size\", \"true\");) (17 1,   MPI_Win_allocate(sizeof(double), sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Info_free(&info);) (20 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Win_allocate((sizeof(double)) * 5, sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 1,     MPI_Info_free(&info);) (29 1,     MPI_Win_free(&win);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>or_init(NULL, NULL);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 1,     MPI_Send(numbers, number_amount, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Probe(0, 0, MPI_COMM_WORLD, &status);) (21 2,     MPI_Get_count(&status, MPI_INT, &number_amount);) (22 1,     MPI_Recv(number_buf, number_amount, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (15 1,     MPI_Send(&numbers, number_amount, MPI_INT, 1, 0, MPI_COMM_WORLD);) (21 1,     MPI_Probe(0, 0, MPI_COMM_WORLD, &status);) (21 2,     MPI_Get_count(&status, MPI_INT, &number_amount);) (22 1,     MPI_Recv(number_buf, number_amount, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (5 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (37 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &work_rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &work_size);) (16 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &work_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &work_size);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(buffer, 1000, MPI_INT, 1, too_large_tag, MPI_COMM_WORLD);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, too_large_tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(buffer, 1000, MPI_INT, 1, too_large_tag, MPI_COMM_WORLD);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, too_large_tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (17 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (17 2,   MPI_Comm_rank(allcomm, &my_rank);) (17 3,   MPI_Comm_size(allcomm, &size);) (17 4,   MPI_Barrier(allcomm);) (17 5,   MPI_Comm_free(&allcomm);) (17 6,   MPI_Comm_disconnect(&intercomm);) (17 7,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000000, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>icaCards::Init(argc, argv);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (16 1,     MPI_Send(message_content, strlen(message_content), MPI_BYTE, process_tag, 1, MPI_COMM_WORLD);) (19 1,   MPI_Recv(message_content, 80, MPI_BYTE, -1, -1, MPI_COMM_WORLD, &request);) (22 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (20 1,   MPI_Bsend(message_content, strlen(message_content), MPI_BYTE, target_process_rank, process_tag, MPI_COMM_WORLD);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|> = MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &nr_errors);) (15 1,     MPI_Type_free(&send_type);) (15 2,     MPI_Type_free(&recv_type);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 2,   MPI_Allreduce((void *) 1, &tot_errors, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)         MPI_Type_free(&send_type);) (35 2,   MPI_Finalize();)         MPI_Type_free(&recv_type);) (35 3,   MPI_Finalize();)         MPI_Type_free(&send_type);) (35 4,   MPI_Finalize();)         MPI_Type_free(&recv_type);) (35 5,   MPI_Finalize();)         MPI_Type_free(&send_type);) (35 6,   MPI_Type_free(&recv_type);) (35 7,   MPI_Barrier(MPI_COMM_WORLD);) (35 8,   MPI_Allreduce((void *) 1, &tot_errors, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (35 9,   MPI_Type_free(&send_type);) (35 10,   MPI_Type_free(&recv_type);) (35 11,   MPI_Finalize();)         MPI_Type_free(&send_type);) (35 12,   MPI_Final", "label": " (4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Get_address(&sendbuf[0], &disps[0]);) (15 2,     MPI_Get_address(&sendbuf[0], &disps[1]);) (15 3,     MPI_Get_address(&sendbuf[4], &disps[2]);) (16 1,     MPI_Type_commit(&send_type);) (16 2,     MPIDU_Datatype_debug(send_type, 32);) (16 3,     MPI_Isend((void *) 0, 1, send_type, 1, 0, MPI_COMM_WORLD, &req);) (16 4,     MPI_Type_free(&send_type);) (19 1,     MPI_Irecv(recbuf, 20, MPI_BYTE, 0, 0, MPI_COMM_WORLD, &req);) (20 1,   MPI_Wait(&req, &stat);) (33 1,   MPI_Allreduce(&nr_errors, &tot_errors, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (15 1,       MPI_Recv(buff, 128, MPI_CHAR, i, 0, MPI_COMM_WORLD, &stat);) (20 1,       MPI_Send(buff, 128, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (16 1,       MPI_Send(buff, 128, MPI_CHAR, i, 0, MPI_COMM_WORLD);) (20 1,       MPI_Recv(buff, 128, MPI_CHAR, i, 0, MPI_COMM_WORLD, &stat);) (27 1,     MPI_Recv(buff, 128, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &stat);) (30 1,     MPI_Send(buff, 128, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (6 4,   MPI_Get_processor_name(name, &namelen);) (12 1,     MPI_Send(&namelen, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (18 1,   MPI_Recv(name, 50, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status);) (23 1,   MPI_Comm_get_parent(&comm_cart);) (23 2,   MPI_Recv(name, 50, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status);) (29 1,   MPI_Send(name, strlen(name) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (29 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (6 4,   MPI_Get_processor_name(name, &resultlen);) (11 1,     MPI_Get_version(&version, &subversion);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(9 1,   MPI_Init(0, 0);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 1,   MPI_Scatter(rand_nums, num_elements_per_proc, MPI_FLOAT, sub_rand_nums, num_elements_per_proc, MPI_FLOAT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 2,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (18 1,   MPI_Scatter(rand_nums, num_elements_per_proc, MPI_FLOAT, sub_rand_nums, num_elements_per_proc, MPI_FLOAT, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&sub_avg, 1, MPI_FLOAT, sub_avgs, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Barrier(MPI_COMM_WORLD);) (38 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (17 1,   MPI_Bcast(&local_int, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 1,   MPI_Scatter(local_int, 2, MPI_INT, local_int, 2, MPI_INT, 0, MPI_COMM_WORLD);) (35 1,   MPI_Gather(local_int, 2, MPI_INT, local_int, 2, MPI_INT, 0, MPI_COMM_WORLD);) (48 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &world_rank);) (6 1,   MPI_Comm_size((MPI_Comm) 0x44000000, &world_size);) (35 1,   MPI_SEC_Alltoall(local_int, 4, (MPI_Datatype) 0x4c000405, local_array, 4, (MPI_Datatype) 0x4c000405, (MPI_Comm) 0x44000000);) (37 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (37 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(dataRec, processID, dataRec + processCount, MPI_COMM_WORLD);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nodeIterations);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &processID);) (29 1,       MPI_Send(&circle_count, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 2,       MPI_Send(&dataRec[i], 1, MPI_LONG, i, 0, MPI_COMM_WORLD);) (29 3,       MPI_Send(&circle_count, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (29 4,       MPI_Send(&dataRec[i], 1, MPI_LONG, i, 0, MPI_COMM_WORLD);) (36 1,     MPI_Recv(&pow(1, 2) + pow(y, 2), MPI_LONG, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (36 2,     MPI_Recv(&pow(1, 2) + pow(y, 2), MPI_LONG, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 1,     MPI_Recv(&pow(1, 2) + pow(y, 2), MPI_LONG, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (38 2,     MPI_Recv(&circle_count, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (45 1,       MPI_Recv(&dataRec[i], 1, MPI_LONG, i,", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &processID);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &processCount);) (29 1,       MPI_Send(&circle_count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (29 2,       MPI_Send(&nodeIterations, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&dataRec[i], processCount, MPI_INT, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&iterRec[i], processCount, MPI_LONG, -1, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada1();\n19:   MPI_Comm cart_comm;\n20:  MPI_Comm cart_comm1;\n21:  MPI_Comm cart_comm2;\n22:  MPI_Comm cart_comm3;\n23:  MPI_Comm cart_comm4;\n24:  MPI_Comm cart_comm5;\n25:  MPI_Comm cart_comm6;\n26:   int ndims = 2;\n27:   int dims[2] = {3, 4};\n28:   int periods[2] = {1, 1};\n29:   int reorder = 1;\n30:   MPI_Comm comm_cart_1d;\n31:   MPI_Comm comm_cart_2d;\n32:   MPI_Comm comm_cart_3d;\n33:   MPI_Comm comm_cart_4d;\n34:   MPI_Comm comm_cart_5d;\n35:   MPI_Comm comm_cart_6d;\n36:   MPI_Comm comm_cart_7d;\n37:   int dims[2] = {3, 4};\n38:   int periods[2] = {1, 1};\n39:   int reorder = 1;\n40:   MPI_Comm comm_cart_4d;\n41:   MPI_Comm comm_cart_5d;\n42:   MPI_Comm comm_cart_6d;\n43:   MPI_Comm comm_cart_7d;\n44:   MPI_Comm comm_cart_8d;\n45:   MPI_Comm comm_cart_9d;\n46:   MPI_Comm comm_cart_10d;\n47:   MPI_Comm comm_cart_11d;\n48:   MPI_Comm comm_cart_12d;\n49:   MPI_Comm comm_cart_13d;\n50:   int ndims = 2;\n51:   int dims[2] = {3, 4};\n52:   int periods[2] =", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,     MPI_Send(&number, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&number, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, -1, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (36 1,       MPI_Send(&array[2], 3, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (36 2,       MPI_Recv(&array[0], 3, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (46 1,   MPI_Reduce(&t_cpu, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (50 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (32 1,       MPI_Send(&array, 3, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (36 1,       MPI_Recv(&array, 3, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>(11 1,   MPI_Init(0, 0);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,   MPI_Scatter(v, r, MPI_INT, v, r, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,   MPI_Gather(&sum, 1, MPI_INT, b, 1, MPI_INT, 0, MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(0, 0);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (22 1,     MPI_Send(&z, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (27 1,       MPI_Recv(&aux, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,       MPI_Send(&sum, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (34 1,     MPI_Recv(&z, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation_Init(0, 0);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 4,   MPI_Barrier(MPI_COMM_WORLD);) (16 1,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (16 2,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (24 2,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 3,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (24 4,       MPI_Recv(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 5,       MPI_Send(&ping_pong_count, 1, MPI_INT, partner_rank, 0, MPI_COMM_WORLD);) (24 6,", "label": " (3 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (16 1,       MPI_Send(&ping_pong_count, 1, MPI_INT, parnet_rank, 0, MPI_COMM_WORLD);) (20 1,       MPI_Recv(&ping_pong_count, 1, MPI_INT, world_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 5, MPI_INT, win);) (9 2,     MPI_Win_fence(2, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (23 1,   MPI_Info_create(&win_info);) (23 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (23 3,   MPI_Win_allocate((sizeof(double)) * win_info);) (23 4,   MPI_Barrier(MPI_COMM_WORLD);) (32 1,   MPI_Info_free(&win_info);) (32 2,   MPI_Win_free(&win);) (32 3,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &shm_comm);) (32 4,   MPI_Comm_rank(shm_comm, &shm_rank);) (32 5,   MPI_Comm_size(shm_comm, &shm_nprocs);) (38 1,   MPI_Info_free(&win_info);) (38 2,   MPI_Win_free(&shm_win);) (39 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 4,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &shm_comm);) (4 5,   MPI_Comm_rank(shm_comm, &shm_rank);) (26 1,   MPI_Info_create(&win_info);) (26 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (26 3,   MPI_Win_allocate((sizeof(double)) * OPSIZE_MAX, sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (34 1,     MPI_Info_free(&win_info);) (36 1,     MPI_Win_free(&win);) (41 1,     MPI_Comm_free(&shm_comm);) (41 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_local_v(local_A, local_v, n, local_n, local_v);) (18 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (74 0,  MPI_Wtime();) (80 1,       MPI_Send(&local_A[i], 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (80 2,       MPI_Send(&local_v[i], 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (80 3,       MPI_Send(&local_w[i], 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (80 4,       MPI_Send(&local_w[i], 1, MPI_DOUBLE, i, 0, MPI_COMM_WORLD);) (83 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (61 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (61 2,   MPI_Bcast(&local_n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (62 1,   MPI_Scatter(&v[0], local_n, MPI_DOUBLE, &local_v[0], local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (76 1,   MPI_Scatter(&At[0], num, MPI_DOUBLE, &local_At[0], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (82 1,   MPI_Barrier(MPI_COMM_WORLD);) (82 0,  MPI_Wtime();) (84 1,   MPI_Barrier(MPI_COMM_WORLD);) (91 1,   MPI_Reduce(&local_w[0], &w[0], n, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (91 2,   MPI_Reduce(&T_fine, &T_max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (109 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,   MPI_Type_contiguous(2, MPI_INT, &contig_2ints);) (19 2,   MPI_Type_commit(&contig_2ints);) (19 3,   MPI_Win_create(0, 0, 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (19 4,   MPI_Win_fence(0, win);) (22 1,     MPI_Get(A + (i * 2), 2, MPI_INT, 1, 0, 2, MPI_INT, win);) (24 1,     MPI_Get(B + (i * 2), 2, MPI_INT, 1, 0, 2, MPI_INT, win);) (27 1,     MPI_Put(A + (i * 2), 2, MPI_INT, 0, 0, 2, MPI_INT, win);) (27 2,   MPI_Win_fence(0, win);) (29 1,     MPI_Get(A + (i * 2), 2, MPI_INT, 0, 0, 2, MPI_INT, win);) (29 2,   MPI_Win_fence(0, win);) (31 1,     MPI_Get(B + (i * 2), 2, MPI_INT, 1, 0, 2, MPI_INT, win);) (31 2,   MPI_Win_fence(0, win);) (51 1,   MPI_Win_free(&win);) (51 2,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (29 1,   MPI_Type_contiguous(2, MPI_INT, &contig_2ints);) (29 2,   MPI_Type_commit(&contig_2ints);) (29 3,   MPI_Win_create(B, (2 * 18) * (sizeof(int)), sizeof(int), MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (29 4,   MPI_Win_fence(0, win);) (32 1,       MPI_Put(A + i, 2, MPI_INT, 1, i, 1, contig_2ints, win);) (37 1,       MPI_Get(A + i, 2, MPI_INT, 0, i, 1, contig_2ints, win);) (39 1,   MPI_Win_fence(0, win);) (51 1,   MPI_Win_free(&win);) (51 2,   MPI_Type_free(&contig_2ints);) (51 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (13 1,     MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (13 2,     MPI_Recv(&message, 1, MPI_INT, num_tasks - 1, 0, MPI_COMM_WORLD, &status);) (16 1,     MPI_Recv(&message, 1, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, &status);) (16 2,     MPI_Send(&message, 1, MPI_INT, (my_rank + 1) % num_tasks, 0, MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 4,   MPI_Get_processor_name(processor_name, &namelen);) (11 1,     MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&message, 1, MPI_INT, num_tasks - 1, 0, MPI_COMM_WORLD, &status);) (16 1,     MPI_Recv(&message, 1, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, &status);) (18 1,     MPI_Send(&message, 1, MPI_INT, (my_rank + 1) % num_tasks, 0, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>arquivo(id_proceso, datos);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id_proceso);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &cant_proceso);) (14 1,       MPI_Send(&dato, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 2,       MPI_Recv(&dato, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &estado);) (20 1,     MPI_Recv(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &estado);) (22 1,     MPI_Send(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 2,     MPI_Recv(&dato, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &estado);) (23 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id_proceso);) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (14 1,       MPI_Send(datos, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (14 2,       MPI_Recv(&plaza, 1, MPI_INT, -1, 0, MPI_COMM_WORLD, &estado);) (18 1,     MPI_Send(datos, 3, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,     MPI_Send(&x, 1, MPI_INT, 1, 1, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&x, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (17 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,     MPI_Send(&x, 1, MPI_INT, 1, 1, MPI_COMM_WORLD);) (15 1,     MPI_Recv(&x, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_MPI_Send(buf, 1, MPI_INT, 1,th, MPI_COMM_WORLD);) (6 1,   MPI_Recv(buf, 1, MPI_INT, 0,th, MPI_COMM_WORLD, &status);) (10 1,       MPI_Get_count(&status, MPI_INT, &buf[i]);) (18 1,       MPI_Send(buf, 1, MPI_INT, 0,th, MPI_COMM_WORLD);) (20 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (10 1,       MPI_Recv(buf, 1, MPI_INTEGER, -1, -1, MPI_COMM_WORLD, &status);) (18 1,       MPI_Send(buf, 1, MPI_INTEGER, 0, i, MPI_COMM_WORLD);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (69 1,     MPI_Bcast(&A_loc_col, 4, MPI_INT, 0, MPI_COMM_WORLD);) (69 2,     MPI_Bcast(&B_loc_col, 4, MPI_INT, 0, MPI_COMM_WORLD);) (69 3,     MPI_Bcast(&C_loc_col, 4, MPI_INT, 0, MPI_COMM_WORLD);) (69 4,     MPI_Bcast(&B_loc_col, 4, MPI_INT, 0, MPI_COMM_WORLD);) (69 5,     MPI_Bcast(&C_loc_col, 4, MPI_INT, 0, MPI_COMM_WORLD);) (69 6,     MPI_Bcast", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (20 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (32 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (61 1,   MPI_Scatter(AT, 4, MPI_INTEGER, A_loc_col, 4, MPI_INTEGER, 0, MPI_COMM_WORLD);) (61 2,   MPI_Scatter(BT, 4, MPI_INTEGER, B_loc_col, 4, MPI_INTEGER, 0, MPI_COMM_WORLD);) (61 3,   MPI_Allgather(A_loc_col, 4, MPI_INTEGER, AT_loc, 4, MPI_INTEGER, MPI_COMM_WORLD);) (80 1,   MPI_Gather(C_loc_col, 4, MPI_INTEGER, CT, 4, MPI_INTEGER, 0, MPI_COMM_WORLD);) (102 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_send(&token, 1, MPI_INT, world_rank + 1, 0, MPI_COMM_WORLD);) (4 1,   MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (7 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (9 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (7 1,     MPI_Recv(&token, 1, MPI_INT, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (9 1,   MPI_Send(&token, 1, MPI_INT, (world_rank + 1) % world_size, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&token, 1, MPI_INT, world_size - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(0, 0);) (19 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcesses);) (30 1,   MPI_Bcast(&row1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 2,   MPI_Bcast(&col1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 3,   MPI_Bcast(&row2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 4,   MPI_Bcast(&col2, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 5,   MPI_Bcast(&row1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (30 6,   MPI_Bcast(&col1, 1, MPI_INT, 0, MPI_COMM_WORLD);) (64 1,   MPI_Bcast(matrix1, row1 * col1, MPI_INT, 0, MPI_COMM_WORLD);) (64 2,   MPI_Bcast(matrix2, row2 * col2, MPI_INT, 0, MPI_COMM_WORLD);) (64 3,   MPI_Bcast(result, row1 * col2, MPI_INT, 0, MPI_COMM_WORLD);) (96 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &numOfProcesses);) (47 1,   MPI_Bcast(&portion, 1, MPI_INT, root, MPI_COMM_WORLD);) (47 2,   MPI_Bcast(&col1, 1, MPI_INT, root, MPI_COMM_WORLD);) (47 3,   MPI_Bcast(&row2, 1, MPI_INT, root, MPI_COMM_WORLD);) (47 4,   MPI_Bcast(&col2, 1, MPI_INT, root, MPI_COMM_WORLD);) (49 1,   MPI_Bcast(matrix2, row2 * col2, MPI_INT, root, MPI_COMM_WORLD);) (50 1,   MPI_Scatter(matrix1, portion * col1, MPI_INT, subMatrix1, portion * col1, MPI_INT, root, MPI_COMM_WORLD);) (83 1,   MPI_Gather(subResult, portion * col2, MPI_INT, result, portion * col2, MPI_INT, root, MPI_COMM_WORLD);) (96 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Bcast(buffer, 10, MPI_INT, 1, MPI_COMM_WORLD);) (11 1,     MPI_Bcast(buffer, 10, MPI_INT, 0, MPI_COMM_WORLD);) (12 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica_Init(&argc, &argv);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (10 1,   MPI_Barrier(MPI_COMM_WORLD);) (10 2,   MPI_Irecv(&message_processed_received, sizeof(char), MPI_CHAR, -1, -1, MPI_COMM_WORLD, &receive_parsed_text_request);) (10 3,   MPI_Wait(&receive_parsed_request, &status);) (10 4,   MPI_Wait(&send_parsed_request, &status);) (10 5,   MPI_Barrier(MPI_COMM_WORLD);) (10 6,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &process_rank);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &process_size);) (13 1,   MPI_Barrier(MPI_COMM_WORLD);) (13 2,   MPI_Recv(message_processed_received, 90, MPI_BYTE, sender_process_rank, process_tag, MPI_COMM_WORLD, &status);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_1d = (int) (((data - world_rank) + 1) / (world_size - 1);) (data - world_rank) + 1, 1);) (19 1,       MPI_Irecv(&data, 1, MPI_INT, i, 0, MPI_COMM_WORLD, &request);) (19 2,       MPI_Wait(&request, MPI_STATUS_IGNORE);) (35 1,     MPI_Irecv(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (35 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (36 1,     MPI_Isend(&sendarr[0], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (36 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (37 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (15 1,     MPI_Irecv(&sendarr[0], 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (15 2,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (19 1,       MPI_Recv(&sendarr[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (30 1,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (30 2,     MPI_Irecv(&buff, 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (30 3,     MPI_Send(&sum, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (30 4,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (35 1,     MPI_Send(&data, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(20 1,   MPI_Init(&argc, &argv);) (22 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (23 0,  MPI_Wtime();) (25 1,     MPI_Barrier(MPI_COMM_WORLD);) (25 0,  MPI_Wtime();) (33 1,     MPI_Barrier(MPI_COMM_WORLD);) (33 0,  MPI_Wtime();) (39 1,     MPI_Barrier(MPI_COMM_WORLD);) (39 0,  MPI_Wtime();) (42 1,     MPI_Barrier(MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (49 1,     MPI_Barrier(MPI_COMM_WORLD);) (49 0,  MPI_Wtime();) (51 1,     MPI_Barrier(MPI_COMM_WORLD);) (51 0,  MPI_Wtime();) (54 1,     MPI_Barrier(MPI_COMM_WORLD);) (54 0,  MPI_Wtime();) (57 1,   MPI_Finalize();)             MPI_Error_string(i, ldata, &ldata[5]);) (65 1,   MPI_Type_vector(tsize, 1, ldata, MPI_DOUBLE, &darray);) (65 2,   MPI_Type_commit(&darray);) (65 3,   MPI_Type_free(&darray);) (65 4,   MPI_Barrier(MPI_COMM_WORLD);) (65 0,  MPI", "label": " (20 1,   MPI_Init(&argc, &argv);) (20 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 0,  MPI_Type_create_darray(size, rank, 2, gsize, distrib, bsize, psize, 1, MPI_DOUBLE, &darray);) (23 1,  \"MPI_Type_create_darray(size, rank, 2, gsize, distrib, bsize, psize, MPI_ORDER_FORTRAN, MPI_DOUBLE, &darray)\");) (27 0,  MPI_Type_commit(&darray);) (28 1,  \"MPI_Type_commit(&darray)\");) (32 0,  MPI_Type_size(darray, &tsize);) (33 1,  \"MPI_Type_size(darray, &tsize)\");) (45 1,   MPI_Barrier(MPI_COMM_WORLD);) (50 0,  MPI_Pack(data, 1, darray, pdata, tsize, &bpos, MPI_COMM_WORLD);) (51 1,  \"MPI_Pack(data, 1, darray, pdata, tsize, &bpos, MPI_COMM_WORLD)\");) (53 1,   MPI_Barrier(MPI_COMM_WORLD);) (55 0,  MPI_File_open(MPI_COMM_WORLD, \"tmpfile.dat\", 2, MPI_INFO_NULL, &mpi_fh);) (56 1,  \"MPI_File_open(MPI_COMM_WORLD, \\\"tmpfile.dat\\\", MPI_MODE_RDONLY, MPI_INFO_NULL, &mpi_fh)\");) (60 0,  MPI_File_set_view(mpi_fh, 0, MPI_DOUBLE, darray, \"native\", MPI_INFO_NULL);) (61 1,  \"MPI_File_set_view(mpi_fh, 0, MPI_DOUBLE, darray, \\\"native\\\", MPI_INFO_NULL)\");) (65 0,  MPI_File_read_all(mpi_fh, ldata, nelem, MPI_DOUBLE, &status);) (66 1,  \"MPI_File_read_all(mpi_fh, ldata, nelem, MPI_DOUBLE, &status)\");) (70 0,  MPI_File_close(&mpi_fh);) (71 1,  \"MPI_File_close(&mpi_fh)\");) (75 1,     MPI_Barrier(MPI_COMM_WORLD);) (98 1,   MPI_Type_free(&darray);) (98 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &procNum);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &procRank);) (8 1,     MPI_Send(&buf, 1, MPI_INT, procRank + 1, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&buf, 1, MPI_INT, procRank - 1, 0, MPI_COMM_WORLD, &status);) (14 1,       MPI_Send(&buf, 1, MPI_INT, procRank + 1, 0, MPI_COMM_WORLD);) (16 1,       MPI_Recv(&buf, 1, MPI_INT, procRank - 1, 0, MPI_COMM_WORLD, &status);) (20 1,       MPI_Send(&buf, 1, MPI_INT, procRank + 1, 0, MPI_COMM_WORLD);) (27 1,       MPI_Recv(&buf, 1, MPI_INT, procRank - 1, 0, MPI_COMM_WORLD, &status);) (31 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &procNum);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &procRank);) (16 1,       MPI_Send(&procRank, 1, MPI_INT, procRank + 1, 0, MPI_COMM_WORLD);) (20 1,       MPI_Recv(&buf, 1, MPI_INT, procRank - 1, 0, MPI_COMM_WORLD, &status);) (26 1,       MPI_Recv(&buf, 1, MPI_INT, procRank - 1, 0, MPI_COMM_WORLD, &status);) (29 1,       MPI_Send(&procRank, 1, MPI_INT, procRank + 1, 0, MPI_COMM_WORLD);) (31 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13:   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000000, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Send(&x, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (12 1,     MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (17 1,     MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (24 1,     MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 1,     MPI_Send(&x, 1, MPI_INT, rank + 1, 101, MPI_COMM_WORLD);) (12 2,     MPI_Recv(&x, 1, MPI_INT, size - 1, 101, MPI_COMM_WORLD, &status);) (17 1,     MPI_Recv(&x, 1, MPI_INT, rank - 1, 101, MPI_COMM_WORLD, &status);) (21 1,       MPI_Send(&x, 1, MPI_INT, 0, 101, MPI_COMM_WORLD);) (22 1,       MPI_Send(&x, 1, MPI_INT, rank + 1, 101, MPI_COMM_WORLD);) (24 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &procNum);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &procRank);) (18 1,         MPI_Recv(&buf, 1, MPI_INT, i, -1, MPI_COMM_WORLD, &status);) (24 1,       MPI_Send(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)             MPI_Recv(&buf, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);)             MPI_Finalize();)               MPI_Send(&buf, 1, MPI_INT, 0, i, MPI_COMM_WORLD);)             MPI_Send(&buf, 1, MPI_INT, 0, i, MPI_COMM_WORLD);)         MPI_Recv(&buf, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);)             MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &procNum);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &procRank);) (18 1,         MPI_Send(&i, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (24 1,       MPI_Recv(&buf, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (27 1,       MPI_Send(&procRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(23 1,   MPI_Init(&argc, &argv);) (23 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (23 3,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (23 4,   MPI_Get_processor_name(processor, &name);) (23 5,   MPI_Get_address(&ptype.tv_sec, &displacements[0]);) (23 6,   MPI_Get_address(&ptype.tv_usec, &displacements[1]);) (23 7,   MPI_Get_address(&ptype.tv_sec, &displacements[2]);) (23 8,   MPI_Get_address(&ptype.tv_usec, &displacements[3]);) (23 9,   MPI_Get_address(&ptype.tv_sec, &displacements[4]);) (23 10,   MPI_Get_address(&ptype.tv_usec, &displacements[5]);) (23 11,   MPI_Get_address(&ptype.tv_sec, &displacements[6]);) (23 12,   MPI_Get_address(&ptype.tv_usec, &displacements[7]);) (23 13,   MPI_Get_address(&ptype.tv_sec, &displacements[8]);) (23 14,   MPI_Get_address(&ptype.tv_usec, &displacements[9]);) (23 15,   MPI_Get_address(&p", "label": " (14 1,   MPI_Init(&argc, &argv);) (24 1,   MPI_Type_extent(MPI_INT, &intex);) (26 1,   MPI_Type_struct(2, blocklengths, displacements, types, &ptype);) (26 2,   MPI_Type_commit(&ptype);) (28 1,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (28 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (56 1,   MPI_Barrier(MPI_COMM_WORLD);) (56 2,   MPI_Recv(&critical_grant, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (58 1,   MPI_Recv(&token, 1, MPI_INT, 0, 2, MPI_COMM_WORLD, &status);) (67 1,       MPI_Iprobe(-1, 3, MPI_COMM_WORLD, &flag, &status);) (69 1,         MPI_Recv(&SN, 1, MPI_INT, -1, 3, MPI_COMM_WORLD, &status);) (75 1,         MPI_Send(&src_token, 1, MPI_INT, status.MPI_SOURCE, 4, MPI_COMM_WORLD);) (91 1,             MPI_Send(&SN, 1, MPI_INT, i, 3, MPI_COMM_WORLD);) (94 1,         MPI_Recv(&token, 1, MPI_INT, -1, 4, MPI_COMM_WORLD, &status);) (103 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 0,  MPI_Gather(sendbuf, 1, MPI_INT, recvbuf, size, MPI_INT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 4,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 0,  MPI_Gather(sendbuf, 1, MPI_INT, recvbuf, size, MPI_INT, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_test(MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,   MPI_Info_create(&info);) (22 2,   MPI_Info_set(info, \"ompi_global_scope\", \"true\");) (22 3,   MPI_Win_allocate((32 * nprocs) * (sizeof(double)), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (35 1,     MPI_Info_free(&info);) (37 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Win_allocate((sizeof(double)) * 2, sizeof(double), info, MPI_COMM_WORLD, &winbuf, &win);) (17 2,   MPI_Win_lock_all(0, win);) (22 1,   MPI_Win_unlock_all(win);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (34 1,     MPI_Info_free(&info);) (35 1,     MPI_Win_free(&win);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(comm, &comm_sz);) (11 3,   MPI_Comm_rank(comm, &my_rank);) (20 1,     MPI_Barrier(comm);) (20 0,  MPI_Wtime();) (21 0,  MPI_Wtime();) (23 1,     MPI_Barrier(comm);) (23 0,  MPI_Wtime();) (28 1,     MPI_Barrier(comm);) (28 0,  MPI_Wtime();) (32 1,     MPI_Barrier(comm);) (32 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(comm, &comm_sz);) (10 2,   MPI_Comm_rank(comm, &my_rank);) (19 1,     MPI_Type_contiguous(n + 1, MPI_INT, &tour_arr_mpi_t);) (19 2,     MPI_Type_commit(&tour_arr_mpi_t);) (19 3,     MPI_Pack_size(1, MPI_INT, comm, &one_msg_sz);) (20 1,     MPI_Buffer_attach(mpi_buffer, (100 * comm_sz) * (one_msg_sz + 128));) (20 0,  MPI_Wtime();) (21 0,  MPI_Wtime();) (22 1,     MPI_Barrier(comm);) (22 2,     MPI_Buffer_detach(&ret_buf, &one_msg_sz);) (28 1,     MPI_Type_free(&tour_arr_mpi_t);) (31 1,     MPI_Barrier(comm);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 1,   MPI_Dims_create(size, 4, &size);) (15 2,   MPI_Cart_create(MPI_COMM_WORLD, 1, &size, &toterr, &status);) (15 3,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (15 4,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 5,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 1,   MPI_Bcast(&xlocal[12 / size][12], 12 * 12, MPI_CHAR, 0, MPI_COMM_WORLD);) (27 2,   MPI_Bcast(&xlocal[0][0], 12 * 12, MPI_CHAR, 0, MPI_COMM_WORLD);) (27 3,   MPI_Bcast(&xlocal[1][0], 12 * 12, MPI_CHAR, 0,", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (28 1,     MPI_Isend(xlocal[12 / size], 12, MPI_DOUBLE, rank + 1, 0, MPI_COMM_WORLD, &req[req_counter++]);) (29 1,     MPI_Irecv(xlocal[0], 12, MPI_DOUBLE, rank - 1, 0, MPI_COMM_WORLD, &req[req_counter++]);) (30 1,     MPI_Isend(xlocal[1], 12, MPI_DOUBLE, rank - 1, 1, MPI_COMM_WORLD, &req[req_counter++]);) (31 1,     MPI_Irecv(xlocal[(12 / size) + 1], 12, MPI_DOUBLE, rank + 1, 1, MPI_COMM_WORLD, &req[req_counter++]);) (31 2,   MPI_Waitall(req_counter, req, status);) (47 1,   MPI_Reduce(&errcnt, &toterr, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (68 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (11 1,       MPI_Send(&ProcRank, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (17 1,     MPI_Recv(&RecvRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &Status);) (17 2,     MPI_Finalize();) (18 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &ProcNum);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ProcRank);) (11 1,       MPI_Recv(&RecvRank, 1, MPI_INT, i % 2, -1, MPI_COMM_WORLD, &Status);) (17 1,     MPI_Send(&ProcRank, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (42 0,  MPI_Wtime();) (47 1,     MPI_Reduce(&sum, &globalExcess, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (47 2,     MPI_Reduce(&localTask, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (54 0,  MPI_Wtime();) (55 1,   MPI_Finalize();)             MPI_", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,       MPI_Bcast(&status, 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 2,       MPI_Finalize();) (19 1,     MPI_Bcast(&status, 1, MPI_INT, 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (42 1,     MPI_Scatter(taskShedule, 3, MPI_INT, &localTask, 3, MPI_INT, 0, MPI_COMM_WORLD);) (42 2,     MPI_Bcast(term1, tasksNumber, MPI_INT, 0, MPI_COMM_WORLD);) (42 3,     MPI_Bcast(term2, tasksNumber, MPI_INT, 0, MPI_COMM_WORLD);) (44 1,     MPI_Gather(sendBuf, localLen, MPI_INT, sum, localLen, MPI_INT, 0, MPI_COMM_WORLD);) (48 1,     MPI_Bcast(&status, 1, MPI_INT, 0, MPI_COMM_WORLD);) (50 1,       MPI_Finalize();) (52 1,     MPI_Scatter(0, 0, 0, &localTask, 3, MPI_INT, 0, MPI_COMM_WORLD);) (54 1,     MPI_Bcast(term1, localTask.tasksNum, MPI_INT, 0, MPI_COMM_WORLD);) (54 2,     MPI_Bcast(term2, localTask.tasksNum, MPI_INT, 0, MPI_COMM_WORLD);) (54 0,  MPI_Wtime();) (73 1,     MPI_Gather(sum, localTask.end - localTask.start, MPI_INT, 0, localTask.tasksNum, MPI_INT, 0, MPI_COMM_WORLD);) (73 0,  MPI_Wtime();) (74 1,   MPI_Barrier(MPI_COMM_WORLD);) (76 0,  MPI_Wtime();) (78 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,   MPI_Bcast(&arr, size, MPI_LONG, 0, MPI_COMM_WORLD);) (19 1,   MPI_Reduce(&fact, &fact, 1, MPI_LONG, MPI_PROD, 0, MPI_COMM_WORLD);) (19 2,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,   MPI_Scatter(arr, 1, MPI_INT, &num, 1, MPI_INT, 0, MPI_COMM_WORLD);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (17 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (21 1,     MPI_Irecv(&buffer, count, MPI_INT, source, tag, MPI_COMM_WORLD, &request);) (22 1,     MPI_Wait(&request, &status);) (23 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&buffer, count, MPI_INT, source, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (23 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (7 1,   MPI_Get_address(&buf->c, &displacements[0]);) (7 2,   MPI_Get_address(&buf->d, &displacements[1]);) (7 3,   MPI_Get_address(&buf->e, &displacements[2]);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Type_free(&new_t);) (25 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (8 1,   MPI_Get_address(buf, displacements);) (8 2,   MPI_Get_address(&buf->c, displacements + 1);) (8 3,   MPI_Get_address(&buf->d, displacements + 2);) (15 1,   MPI_Type_create_struct(count, blocklengths, displacements, old_types, &new_t);) (15 2,   MPI_Type_commit(&new_t);) (20 1,     MPI_Send(buf, 1, new_t, 1, 0, MPI_COMM_WORLD);) (24 1,     MPI_Recv(buf, 1, new_t, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (26 1,   MPI_Type_free(&new_t);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_5 1,   MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &g.ID);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &g.num_proc);) (20 1,   MPI_Scatter(A, 2, MPI_INT, &g.A, 2, MPI_INT, 0, MPI_COMM_WORLD);) (20 2,   MPI_Scatter(B, 2, MPI_INT, &g.B, 2, MPI_INT, 0, MPI_COMM_WORLD);) (22 1,   MPI_Gather(g.C, 2, MPI_INT, C, 2, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &g.ID);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &g.num_proc);) (19 1,   MPI_Scatter(A, 1, MPI_INT, &g.A, 1, MPI_INT, 0, MPI_COMM_WORLD);) (19 2,   MPI_Scatter(B, 1, MPI_INT, &g.B, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,   MPI_Cart_create(MPI_COMM_WORLD, 2, dims, periods, 0, &g.comm);) (22 1,   MPI_Cart_sub(g.comm, sub_group[0], &g.row_comm);) (22 2,   MPI_Cart_sub(g.comm, sub_group[1], &g.col_comm);) (22 3,   MPI_Comm_rank(g.col_comm, &g.row);) (22 4,   MPI_Comm_rank(g.row_comm, &g.col);) (22 5,   MPI_Sendrecv_replace(&g.A, 1, MPI_INT, ((g.col - g.row) + g.proc_per_dim) % g.proc_per_dim, 0, (g.col + g.row) % g.proc_per_dim, 0, g.row_comm, MPI_STATUS_IGNORE);) (22 6,   MPI_Sendrecv_replace(&g.B, 1, MPI_INT, ((g.row - g.col) + g.proc_per_dim) % g.proc_per_dim, 0, (g.row + g.col) % g.proc_per_dim, 0, g.col_comm, MPI_STATUS_IGNORE);) (25 1,     MPI_Sendrecv_replace(&g.A, 1, MPI_INT, ((g.col - 1) + g.proc_per_dim) % g.proc_per_dim, 0, (g.col + 1) % g.proc_per_dim, 0, g.row_comm, MPI_STATUS_IGNORE);) (25 2,     MPI_Sendrecv_replace(&g.B, 1, MPI_INT, ((g.row - 1) + g.proc_per_dim) % g.proc_per_dim, 0, (g.row + 1) % g.proc_per_dim, 0, g.col_comm, MPI_STATUS_IGNORE);) (28 1,   MPI_Gather(&g.C, 1, MPI_INT, C, 1, MPI_INT, 0, MPI_COMM_WORLD);) (33 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 4,   MPI_Get_processor_name(hostname, &isDone);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 0,  MPI_Init(&argc, &argv);) (14 1,   MPI_Finalize();)", "label": " (7 0,  MPI_Init(&argc, &argv);) (10 1,     MPI_Abort(MPI_COMM_WORLD, isDone);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Get_processor_name(hostname, &pName);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &n);) (7 1,     MPI_Finalize();) (14 1,   MPI_Isend(s, n, MPI_INT, 0, 0, MPI_COMM_WORLD, &r[i]);) (14 2,   MPI_Waitall(n, r, MPI_STATUS_IGNORE);) (15 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (7 1,     MPI_Irecv(0, 0, MPI_CHAR, -1, -1, MPI_COMM_WORLD, &r[i]);) (11 1,     MPI_Isend(0, 0, MPI_CHAR, me, i, MPI_COMM_WORLD, &r[n + i]);) (13 1,   MPI_Waitall(n, r, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>acion (7 1,   MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (9 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (35 1,       MPI_Send(&array[0], 3, MPI_DOUBLE, world_rank + 1, 0, MPI_COMM_WORLD);) (35 2,       MPI_Send(&array[1], 3, MPI_DOUBLE, world_rank + 1, 1, MPI_COMM_WORLD);) (41 1,       MPI_Recv(&array[2], 3, MPI_DOUBLE, world_rank - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 2,       MPI_Recv(&array[3], 3, MPI_DOUBLE, world_rank - 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (45 1,   MPI_Reduce(&t_cpu, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (51 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (32 1,     MPI_Scatter(array, 1, MPI_DOUBLE, &array2, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (32 2,     MPI_Gather(&array2, 1, MPI_DOUBLE, array3, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (51 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica:   MPI_Init(0, 0);) (5 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (40 1,   MPI_Scatter(T, 1, MPI_INT, &s, 1, MPI_INT, 0, MPI_COMM_WORLD);) (42 1,       MPI_Send(T, 1, MPI_INT, i, 1, MPI_COMM_WORLD);) (47 1,       MPI_Recv(&s[i - 1], 1, MPI_INT, i, 1, MPI_COMM_WORLD, &status);) (64 1,       MPI_Send(T, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (70 1,     MPI_Recv(T, 1, MPI_INT, 0, 1, MPI_COMM_WORLD, &status);) (79 1,     MPI_Send(&s[0], 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (81 1,   MPI_Finalize();)", "label": " (15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (27 1,       MPI_Send(s, tamanho_s, MPI_INT, i, 0, MPI_COMM_WORLD);) (34 1,     MPI_Send(s, aux, MPI_INT, i, 0, MPI_COMM_WORLD);) (44 1,       MPI_Recv(s, aux, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (47 1,       MPI_Recv(s, tamanho_s, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (68 1,     MPI_Bcast(&T[i], 1, MPI_INT, i, MPI_COMM_WORLD);) (101 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n47:   MPI_Init(&argc, &argv);) (15 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (26 1,   MPI_Bcast(&matrix[0][0], (sizeof(char)) *p0Size, MPI_CHAR, 0, MPI_COMM_WORLD);) (26 2,   MPI_Bcast(&matrix[p0][0], (sizeof(char)) *p1Size, MPI_CHAR, 0, MPI_COMM_WORLD);) (41 1,   MPI_Finalize();)", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ator_Init(&argc, &argv);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Bcast(&f, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 1,   MPI_Bcast(&f, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (11 1,   MPI_Reduce(&f, &g, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,   MPI_Bcast(&num, 1, MPI_INT, 0, MPI_COMM_WORLD);) (20 1,   MPI_Reduce(&sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (21 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 1,   MPI_Barrier(MPI_COMM_WORLD);) (28 2,   MPI_Reduce(&sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (41 1,   MPI_Barrier(MPI_COMM_WORLD);) (41 2,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 1,   MPI_Scatter(arr, 1, MPI_INT, &num, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,   MPI_Gather(&fact, 1, MPI_INT, factarr, 1, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (46 1,       MPI_Abort(MPI_COMM_WORLD, me);) (57 0,  MPI_Wtime();) (69 1,     MPI_Send(local_w, local_n, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (69 2,     MPI_Send(v, n, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (69 3,     MPI_Send(&local_w[i], 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (69 4,     MPI_Send(&local_v[i], 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD);) (69 5,     MPI_Recv(local_w, local_n, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (69 6,     MPI_Recv(v, n, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (69 7,     MPI_Recv(&local_w[i], 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (69 8,     MPI_Recv", "label": " (18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (57 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 2,   MPI_Bcast(&local_n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (58 1,   MPI_Scatter(&v[0], local_n, MPI_DOUBLE, &local_v[0], local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (61 1,   MPI_Scatter(&A[0], num, MPI_DOUBLE, &local_A[0], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (71 1,   MPI_Barrier(MPI_COMM_WORLD);) (71 0,  MPI_Wtime();) (85 1,   MPI_Barrier(MPI_COMM_WORLD);) (86 1,   MPI_Reduce(&local_w[0], &w[0], n, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (86 2,   MPI_Reduce(&T_fine, &T_max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (97 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ations = d.numCols;\n71:   for (i = 0; i < (numProcs - 1); i++)\n72:   {\n73:     for (j = 0; j < (myRows + 1); j++)\n74:     {\n75:       for (i = 0; i < (myCols + 1); i++)\n76:       {\n77:         if (matrix[i][i] == 1)\n78:         {\n79:           for (j = 0; j < (myCols + 1); j++)\n80:           {\n81:             if (matrix[i][j] == 0)\n82:             {\n83:               mat_result[i][j] = 0;\n84:             }\n85:           }\n86: \n87:         }\n88:       }\n89: \n90:     }\n91: \n92:   }\n93: \n94:   if (myRank == 0)\n95:   {\n96:     printf(\"\\n\\n\\nDone in %d procs : %d\\n\", numProcs, myRows);\n97:     for (i = 0; i < myRows; i++)\n98:     {\n99:       printf(\"\\n\\n\");\n100:     }\n101: \n102:     printf(\"\\n\\n\\nTotal running time : %lf \\n\", (((double) d.numRows) / ((double) d.numCols)));\n103:   }\n104:   return 0;\n105: }\n106:", "label": " (28 1,   MPI_Init(&argc, &argv);) (28 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (28 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (45 1,     MPI_Send(matrix[1], myCols, MPI_CHAR, myRank - 1, 0, MPI_COMM_WORLD);) (48 1,     MPI_Recv(matrix[myRows - 1], myCols, MPI_CHAR, myRank + 1, 0, MPI_COMM_WORLD, &status);) (48 2,     MPI_Send(matrix[myRows - 2], myCols, MPI_CHAR, myRank + 1, 0, MPI_COMM_WORLD);) (51 1,     MPI_Recv(matrix[0], myCols, MPI_CHAR, myRank - 1, 0, MPI_COMM_WORLD, &status);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &node_num);) (28 1,       MPI_Recv(&data_rec[i], 1, MPI_LONG, i, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 2, MPI_COMM_WORLD);) (34 1,     MPI_Send(&data_rec[0], 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&data_rec[i], 1, MPI_LONG, i, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &id);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &node_num);) (29 1,       MPI_Send(&count, 1, MPI_INT, 0, 1, MPI_COMM_WORLD);) (29 2,       MPI_Send(&epochs, 1, MPI_LONG, 0, 2, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&data_rec[i], node_num, MPI_INT, -1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (37 2,       MPI_Recv(&data_ep[i], node_num, MPI_LONG, -1, 2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (53 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (12 1,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Isend(buffer, 1000, MPI_INT, -1, 124523, MPI_COMM_WORLD, &mpi_request);) (8 2,     MPI_Wait(&mpi_request, &mpi_status);) (12 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 1,   MPI_Allreduce(&count, &total, 1, MPI_LONG_LONG_INT, MPI_SUM, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,   MPI_Gather(sendBuff, 1, MPI_LONG, recvBuff, 1, MPI_LONG, 0, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>antidad(rank, tam);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &tam);) (10 1,     MPI_Send(msg, strlen(msg) + 1, MPI_CHAR, 1, tag, MPI_COMM_WORLD);) (14 1,     MPI_Recv(msg, 20, MPI_CHAR, 0, tag, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &tam);) (10 1,     MPI_Send(msg, strlen(msg) + 1, MPI_CHAR, 1, tag, MPI_COMM_WORLD);) (14 1,     MPI_Recv(msg, 20, MPI_CHAR, 0, tag, MPI_COMM_WORLD, &status);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>acks4(MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,     MPI_Finalize();) (23 0,  MPI_Wtime();) (25 1,   MPI_Scatter(locations, chunk, MPI_INT, local_locations, chunk, MPI_INT, 0, MPI_COMM_WORLD);) (38 1,   MPI_Gather(local_locations, chunk, MPI_INT, locals, chunk, MPI_INT, 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (50 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 1,       MPI_Finalize();) (23 0,  MPI_Wtime();) (30 1,     MPI_Finalize();) (32 1,   MPI_Bcast(init_array, 8, MPI_INT, 0, MPI_COMM_WORLD);) (39 1,       MPI_Finalize();) (41 1,     MPI_Gather(local_locations, stop - start, MPI_INT, locations, stop - start, MPI_INT, 0, MPI_COMM_WORLD);) (42 0,  MPI_Wtime();) (48 1,     MPI_Gather(local_locations, stop - start, MPI_INT, locations, stop - start, MPI_INT, 0, MPI_COMM_WORLD);) (48 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Recv(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,     MPI_Send(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD);) (12 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, size, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 1,     MPI_File_delete(\"../check.txt\", MPI_INFO_NULL);) (24 1,       MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 4 + 1, MPI_INFO_NULL, &fh);) (29 1,   MPI_Finalize();)         MPI_File_close(&fh);) (29 2,   MPI_Finalize();)         MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 2, MPI_INFO_NULL, &fh);)       MPI_File_close(&fh);) (29 3,   MPI_Finalize();)       MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 4 + 1, MPI_INFO_NULL, &fh);)     MPI_File_close(&fh);) (29 4,   MPI_Finalize();)       MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 4 + 1, MPI_INFO_NULL, &fh);)     MPI_File_close(&fh);) (29 5,   MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 2, MPI_INFO_NULL, &fh);)     MPI_File_close(&fh);) (29 6,   MPI_File_open(MPI_COMM_WORLD, \"check.txt\", 4 + 1, MPI_INFO_NULL,", "label": " (13 1,       MPI_Error_string(MPI_Init(&argc, &argv), resultString, &resultLength);) (15 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (18 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (24 1,       MPI_Error_string(MPI_File_open(MPI_COMM_WORLD, \"blah\", 1 | 4, MPI_INFO_NULL, &fh), resultString, &resultLength);) (26 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (29 1,   MPI_File_close(&fh);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Bcast(&m, 1, MPI_INT, 0, MPI_COMM_WORLD);) (18 2,   MPI_Bcast(&arr, 100, MPI_INT, 0, MPI_COMM_WORLD);) (27 1,   MPI_Reduce(&avg, &totavg, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Bcast(&m, 1, MPI_INT, 0, MPI_COMM_WORLD);) (18 2,   MPI_Scatter(arr, m, MPI_INT, temparr, m, MPI_INT, 0, MPI_COMM_WORLD);) (28 1,   MPI_Gather(&avg, 1, MPI_FLOAT, averages, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13:   MPI_Init(&argc, &argv);) (11 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 2,   MPI_Comm_get_parent(&parent);) (18 1,     MPI_Info_create(&info);) (18 2,     MPI_Info_set(info, \"ompi_global_scope\", \"true\");) (18 3,     MPI_Comm_spawn(argv[0], (char **) 0, 1, info, 0, MPI_COMM_WORLD, &child, (int *) 0)))     {       printf(\"Child failed to spawn\\n\");) (19 1,       MPI_Send(&t1, 0, MPI_DOUBLE, 0, 0, child);) (19 2,       MPI_Recv(&t2, 0, MPI_DOUBLE, 0, 0, parent, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Info_create(&info);) (10 2,   MPI_Info_set(info, \"hostfile\", \"slaves\");) (11 0,  MPI_Comm_spawn(\"child\", (char **) 0, NUM_PROCESSES, info, 0, MPI_COMM_WORLD, &child, (int *) 0);) (19 1,   MPI_Comm_disconnect(&child);) (19 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (19 1,     MPI_Irecv(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &request);) (19 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 1,   MPI_Finalize();)       MPI_Abort(MPI_COMM_WORLD, 1);)     MPI_Wait(&request, MPI_STATUS_IGNORE);)     MPI_Irecv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (22 2,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 3,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 4,     MPI_Irecv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, &request);) (22 5,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 6,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 7,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 8,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 9,     MPI_Send(&value_sent, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (22 10,     MPI_Send(&value_received", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, -1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,     MPI_Isend(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, &request);) (13 1,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (19 1,     MPI_Irecv(&value_received, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, &request);) (20 1,     MPI_Wait(&request, MPI_STATUS_IGNORE);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,     MPI_Finalize();) (30 1,       MPI_Send(buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD);) (30 2,       MPI_Recv(buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (32 1,     MPI_Finalize();) (47 1,     MPI_Recv(big_buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD, &status);) (47 2,     MPI_Send(big_buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD);) (50 1,     MPI_Send(big_buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD);) (50 2,     MPI_Recv(big_buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (57 1,     MPI_Send(big_buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD);) (57 2,     MPI_Recv(big_buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD, &status);) (65 1,       MPI_Recv(big_buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (65 2,", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,     MPI_Finalize();) (29 1,       MPI_Send(buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD);) (29 2,       MPI_Recv(buffer, 100, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (36 1,       MPI_Send(big_buffer, 100 * 1024, MPI_BYTE, 1, tag, MPI_COMM_WORLD);) (36 2,       MPI_Recv(big_buffer, 100 * 1024, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (43 1,       MPI_Send(big_buffer, 256 * 1024, MPI_BYTE, 1, tag, MPI_COMM_WORLD);) (43 2,       MPI_Recv(big_buffer, 256 * 1024, MPI_BYTE, 1, tag, MPI_COMM_WORLD, &status);) (53 1,       MPI_Recv(buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD, &status);) (53 2,       MPI_Send(buffer, 100, MPI_BYTE, 0, tag, MPI_COMM_WORLD);) (59 1,       MPI_Recv(big_buffer, 100 * 1024, MPI_BYTE, 0, tag, MPI_COMM_WORLD, &status);) (59 2,       MPI_Send(big_buffer, 100 * 1024, MPI_BYTE, 0, tag, MPI_COMM_WORLD);) (65 1,       MPI_Recv(big_buffer, 256 * 1024, MPI_BYTE, 0, tag, MPI_COMM_WORLD, &status);) (65 2,       MPI_Send(big_buffer, 256 * 1024, MPI_BYTE, 0, tag, MPI_COMM_WORLD);) (75 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(buffer, 1000, null_type, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ace_sort(MPI_COMM_WORLD, init_array, 8, 1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 0,  MPI_Wtime();) (17 0,  MPI_Wtime();) (24 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,   MPI_Bcast(init_array, 8, MPI_INT, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (23 1,   MPI_Reduce(init_array, sorted_array, 8, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (25 0,  MPI_Wtime();) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, null_comm, &req);) (13 2,     MPI_Wait(&req, &stat);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(0, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_5 1,   MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,   MPI_Scatter(init_array, size, MPI_INT, &received, 1, MPI_INT, 0, MPI_COMM_WORLD);) (17 2,   MPI_Barrier(MPI_COMM_WORLD);) (17 3,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_broadcast(world_rank, world_size, i_number);) (7 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (9 1,     MPI_Send(&i_number, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&i_number, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (6 1,   MPI_Get_processor_name(processor_name, &name_len);) (10 1,     MPI_Send(&i_number, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 1,     MPI_Recv(&i_number, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (15 1,       MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (15 2,       MPI_Recv(&message, 1, MPI_INT, n - 1, 0, MPI_COMM_WORLD, &status);) (19 1,       MPI_Recv(&message, 1, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, &status);) (19 2,       MPI_Send(&message, 1, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD);) (22 1,       MPI_Send(&message, 1, MPI_INT, my_rank + 1, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_tasks);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 4,   MPI_Get_processor_name(processor_name, &namelen);) (14 1,       MPI_Send(&message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (15 1,       MPI_Recv(&message, 1, MPI_INT, num_tasks - 1, 0, MPI_COMM_WORLD, &status);) (19 1,       MPI_Recv(&message, 1, MPI_INT, my_rank - 1, 0, MPI_COMM_WORLD, &status);) (21 1,       MPI_Send(&message, 1, MPI_INT, (my_rank + 1) % num_tasks, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,   MPI_Info_create(&info);) (16 2,   MPI_Info_set(info, \"hostfile_shared_non_blocking\", \"true\");) (17 1,   MPI_Info_set(info, \"ompi_global_non_blocking\", \"true\");) (19 1,   MPI_Info_set(info, \"ompi_global_non_blocking_size\", \"true\");) (19 2,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (19 3,   MPI_Win_free(&win);) (19 4,   MPI_Info_free(&info);) (19 5,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Info_create(&info);) (11 2,   MPI_Info_set(info, (char *) \"shmbuf_regist\", (char *) \"true\");) (11 3,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, info, &shm_comm);) (11 4,   MPI_Win_allocate_shared(((sizeof(double)) * 10) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &sbuf, &sbuf_win);) (11 5,   MPI_Win_allocate_shared(((sizeof(double)) * 10) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &rbuf, &rbuf_win);) (17 1,   MPI_Info_free(&info);) (17 2,   MPI_Info_create(&info);) (17 3,   MPI_Info_set(info, (char *) \"wildcard_used\", (char *) \"none\");) (17 4,   MPI_Info_set(info, (char *) \"datatype_used\", (char *) \"predefined\");) (17 5,   MPI_Comm_dup_with_info(MPI_COMM_WORLD, info, &comm_world);) (17 6,   MPI_Barrier(comm_world);) (23 1,     MPI_Info_free(&info);) (24 1,     MPI_Win_free(&sbuf_win);) (25 1,     MPI_Win_free(&rbuf_win);) (26 1,     MPI_Comm_free(&shm_comm);) (27 1,     MPI_Comm_free(&comm_world);) (27 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (16 0,  MPI_Wtime();) (27 1,   MPI_Bcast(&chunk, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 2,   MPI_Bcast(&chunk, 1, MPI_INT, 0, MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (15 1,   MPI_Bcast(array, 21 + 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (29 1,     MPI_Finalize();) (35 0,  MPI_Wtime();) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = (char *) malloc((sizeof(char)) * 100);\n41:   char tempstr[100];\n42:   strcpy(tempstr, \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\");\n43:   for (int i = 0; i < (size - 1); i++)\n44:   {\n45:     if (strchr(\"aachencirqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", rank - 1, tempstr[i]))\n46:     {\n47:       printf(\"\\nProcess %d Recv aacja vowcirqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", rank - 1, tempstr[i]))\n48:       {\n49:         printf(\"\\nProcess %d Recv aacja vowcirqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", rank - 1, tempstr[i]))\n50:         {\n51:           printf(\"\\nProcess %d Recv aacja vowcirqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", rank - 1, tempstr[i]))\n52:           {\n53:             printf(\"\\nProcess %d Recv aacja vowcirqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\", rank - 1, tempstr[i]))\n54:             {\n55:               printf(\"\\nProcess %d Recv aac", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,   MPI_Bcast(&slen, 1, MPI_INT, 0, MPI_COMM_WORLD);) (20 2,   MPI_Scatter(str, slen / size, MPI_CHAR, tempstr, slen / size, MPI_CHAR, 0, MPI_COMM_WORLD);) (25 1,   MPI_Gather(&nonvowcnt, 1, MPI_INT, all_nonvows, 1, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,     MPI_Finalize();) (16 1,   MPI_Bcast(array, 48000 + 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 2,   MPI_Scatter(array, 48000 + 1, MPI_INT, locals, 48000 + 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (21 1,   MPI_Gather(locations, chunk, MPI_INT, locals, chunk, MPI_INT, 0, MPI_COMM_WORLD);) (26 0,  MPI_Wtime();) (29 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,     MPI_Finalize();) (15 1,   MPI_Bcast(array, 46000 + 1, MPI_INT, 0, MPI_COMM_WORLD);) (16 0,  MPI_Wtime();) (27 1,   MPI_Scan(locations, array, 46000 + 1, MPI_INT, MPI_BAND, MPI_COMM_WORLD);) (30 0,  MPI_Wtime();) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (26 1,   MPI_Reduce(&suma, &wynik, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (30 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (14 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (30 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (29 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (29 2,   MPI_Bcast(&x, n, MPI_INT, 0, MPI_COMM_WORLD);) (47 1,   MPI_Scatterv(xlocal, sendcounts, displs, MPI_INT, xlocal, sendcounts[th], MPI_INT, 0, MPI_COMM_WORLD);) (47 2,   MPI_Scatterv(xlocal, sendcounts, displs, MP", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (14 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (19 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (28 1,   MPI_Bcast(&n, 1, MPI_INTEGER, 0, MPI_COMM_WORLD);) (38 1,   MPI_Gather(&nlocal, 1, MPI_INTEGER, sendcounts, 1, MPI_INTEGER, 0, MPI_COMM_WORLD);) (47 1,   MPI_Scatterv(x, sendcounts, displs, MPI_INTEGER, xlocal, nlocal, MPI_INTEGER, 0, MPI_COMM_WORLD);) (47 0,  MPI_Wtime();) (56 1,   MPI_Reduce(&localTime, &totalTime, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (66 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 0,  MPI_Wtime();) (11 1,     MPI_Send(&x, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (16 1,       MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (27 1,         MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (29 1,         MPI_Recv(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD, &status);) (33 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 0,  MPI_Wtime();) (14 1,       MPI_Send(&i, 1, MPI_INT, rank + 1, 100, MPI_COMM_WORLD);) (16 1,     MPI_Send(&i, 1, MPI_INT, rank + 1, 100, MPI_COMM_WORLD);) (21 1,     MPI_Recv(&x, 1, MPI_INT, rank - 1, 100, MPI_COMM_WORLD, &status);) (24 1,       MPI_Recv(&i, 1, MPI_INT, rank - 1, 100, MPI_COMM_WORLD, &status);) (26 1,         MPI_Send(&i, 1, MPI_INT, rank + 1, 100, MPI_COMM_WORLD);) (33 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (18 1,   MPI_Irecv(buf, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &request);) (18 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (23 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (24 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (20 1,     MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (20 0,  MPI_Irecv(buf, 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD, &request);) (25 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(T, rank, comm_sz - 1, T, comm_sz - 1);) (16 1,   MPI_Init(0, 0);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (40 1,   MPI_Barrier(MPI_COMM_WORLD);) (40 2,   MPI_Bcast(T, tamanho_s, MPI_INT, 0, MPI_COMM_WORLD);) (40 3,   MPI_Bcast(T, tamanho_s, MPI_INT, 0, MPI_COMM_WORLD);) (45 1,       MPI_Send(T, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (45 2,       MPI_Recv(T, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (45 3,       MPI_Send(T, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (45 4,       MPI_Recv(T, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (50 1,     MPI_Send(T, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD);) (51 1,       MPI_Recv(T, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (51 2,       MPI_Send(T, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD);) (51 3,       MPI_Recv(T, 1, MPI_INT, rank - 1, 0, MP", "label": " (15 1,   MPI_Init(0, 0);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (27 1,       MPI_Send(s, tamanho_s, MPI_INT, i, 0, MPI_COMM_WORLD);) (34 1,     MPI_Send(s, tamanho_s + (SIZE - (tamanho_s * comm_sz)), MPI_INT, i, 0, MPI_COMM_WORLD);) (44 1,       MPI_Recv(s, tamanho_s + (SIZE - (tamanho_s * comm_sz)), MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (47 1,       MPI_Recv(s, tamanho_s, MPI_INT, 0, 0, MPI_COMM_WORLD, &status);) (68 1,     MPI_Bcast(&T[i], 1, MPI_INT, i, MPI_COMM_WORLD);) (101 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant4(&begin, &end);) (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 0,  MPI_Wtime();) (13 1,       MPI_Recv(&x, 1, MPI_INT, rank - 1, 0, MPI_COMM_WORLD, &status);) (16 0,  MPI_Wtime();) (22 1,       MPI_Send(&x, 1, MPI_INT, rank + 1, 0, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 0,  MPI_Wtime();) (13 1,       MPI_Send(&i, 1, MPI_INT, rank + 1, 1000, MPI_COMM_WORLD);) (15 1,     MPI_Send(&i, 1, MPI_INT, rank + 1, 1000, MPI_COMM_WORLD);) (15 2,     MPI_Recv(&i, 1, MPI_INT, size - 1, 1000, MPI_COMM_WORLD, &status);) (15 0,  MPI_Wtime();) (24 1,       MPI_Recv(&i, 1, MPI_INT, rank - 1, 1000, MPI_COMM_WORLD, &status);) (28 1,         MPI_Send(&i, 1, MPI_INT, 0, 1000, MPI_COMM_WORLD);) (40 1,       MPI_Recv(&i, 1, MPI_INT, rank - 1, 1000, MPI_COMM_WORLD, &status);) (46 1,         MPI_Send(&i, 1, MPI_INT, rank + 1, 1000, MPI_COMM_WORLD);) (51 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_info myinfo = MPI_INFO_NULL;\n39:   MPI_Datatype fulltype;\n40:   MPI_Datatype parttype;\n41:   MPI_Status status;\n42:   if (rank == 0)\n43:   {\n44:     finalstr[0] = '\\0';\n45:     for (int i = 1; i < size; i++)\n46:     {\n47:       for (int j = 1; j < (strlen(str1) + i); j++)\n48:       {\n49:         str1[j] = str1[j];\n50:       }\n51: \n52:       j++;\n53:     }\n54: \n55:     printf(\"\\nFinal string: %s\", finalstr);\n56:     printf(\"\\nFinal str: %s\", str2);\n57:     printf(\"\\nFinal str: %s\", str3);\n58:     printf(\"\\nFinal str: %s\", str4);\n59:     printf(\"\\nFinal str: %s\", str5);\n60:     printf(\"\\nFinal str: %s\", str6);\n61:     printf(\"\\nFinal str: %s\", str7);\n62:     printf(\"\\nFinal str: %s\", str8);\n63:     printf(\"\\nFinal str: %s\", str9);\n64:     printf(\"\\nFinal str: %s\", str10);\n65:     printf(\"\\nFinal str: %s\", str11);\n66:     printf(\"\\nFinal str: %s\", str12);\n67:     printf(\"\\nFinal str: %s\", str13);\n68:     printf(\"\\nFinal str: %s\", str14);\n69:     printf(\"\\nFinal str: %s\", str15", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 1,   MPI_Bcast(&slen, 1, MPI_INT, 0, MPI_COMM_WORLD);) (22 2,   MPI_Scatter(str1, slen / size, MPI_CHAR, tempstr1, slen / size, MPI_CHAR, 0, MPI_COMM_WORLD);) (22 3,   MPI_Scatter(str2, slen / size, MPI_CHAR, tempstr2, slen / size, MPI_CHAR, 0, MPI_COMM_WORLD);) (30 1,   MPI_Gather(tempstr3, (slen * 2) / size, MPI_CHAR, finalstr, (slen * 2) / size, MPI_CHAR, 0, MPI_COMM_WORLD);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (54 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (54 0,  MPI_Wtime();) (83 1,   MPI_Barrier(MPI_COMM_WORLD);) (83 0,  MPI_Wtime();) (83 1,   MPI_Gather(&local_w[0], local_n * n, MPI_DOUBLE, &w[0], local_n * n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (83 2,   MPI_Gather(&local_w[local_n * n], local_n, MPI_DOUBLE, &w[local_n], local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (83 3,   MPI_Reduce(&local_w[0], &prod, 1, MPI_DOUBLE, MPI_PROD, 0, MPI_COMM_WORLD);) (83 4,   MPI_Reduce(&local_w[local_n - 1], &prod, 1, MPI_DOUBLE, MPI_PROD, 0, MPI_COMM_WORLD);) (99 1,", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (19 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (56 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (56 2,   MPI_Bcast(&local_n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (57 1,   MPI_Scatter(&v[0], local_n, MPI_DOUBLE, local_v, local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (71 1,   MPI_Scatter(&At[0], num, MPI_DOUBLE, &local_At[0], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (84 1,   MPI_Barrier(MPI_COMM_WORLD);) (84 0,  MPI_Wtime();) (86 1,   MPI_Reduce(&local_w[0], &w[0], n, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (86 2,   MPI_Barrier(MPI_COMM_WORLD);) (87 1,   MPI_Reduce(&T_fine, &T_max, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (98 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(13 1,   MPI_Init(0, 0);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (18 1,   MPI_Scatter(X, size_per_process, MPI_DOUBLE, sub_X, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (18 2,   MPI_Scatter(Y, size_per_process, MPI_DOUBLE, sub_Y, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (18 0,  MPI_Wtime();) (20 0,  MPI_Wtime();) (22 1,   MPI_Gather(sub_X, size_per_process, MPI_DOUBLE, X, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 2,   MPI_Gather(sub_Y, size_per_process, MPI_DOUBLE, Y, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 0,  MPI_Wtime();) (24 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (18 0,  MPI_Wtime();) (19 0,  MPI_Wtime();) (21 0,  MPI_Wtime();) (25 1,   MPI_Scatter(X, size_per_process, MPI_DOUBLE, sub_X, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (25 2,   MPI_Scatter(Y, size_per_process, MPI_DOUBLE, sub_Y, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (26 1,   MPI_Gather(sub_X, size_per_process, MPI_DOUBLE, X, size_per_process, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (28 0,  MPI_Wtime();) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (15 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (15 2,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,   MPI_Reduce(&suml, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (10 4,   MPI_Barrier(MPI_COMM_WORLD);) (15 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (21 1,   MPI_Reduce(&suml, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>10 1,   MPI_Init(0, 0);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (14 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&buffer, count, MPI_INT, source, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (23 1,       MPI_Recv(&buffer, count, MPI_INT, j, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (35 1,       MPI_Send(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD);) (35 2,       MPI_Send(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD);) (35 3,       MPI_Send(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD);) (35 4,       MPI_Send(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD);) (35 5,       MPI_Send(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD);) (41 1,         MPI_Recv(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD, &status);) (41 2,         MPI_Recv(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD, &status);) (47 1,         MPI_Recv(msg, 300, MPI_INT, j, 0, MPI_COMM_WORLD, &status);) (47 2,         MPI_Recv(msg, 300, MPI_INT, j, 0, MPI_COMM_WOR", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &numtasks);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (25 1,       MPI_Send(omessage, j, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (29 1,       MPI_Recv(dmsg, 300, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &status);) (29 2,       MPI_Get_count(&status, MPI_DOUBLE, &count);) (37 1,       MPI_Get_elements(&status, MPI_DOUBLE, &count);) (68 1,       MPI_Send(intmsg, sizemsg, MPI_INT, 1, 0, MPI_COMM_WORLD);) (72 1,       MPI_Recv(dmsg, 300, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, &status);) (72 2,       MPI_Get_count(&status, MPI_DOUBLE, &count);) (80 1,       MPI_Get_elements(&status, MPI_DOUBLE, &count);) (100 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(&argc, &argv);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (21 1,   MPI_Reduce(&local_max, &global_max, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)         MPI_Ssend(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)     MPI_Recv(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)     MPI_Recv(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)     MPI_Ssend(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)     MPI_Ssend(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)     MPI_Ssend(&A[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD);)   MPI_Recv(&A[i], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)   MPI_Ssend(&A[i], 1, MPI_INT, 0, 0, MPI_COMM_WORLD);)   MPI_Recv(&A[i], 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)   MPI_S", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 1,   MPI_Reduce(&local_max, &global_max, 1, MPI_INT, MPI_MAX, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and48(MPI_Init(&argc, &argv));) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Scan(&fact, &factsum, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (10 2,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,   MPI_Scan(&fact, &factsum, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (32 1,   MPI_Type_vector(chunk * n2, chunk, n2, MPI_FLOAT, &rowType);) (32 2,   MPI_Type_commit(&rowType);) (32 3,   MPI_Type_contiguous(chunk, MPI_FLOAT, &rowType);) (32 4,   MPI_Type_commit(&rowType);) (32 0,  MPI_Wtime();) (34 1,   MPI_Type_vector(chunk * n2, chunk, n2, MPI_FLOAT, &rowType);) (34 2,   MPI_Type_commit(&rowType);) (34 0,  MPI_Wtime();) (38 0,  MPI_Wtime();) (40 0,  MPI_Wtime();) (42 1,   MPI_Type_free(&rowType);) (42 2,   MPI_Type_free(&rowType);) (42 3,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 0,  MPI_Wtime();) (30 1,   MPI_Type_contiguous(n2, MPI_FLOAT, &rowType);) (30 2,   MPI_Type_commit(&rowType);) (30 0,  MPI_Wtime();) (30 1,   MPI_Bcast(x, n2, MPI_FLOAT, 0, MPI_COMM_WORLD);) (30 2,   MPI_Scatter(A, chunk, rowType, A_local, chunk, rowType, 0, MPI_COMM_WORLD);) (30 0,  MPI_Wtime();) (30 0,  MPI_Wtime();) (31 0,  MPI_Wtime();) (31 1,   MPI_Gather(B_local, chunk, MPI_FLOAT, b, chunk, MPI_FLOAT, 0, MPI_COMM_WORLD);) (31 0,  MPI_Wtime();) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (22 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (33 1,     MPI_Reduce(&mypi, &pi_approx, 1, MPI", "label": " (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (22 1,     MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (33 1,     MPI_Reduce(&mypi, &pi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Type_contiguous(1, MPI_INT, &type);) (4 3,   MPI_Type_commit(&type);) (4 4,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (8 1,     MPI_Send(&myRank, 1, type, 1, 0, MPI_COMM_WORLD);) (12 1,   MPI_Recv(&type, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (7 1,     MPI_Type_vector(2, neg_block_length, 4, MPI_INT, &type);) (7 2,     MPI_Type_commit(&type);) (7 3,     MPI_Type_free(&type);) (8 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(&argc, &argv);) (18 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (18 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_procs);) (69 1,           MPI_Send(&plazas, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (69 2,           MPI_Send(&plazas, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (69 3,           MPI_Send(&plazas, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (69 4,           MPI_Send(&plazas, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (100 1,   MPI_Finalize();)", "label": " (19 1,   MPI_Init(&argc, &argv);) (19 2,   MPI_Barrier(MPI_COMM_WORLD);) (21 1,     MPI_Recv(datos, 3, MPI_INT, -1, 0, MPI_COMM_WORLD, &estado);) (57 1,         MPI_Send(&error, 1, MPI_INT, datos[0], 0, MPI_COMM_WORLD);) (70 1,               MPI_Send(&i, 1, MPI_INT, datos[0], 0, MPI_COMM_WORLD);) (85 1,               MPI_Send(&i, 1, MPI_INT, datos[0], 0, MPI_COMM_WORLD);) (102 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (11 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (9 1,     MPI_Sendrecv_replace(buf, i, MPI_DOUBLE, (size - rank) - 1, 1111, (size - rank) - 1, 1111, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Sendrecv_replace(buf, 323262400, MPI_DOUBLE, (size - rank) - 1, 1111, (size - rank) - 1, 1111, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2cuda_set_cuda(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity(OMPI_Cuda_set_cuda_set_verbosity", "label": " (6 1,   MPI_Init(0, 0);) (6 2,   MPIX_GPU_query_support(MPIX_GPU_SUPPORT_CUDA, &cuda_support);) (6 3,   MPIX_GPU_query_support(MPIX_GPU_SUPPORT_ZE, &ze_support);) (6 4,   MPIX_GPU_query_support(MPIX_GPU_SUPPORT_HIP, &hip_support);) (6 0,  MPIX_Query_cuda_support())   {     printf(\"MPIX_Query_cuda_support() return disagree with MPIX_GPU_query_support\\n\");) (8 0,  MPIX_Query_ze_support())   {     printf(\"MPIX_Query_ze_support() return disagree with MPIX_GPU_query_support\\n\");) (10 0,  MPIX_Query_hip_support())   {     printf(\"MPIX_Query_hip_support() return disagree with MPIX_GPU_query_support\\n\");) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &npes);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (7 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (14 1,   MPI_Group_incl(world_group, 5, ranks, &group);) (14 2,   MPI_Comm_create(MPI_COMM_WORLD, group, &comm);) (15 1,   MPI_Group_free(&world_group);) (15 2,   MPI_Group_free(&group);) (15 3,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &npes);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myrank);) (5 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 1,   MPI_Comm_group(MPI_COMM_WORLD, &world_group);) (10 1,   MPI_Group_incl(world_group, 3, ranks, &group);) (10 2,   MPI_Comm_create(MPI_COMM_WORLD, group, &comm);) (13 1,     MPI_Barrier(comm);) (15 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(receiveBuf, receiveBufSize);) (15 1,   MPI_Init(&argc, &argv);) (15 2,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (15 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,     MPI_Allgather(sendBuf, receiveBufSize, MPI_INT, receiveBuf, receiveBufSize, MPI_INT, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (15 1,   MPI_Allgather(sendBuf, 2, MPI_INT, receiveBuf, 2, MPI_INT, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &p_id);) (9 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_size(MPI_COMM_WORLD, &p);) (5 3,   MPI_Comm_rank(MPI_COMM_WORLD, &p_id);) (9 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Info_create(&info);) (11 2,   MPI_Info_set(info, \"alloc_shared_noncontig\", \"true\");) (17 1,   MPI_Info_set(info, \"alloc_shared_noncontig\", \"true\");) (19 1,   MPI_Info_set(info, \"alloc_shared_noncontig\", \"true\");) (21 1,   MPI_Info_set(info, \"alloc_shared_noncontig\", \"true\");) (22 1,   MPI_Info_set(info, \"alloc_shared_noncontig\", \"true\");) (24 1,   MPI_Info_free(&info);) (24 2,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (26 1,     MPI_Win_free(&win);) (27 1,     MPI_Info_free(&info);) (36 1,     MPI_Win_free(&win);) (37 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Info_create(&info);) (11 2,   MPI_Info_set(info, (char *) \"shmbuf_regist\", (char *) \"true\");) (11 3,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, info, &shm_comm);) (11 4,   MPI_Win_allocate_shared(((sizeof(double)) * 10) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &sbuf, &sbuf_win);) (11 5,   MPI_Win_allocate_shared(((sizeof(double)) * 10) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &rbuf, &rbuf_win);) (17 1,   MPI_Info_free(&info);) (17 2,   MPI_Info_create(&info);) (17 3,   MPI_Info_set(info, (char *) \"wildcard_used\", (char *) \"none\");) (18 1,     MPI_Info_set(info, (char *) \"datatype_used\", (char *) \"predefined\");) (18 2,   MPI_Comm_dup_with_info(MPI_COMM_WORLD, info, &comm_world);) (18 3,   MPI_Barrier(comm_world);) (24 1,     MPI_Info_free(&info);) (25 1,     MPI_Win_free(&sbuf_win);) (26 1,     MPI_Win_free(&rbuf_win);) (27 1,     MPI_Comm_free(&shm_comm);) (28 1,     MPI_Comm_free(&comm_world);) (28 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ica:   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 3,   MPI_Win_create(&buffer, (10 * 10) * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, (10 * 10) * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10 * 10, MPI_INT, 1, 0, 10 * 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(0, 0);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (32 1,     MPI_Send(&ST[my_rank * r], r, MPI_INT, i, 0, MPI_COMM_WORLD);) (37 1,       MPI_Recv(&aux, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (42 1,   MPI_Bcast(&v, 1, MPI_INT, 0, MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(0, 0);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (22 1,     MPI_Send(&z, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (27 1,       MPI_Recv(&aux, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (29 1,       MPI_Send(&sum, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (34 1,     MPI_Recv(&z, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_gather(&buff, 1, MPI_INT, recvarr, 1, MPI_INT, root, MPI_COMM_WORLD);) (9 1,   MPI_Barrier(MPI_COMM_WORLD);) (9 2,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &procs);) (9 1,   MPI_Irecv(&buff, 1, MPI_INT, root, 0, MPI_COMM_WORLD, &request);) (23 1,       MPI_Send(&sendarr[j], 1, MPI_INT, j, 0, MPI_COMM_WORLD);) (26 1,   MPI_Wait(&request, MPI_STATUS_IGNORE);) (27 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (33 1,       MPI_Send(&suma, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (33 2,       MPI_Recv(&suma, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (39 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (25 1,     MPI_Send(&w, 1, MPI_DOUBLE, 1, 0, MPI_COMM_WORLD);) (29 1,     MPI_Recv(&w, 1, MPI_DOUBLE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (41 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (12 1,   MPI_Barrier(MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (14 1,     MPI_Bcast(buffer, size, MPI_CHAR, 0, MPI_COMM_WORLD);) (14 2,     MPI_Barrier(MPI_COMM_WORLD);) (25 1,     MPI_Barrier(MPI_COMM_WORLD);) (32 1,     MPI_Bcast(buffer, size, MPI_CHAR, 0, MPI_COMM_WORLD);) (34 1,     MPI_Barrier(MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Scatter(&f[begin], length, MPI_FLOAT, &f[begin], length, MPI_FLOAT, 0, MPI_COMM_WORLD);) (8 1,   MPI_Gather(&f[begin], length, MPI_FLOAT, &f[begin], length, MPI_FLOAT, 0, MPI_COMM_WORLD);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>queen_init(message);) (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (10 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (16 1,       MPI_Recv(message, 100, MPI_CHAR, -1, -1, MPI_COMM_WORLD, &status);) (20 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (10 1,     MPI_Send(message, strlen(message) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (16 1,       MPI_Probe(-1, 0, MPI_COMM_WORLD, &status);) (16 2,       MPI_Get_count(&status, MPI_CHAR, &count);) (16 3,       MPI_Recv(message, count, MPI_CHAR, status.MPI_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (20 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ationMPI_Init(&argc, &argv);) (15 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (40 1,   MPI_Finalize();)", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 4,   MPI_Comm_get_parent(&parent_comm);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (13 1,     MPI_Comm_spawn((char *) \"./a.out\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_SELF, &spawn_comm, errcodes);) (28 1,     MPI_Intercomm_merge(spawn_comm, high, &intra_comm);) (28 2,     MPI_Comm_rank(intra_comm, &intra_rank);) (28 3,     MPI_Comm_size(intra_comm, &intra_size);) (31 1,       MPI_Send(&leader, 1, MPI_INT, 1, 0, intra_comm);) (33 1,       MPI_Recv(&leader, 1, MPI_INT, 1, 0, intra_comm, MPI_STATUS_IGNORE);) (33 2,     MPI_Intercomm_create(intra_comm, 0, MPI_COMM_WORLD, leader, 123, &inter_comm);) (33 3,     MPI_Barrier(inter_comm);) (33 4,     MPI_Intercomm_merge(inter_comm, 0, &univ_comm);) (33 5,     MPI_Barrier(univ_comm);) (33 6,     MPI_Comm_free(&univ_comm);) (33 7,     MPI_Comm_free(&inter_comm);) (33 8,     MPI_Comm_free(&intra_comm);) (33 9,     MPI_Comm_free(&spawn_comm);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ation(rank, size);) (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (13 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (18 1,   MPI_Bcast(&num_intervals, 1, MPI_LONG_LONG_INT, 0, MPI_COMM_WORLD);) (37 1,   MPI_Reduce(&local_sum, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)", "label": " (14 1,   MPI_Init(&argc, &argv);) (14 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Bcast(&num_intervals, 1, MPI_UNSIGNED_LONG, 0, MPI_COMM_WORLD);) (34 1,   MPI_Reduce(&local_sum, &sum, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (11 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (12 1,   MPI_Comm_get_parent(&parentcomm);) (12 2,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (12 3,   MPI_Barrier(allcomm);) (12 4,   MPI_Comm_free(&allcomm);) (12 5,   MPI_Comm_disconnect(&parentcomm);) (12 6,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (6 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n31:   int mat1[3][3];\n32:   int mat2[3][3];\n33:   int b1[3];\n34:   int b2[3];\n35:   int b3[3];\n36:   if (rank == 0)\n37:   {\n38:     for (int i = 0; i < 3; i++)\n39:     {\n40:       for (int j = 0; j < 3; j++)\n41:       {\n42:         b1[i] = mat1[i][j] + mat2[i][j];\n43:         b2[i] = mat2[i][j] + mat3[i][j];\n44:         if (i!= j)\n45:         {\n46:           b3[i] = mat3[i][j] + mat4[i][j];\n47:           b4[i] = mat3[i][j] + mat4[i][j];\n48:           b5[i] = mat3[i][j] + mat4[i][j];\n49:         }\n50:       }\n51: \n52:     }\n53: \n54:   }\n55:   else\n56:   {\n57:     for (int i = 0; i < 3; i++)\n58:     {\n59:       for (int j = 0; j < 3; j++)\n60:       {\n61:         b3[i] = mat3[i][j] + mat4[i][j];\n62:         b4[i] = mat3[i][j] + mat4[i][j];", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (20 1,   MPI_Bcast(&ele, 1, MPI_INT, 0, MPI_COMM_WORLD);) (20 2,   MPI_Scatter(mat, 3, MPI_INT, b, 3, MPI_INT, 0, MPI_COMM_WORLD);) (24 1,   MPI_Reduce(&occ, &totocc, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (21 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n19:   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &unav_dest);) (9 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, &mpi_request);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &mpi_request);) (14 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &unav_dest);) (9 1,     MPI_Isend(buffer, 1000, MPI_INT, unav_dest, 124523, MPI_COMM_WORLD, &mpi_request);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(25 1,   MPI_Init(0, 0);) (25 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (25 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (37 0,  MPI_Wtime();) (38 0,  MPI_Wtime();) (40 0,  MPI_Wtime();) (40 1,   MPI_Gather(&local_array_size, 1, MPI_INT, local_array, 1, MPI_INT, 0, MPI_COMM_WORLD);) (43 0,  MPI_Wtime();) (47 0,  MPI_Wtime();) (53 0,  MPI_Wtime();) (54 0,  MPI_Wtime();) (57 1,   MPI_Finalize();)", "label": ", total_sums_array, 5, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (72 0,  MPI_Wtime();) (75 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (9 1,     MPI_Send(buffer, 1, MPI_INT, 1, 124, row_comm);) (13 1,     MPI_Recv(buffer2, 1204, MPI_INT, 0, 124, row_comm, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (9 1,     MPI_Send(buffer, 1, MPI_INT, 1, 124, row_comm);) (13 1,     MPI_Recv(buffer2, 1204, MPI_INT, 0, 124, row_comm, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4:   MPI_Init(&argc, &argv);) (4 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 0,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 0,  MPI_Finalize();)", "label": " (5 0,  MPI_Init(&argc, &argv);) (5 1,   MPI_Errhandler_set(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (5 0,  MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Errhandler_set(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (5 0,  MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (14 1,     MPI_File_delete(\"../check2.txt\", MPI_INFO_NULL);) (20 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (26 1,   MPI_Finalize();)", "label": " (10 1,       MPI_Error_string(MPI_Init(&argc, &argv), resultString, &resultLength);) (12 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (15 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 1,       MPI_Error_string(MPI_File_open(MPI_COMM_WORLD, \"blah\", 1 | 4, MPI_INFO_NULL, &fh), resultString, &resultLength);) (23 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (26 1,   MPI_File_close(&fh);) (26 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (10 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Info_create(&info);) (7 2,   MPI_Info_set(info, \"key\", \"true\");) (7 3,   MPI_Info_set(info, \"val\", \"true\");) (7 4,   MPI_Info_set(info, \"key\", \"true\");) (11 1,   MPI_Info_free(&info);) (11 2,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Info_create(&info);) (7 3,   MPI_Info_set(info, key, val);) (7 4,   MPI_Info_get(info, key, (sizeof(buff)) - 1, buff, &flag);) (11 1,   MPI_Info_free(&info);) (11 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_thread(myRank, numProcs, myRows, numCols, myCols, numRows, numCols, numProcs, numProcs, numProcs, myRows, numCols, myCols, numRows, numCols, numRows, numCols, numProcs, numProcs, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, numRows, numCols, num", "label": " (34 1,   MPI_Init(&argc, &argv);) (34 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (34 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (41 1,     MPI_Abort(MPI_COMM_WORLD, -2);) (109 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ide = (int) ceil(((double) numProcs) / numProcs);) (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (14 1,     MPI_Finalize();) (20 0,  MPI_Wtime();) (20 1,   MPI_Bcast(&width, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (20 2,   MPI_Bcast(&height, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (20 3,   MPI_Bcast(&interval, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (20 4,   MPI_Bcast(&diff, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 1,   MPI_Reduce(&diff, &finalPi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (22 2,   MPI_Barrier(MPI_COMM_WORLD);) (22 0,  MPI_Wtime();) (22 1,   MPI_Bcast(&finalPi, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 2,   MPI_Bcast(&diff, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 3,   MPI_Bcast(&interval, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (22 4,   MPI_Barrier(MPI_COMM_WORLD);) (22 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)", "label": " (23 1,   MPI_Init(&argc, &argv);) (23 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (23 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (23 0,  MPI_Wtime();) (32 1,   MPI_Reduce(&pieceOfPi, &wholePi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (42 1,  MPI_Wtick());) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13:   MPI_Init(&argc, &argv);) (13 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 1,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, MPI_INFO_NULL, 0, MPI_COMM_WORLD, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &my_rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &size);) (8 4,   MPI_Comm_spawn((char *) \"./spawntest_child\", (char **) 0, np, (MPI_Info) 0x1c000000, 0, (MPI_Comm) 0x44000000, &intercomm, errcodes);) (12 1,   MPI_Intercomm_merge(intercomm, 0, &allcomm);) (12 2,   MPI_Comm_rank(allcomm, &my_rank);) (12 3,   MPI_Comm_size(allcomm, &size);) (12 4,   MPI_Barrier(allcomm);) (12 5,   MPI_Comm_free(&allcomm);) (12 6,   MPI_Comm_disconnect(&intercomm);) (17 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (13 2,     MPI_Wait(&req, &stat);) (13 3,     MPI_Status_free(&stat);) (13 4,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 5,     MPI_Wait(&req, &stat);) (13 6,     MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 1,     MPI_Irecv(buffer, 2 * 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &req);) (12 2,     MPI_Wait(&req, &stat);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada4(4, 4, 2, 3, mat, res);) (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,     MPI_Bcast(&mat, 4, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (17 1,   MPI_Scatter(mat, 4, MPI_INT, b, 4, MPI_INT, 0, MPI_COMM_WORLD);) (17 2,   MPI_Scan(b, temprow, 4, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (17 3,   MPI_Gather(temprow, 4, MPI_INT, res, 4, MPI_INT, 0, MPI_COMM_WORLD);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (18 1,   MPI_Info_create(&win_info);) (18 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (19 1,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (19 2,   MPI_Barrier(MPI_COMM_WORLD);) (27 1,     MPI_Win_free(&win);) (29 1,     MPI_Info_free(&win_info);) (33 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 1,   MPI_Info_create(&win_info);) (19 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (19 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (21 1,     MPI_Win_lock_all(0, win);) (22 1,     MPI_Win_unlock_all(win);) (22 2,     MPI_Barrier(MPI_COMM_WORLD);) (27 1,     MPI_Info_free(&win_info);) (29 1,     MPI_Win_free(&win);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &th);) (10 3,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (22 1,   MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);) (22 0,  MPI_Wtime();) (25 1,       MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);) (25 2,       MPI_Wait(&request, &status);) (25 0,  MPI_Wtime();) (28 1,       MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);) (28 2,       MPI_Wait(&request, &status);) (29 1,       MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);) (29 2,       MPI_Wait(&request, &status);) (30 1,       MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);) (30 2,       MPI_Wait(&request, &status);) (37 1,   MPI_Finalize();)         MPI_Ibcast(buffer, buffer_count, MPI_INT, 0, MPI_COMM_WORLD, &request);)       MPI_Wait(&request, &status);)       MPI_Ibcast(buffer,", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (22 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 0,  MPI_Wtime();) (25 1,     MPI_Isend(buffer, buffer_count, MPI_INTEGER, 1, 0, MPI_COMM_WORLD, &request);) (31 1,         MPI_Test(&request, &request_complete, &status);) (37 1,       MPI_Wait(&request, &status);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (16 1,   MPI_Info_create(&info);) (16 2,   MPI_Info_set(info, \"hostfile_shared_non_blocking\", \"true\");) (17 1,   MPI_Info_set(info, \"ompi_global_non_blocking\", \"true\");) (19 1,   MPI_Info_set(info, \"ompi_global_non_blocking_size\", \"true\");) (19 2,   MPI_Win_allocate(sizeof(double), sizeof(double), MPI_INFO_NULL, MPI_COMM_WORLD, &winbuf, &win);) (19 3,   MPI_Win_free(&win);) (19 4,   MPI_Info_free(&info);) (19 5,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Info_create(&info);) (11 2,   MPI_Info_set(info, (char *) \"shmbuf_regist\", (char *) \"true\");) (11 3,   MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, rank, info, &shm_comm);) (11 4,   MPI_Win_allocate_shared(((sizeof(double)) * 100) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &sbuf, &sbuf_win);) (11 5,   MPI_Win_allocate_shared(((sizeof(double)) * 100) * 100, sizeof(double), MPI_INFO_NULL, shm_comm, &rbuf, &rbuf_win);) (17 1,   MPI_Info_set(info, (char *) \"wildcard_used\", (char *) \"none\");) (17 2,   MPI_Info_set(info, (char *) \"datatype_used\", (char *) \"predefined\");) (17 3,   MPI_Comm_dup_with_info(MPI_COMM_WORLD, info, &comm_world);) (17 4,   MPI_Barrier(comm_world);) (23 1,     MPI_Info_free(&info);) (24 1,     MPI_Win_free(&sbuf_win);) (25 1,     MPI_Win_free(&rbuf_win);) (26 1,     MPI_Comm_free(&shm_comm);) (27 1,     MPI_Comm_free(&comm_world);) (27 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>[2] = 1;\n42:   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 1,   MPI_Address(&s.d, &disps[0]);) (7 2,   MPI_Address(&s.c, &disps[1]);) (11 1,   MPI_Type_struct(2, blocks, disps, types, &newtype);) (11 2,   MPI_Type_commit(&newtype);) (11 3,   MPI_Address(&s.d, &disps[0]);) (11 4,   MPI_Address(&s.c, &disps[1]);) (14 1,   MPI_Type_struct(2, blocks, disps, types, &newtype);) (14 2,   MPI_Type_commit(&newtype);) (14 3,   MPI_Type_extent(newtype, &types[newtype]);) (14 4,   MPI_Type_lb(newtype, &lb);) (14 5,   MPI_Type_ub(newtype, &ub);) (16 1,   MPI_Type_free(&newtype);) (16 2,   MPI_Finalize();)       return 0;\n35:   }\n36:   if (rank == 0)\n37:   {\n38:     printf(\"lb: %d ub: %d extent: %d\\n\", lb.d, lb.c, extent);) (37 1,   MPI_Type_free(&newtype);) (37 2,   MPI_Finalize();)     return 0;\n39:   }\n40:   if (newtype == (MPI_DOUBLE_NULL))\n41:   {\n42:     printf(\"size: %d extent: %d\\n\", size, extent);)     printf(\"lb:", "label": " (4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,   MPI_Get_address(&s.d, &disps[0]);) (9 2,   MPI_Get_address(&s.c, &disps[1]);) (11 1,   MPI_Type_create_struct(2, blocks, disps, types, &newtype);) (11 2,   MPI_Type_commit(&newtype);) (13 1,   MPI_Type_vector(2, 3, 10, newtype, &newtype_1);) (13 2,   MPI_Type_commit(&newtype_1);) (15 1,   MPI_Type_size(newtype, &_size);) (15 2,   MPI_Type_size(newtype_1, &_size_1);) (27 1,   MPI_Bcast(structArr, 1, newtype_1, 0, MPI_COMM_WORLD);) (37 1,   MPI_Type_free(&newtype);) (37 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 0,  MPI_Isend(\"No Errors\", 10, MPI_CHAR, 2, 0, MPI_COMM_WORLD, &request);) (17 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (24 0,  MPI_Irecv(buf, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &request);) (24 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (34 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(&argc, &argv);) (7 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 4,   MPI_Comm_set_errhandler(MPI_COMM_WORLD, MPI_ERRORS_RETURN);) (10 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (17 0,  MPI_Isend(\"No Errors\", 10, MPI_CHAR, 2, 0, MPI_COMM_WORLD, &request);) (17 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (24 0,  MPI_Irecv(buf, 10, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &request);) (24 0,  MPI_Wait(&request, MPI_STATUS_IGNORE);) (34 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (23 1,   MPI_Bcast(&m, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 2,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 3,   MPI_Bcast(&chunk_size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (23 4,   MPI_Bcast(&chunk_size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (52 0,  MPI_Wtime();) (53 1,   MPI_Reduce(&local_a, &global_mp, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (53 2,   MPI_Reduce(&local_b, &global_mp, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (79 1,   MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)             MPI_Finalize();)", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_size(MPI_COMM_WORLD, &numprocs);) (21 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myid);) (22 0,  MPI_Wtime();) (52 1,   MPI_Bcast(&chunk_size, 1, MPI_INT, 0, MPI_COMM_WORLD);) (54 1,   MPI_Scatter(a, chunk_size, MPI_DOUBLE, local_a, chunk_size, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (54 2,   MPI_Scatter(b, chunk_size, MPI_DOUBLE, local_b, chunk_size, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (66 1,   MPI_Reduce(&mp, &global_mp, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (78 0,  MPI_Wtime();) (82 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 1,     MPI_Send(&test, 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&recvbuffer, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,     MPI_Send(&test, 1, MPI_DOUBLE, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(&recvbuffer, 1, MPI_DOUBLE, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n20:   MPI_Init(&argc, &argv);) (13 1,   MPI_Type_contiguous(sendtypes[0], MPI_INT, &sendtypes[0]);) (13 2,   MPI_Type_commit(&sendtypes[0]);) (13 3,   MPI_Type_free(&sendtypes[0]);) (13 4,   MPI_Type_contiguous(sendtypes[1], MPI_INT, &recvtypes[1]);) (13 5,   MPI_Type_commit(&recvtypes[1]);) (15 1,   MPI_Alltoallv(sendbuf, sendcounts, sdispls, sendtypes[1], &recvbuf, recvcounts, rdispls, recvtypes[0]);) (15 2,   MPI_Alltoallv(sendbuf, sendcounts, sdispls, sendtypes[1], &recvbuf, sendcounts, sdispls, sendtypes[0]);) (15 3,   MPI_Type_free(&sendtypes[1]);) (15 4,   MPI_Type_free(&recvtypes[1]);) (16 1,   MPI_Finalize();)", "label": " (10 1,   MPI_Init(&argc, &argv);) (12 1,   MPI_Type_contiguous(0, MPI_INT, &sendtypes[0]);) (12 2,   MPI_Type_commit(&sendtypes[0]);) (15 1,   MPI_Alltoallw(&sendbuf, sendcounts, sdispls, sendtypes, &recvbuf, recvcounts, rdispls, recvtypes, MPI_COMM_WORLD);) (15 2,   MPI_Type_free(&sendtypes[0]);) (15 3,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_Init(&argc, &argv);) (17 1,   MPI_Init(&argc, &argv);) (17 2,   MPI_Comm_size(MPI_COMM_WORLD, &nbblock);) (17 3,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (21 0,  MPI_Wtime();) (27 1,   MPI_Reduce(&sum, &sum_g, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (27 0,  MPI_Wtime();) (35 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_rank(MPI_COMM_WORLD, &th);) (16 3,   MPI_Comm_size(MPI_COMM_WORLD, &nth);) (21 0,  MPI_Wtime();) (27 0,  MPI_Wtime();) (28 1,   MPI_Reduce(&sum, &sum_g, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (28 2,   MPI_Reduce(&delta_t, &delta_tg, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (34 1,   MPI_Allreduce((void *) 1, &i, 1, MPI_LONG_LONG_INT, MPI_SUM, MPI_COMM_WORLD);) (38 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_10 1,   MPI_Init(0, 0);) (11 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (15 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&buffer, count, MPI_INT, 0, tag, MPI_COMM_WORLD, &status);) (25 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(0, 0);) (9 2,   MPI_Comm_size(MPI_COMM_WORLD, &num);) (9 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (15 1,     MPI_Send(&buffer, count, MPI_INT, dest, tag, MPI_COMM_WORLD);) (21 1,       MPI_Recv(&buffer, count, MPI_INT, -1, tag, MPI_COMM_WORLD, &status);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_rank(MPI_COMM_WORLD, &pid);) (2 3,   MPI_Comm_size(MPI_COMM_WORLD, &group);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(18 1,   MPI_Init(0, 0);) (18 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (33 1,   MPI_Reduce(&suma, &suma, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (46 1,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(&argc, &argv);) (17 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (18 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (23 1,   MPI_Scatter(array, 1, MPI_DOUBLE, &array2, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (24 1,   MPI_Gather(&array2, 1, MPI_DOUBLE, array3, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 4,   MPI_Buffer_attach(buffer, buffer_size);) (14 1,     MPI_Bsend(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (19 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_size);) (6 1,     MPI_Abort(MPI_COMM_WORLD, -1);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (13 1,     MPI_Buffer_attach(buffer, buffer_size);) (14 1,     MPI_Bsend(&value_sent, 1, MPI_INT, 1, 0, MPI_COMM_WORLD);) (14 2,     MPI_Buffer_detach(&buffer, &buffer_size);) (19 1,     MPI_Recv(&value_received, 1, MPI_INT, 0, -1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (21 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (16 1,   MPI_Allreduce(&sum, &total, 1, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (40 1,   MPI_Reduce(&sum, &total, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (40 2,   MPI_Finalize();)", "label": " (16 1,   MPI_Init(0, 0);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &comm_sz);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (28 1,       MPI_Send(&z, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (34 1,       MPI_Recv(&z, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (40 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(6 1,   MPI_Init(0, 0);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (6 3,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (22 1,   MPI_Reduce(&my_val, &recv_val, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);) (37 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &ID);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &num_proc);) (10 1,       MPI_Send(&my_val, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (12 1,       MPI_Send(&my_val, 1, MPI_INT, ID - (num_proc / 2), 0, MPI_COMM_WORLD);) (14 1,       MPI_Recv(&recv_val, 1, MPI_INT, ID + (num_proc / 2), 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (17 1,         MPI_Recv(&recv_val, 1, MPI_INT, num_proc - 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_mpi(MPI_COMM_WORLD, me, &me, &nproc, MPI_INT, &local_w[me]);) (13 1,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (45 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (45 2,   MPI_Bcast(&v[0], n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (51 1,   MPI_Gather(&local_w[me], num, MPI_DOUBLE, &local_w[me], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (51 2,   MPI_Barrier(MPI_COMM_WORLD);) (61 1,   MPI_Finalize();)", "label": " (13 1,   MPI_Init(&argc, &argv);) (13 2,   MPI_Comm_size(MPI_COMM_WORLD, &nproc);) (13 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (46 1,   MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (46 2,   MPI_Bcast(&local_n, 1, MPI_INT, 0, MPI_COMM_WORLD);) (48 1,   MPI_Bcast(&v[0], n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (51 1,   MPI_Scatter(&A[0], num, MPI_DOUBLE, &localA[0], num, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (61 1,   MPI_Gather(&local_w[0], local_n, MPI_DOUBLE, &w[0], local_n, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (69 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (6 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 3,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(&argc, &argv);) (6 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (6 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (6 4,   MPI_Comm_get_parent(&parentcomm);) (10 1,   MPI_Intercomm_merge(parentcomm, 1, &allcomm);) (10 2,   MPI_Barrier(allcomm);) (10 3,   MPI_Comm_free(&allcomm);) (10 4,   MPI_Comm_disconnect(&parentcomm);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &proc_n);) (18 1,     MPI_Recv(&new_size, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (18 2,     MPI_Get_count(&status, MPI_INT, &new_size);) (19 1,     MPI_Send(&vector_size, 1, MPI_INT, 0, my_rank, MPI_COMM_WORLD);) (19 2,     MPI_Send(&vector_size, 1, MPI_INT, 0, my_rank, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&new_size, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (22 2,     MPI_Get_count(&status, MPI_INT, &new_size);) (23 1,     MPI_Recv(&vector_size, 1, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (23 2,     MPI_Get_count(&status, MPI_INT, &new_size);) (34 1,     MPI_Send(&vector_size, 1, MPI_INT, 0, my_rank, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (36 1,   MPI_Barrier(MPI_COMM_WORLD);) (44 1,     MPI_Send(&vector_size, 1, MPI_INT, 0, my_rank", "label": " (10 1,   MPI_Init(&argc, &argv);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (10 3,   MPI_Comm_size(MPI_COMM_WORLD, &proc_n);) (18 0,  MPI_Wtime();) (21 1,     MPI_Recv(&arr, 10000, MPI_INT, -1, -1, MPI_COMM_WORLD, &status);) (21 2,     MPI_Get_count(&status, MPI_INT, &vector_size);) (28 1,     MPI_Send(arr, vector_size, MPI_INT, parent, tag, MPI_COMM_WORLD);) (35 1,     MPI_Send(&arr[0], new_size, MPI_INT, left, tag, MPI_COMM_WORLD);) (35 2,     MPI_Send(&arr[new_size], new_size, MPI_INT, right, tag, MPI_COMM_WORLD);) (35 3,     MPI_Recv(&arr[0], new_size, MPI_INT, left, tag, MPI_COMM_WORLD, &status);) (35 4,     MPI_Recv(&arr[new_size], new_size, MPI_INT, right, tag, MPI_COMM_WORLD, &status);) (39 1,     MPI_Send(temp, vector_size, MPI_INT, parent, tag, MPI_COMM_WORLD);) (44 0,  MPI_Wtime();) (47 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &flag);) (5 2,   MPI_Ibarrier(MPI_COMM_WORLD, &request);) (5 3,   MPI_Wait(&request, &status);) (13 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(0, 0);) (5 2,   MPI_Issend(0, 0, MPI_BYTE, 0, 123, MPI_COMM_SELF, &request);) (5 3,   MPI_Probe(-1, -1, MPI_COMM_SELF, &status);) (5 4,   MPI_Cancel(&request);) (5 5,   MPI_Request_get_status(request, &flag, &status);) (5 6,   MPI_Test_cancelled(&status, &flag);) (8 1,     MPI_Request_free(&request);) (12 1,     MPI_Recv(0, 0, MPI_BYTE, 0, 123, MPI_COMM_SELF, &status);) (12 2,     MPI_Wait(&request, &status);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,     MPI_Send(&x, 1, MPI_INT, first + 1, TAG, MPI_COMM_WORLD);) (14 2,     MPI_Recv(&x, 1, MPI_INT, last, TAG, MPI_COMM_WORLD, &status);) (18 1,     MPI_Recv(&x, 1, MPI_INT, last - 1, TAG, MPI_COMM_WORLD, &status);) (18 2,     MPI_Send(&x, 1, MPI_INT, last, TAG, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&x, 1, MPI_INT, last, TAG, MPI_COMM_WORLD, &status);) (22 2,     MPI_Send(&x, 1, MPI_INT, last, TAG, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)", "label": " (7 1,   MPI_Init(0, 0);) (7 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (7 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (14 1,     MPI_Send(&x, 1, MPI_INT, first + 1, TAG, MPI_COMM_WORLD);) (14 2,     MPI_Recv(&x, 1, MPI_INT, last, TAG, MPI_COMM_WORLD, &status);) (18 1,     MPI_Recv(&x, 1, MPI_INT, last - 1, TAG, MPI_COMM_WORLD, &status);) (19 1,     MPI_Send(&x, 1, MPI_INT, first, TAG, MPI_COMM_WORLD);) (22 1,     MPI_Recv(&x, 1, MPI_INT, rank - 1, TAG, MPI_COMM_WORLD, &status);) (23 1,     MPI_Send(&x, 1, MPI_INT, rank + 1, TAG, MPI_COMM_WORLD);) (26 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada4(4, 4, MPI_INT, rank, rank, size, MPI_COMM_WORLD);) (4, (int) (mat[0][0] * mat[1][0], (int) (mat[0][1] * mat[2][0], (int) (mat[0][2] * mat[2][1], (int) (mat[0][3] * mat[2][2], (int) (mat[0][3] * mat[3][0], (int) (mat[0][4] * mat[1][0], (int) (mat[0][1] * mat[1][2], (int) (mat[0][3] * mat[1][1], (int) (mat[0][2] * mat[2][0], (int) (mat[0][3] * mat[1][2], (int) (mat[0][0] * mat[1][1], (int) (mat[0][2] * mat[2][1], (int) (mat[0][3] * mat[2][2], (int) (mat[0][0] * mat[1][3], (int) (mat[0][4] * mat[2][3], (int) (mat[0][4] * mat[2][3], (int) (mat[0][5] * mat[2][4], (int) (mat[0][6] * mat[3][0], (int) (mat[0][1] * mat[3][2], (int) (mat[0][3] * mat[3][1], (int) (mat[0][2] * mat[3][3], (int) (mat[0][4] * mat[3][3], (int) (mat[0][4] * mat[3][3], (int) (mat[0][5] * mat[3][2], (int) (mat[0][6] * mat[3][1], (int) (mat[0][2] * mat[3][3], (int) (mat[0][0] * mat[3][2], (int) (mat[0][3] * mat[3][1], (int) (mat", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (24 1,   MPI_Scatter(mat, 4, MPI_INT, b, 4, MPI_INT, 0, MPI_COMM_WORLD);) (24 2,   MPI_Scatter(a, 4, MPI_INT, b, 4, MPI_INT, 0, MPI_COMM_WORLD);) (24 3,   MPI_Scan(b, temprow, 4, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (24 4,   MPI_Gather(temprow, 4, MPI_INT, res, 4, MPI_INT, 0, MPI_COMM_WORLD);) (36 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (10 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (25 1,   MPI_Finalize();)         MPI_Send(&sendBuf[0], receiveBufSize, MPI_INT, 1, 0, MPI_COMM_WORLD);) (25 2,   MPI_Recv(&receiveBuf, receiveBufSize, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 3,   MPI_Finalize();)         MPI_Send(&sendBuf[receiveBufSize], receiveBufSize, MPI_INT, 1, 0, MPI_COMM_WORLD);)         MPI_Recv(&receiveBuf[receiveBufSize], receiveBufSize, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)         MPI_Send(&sendBuf[0], receiveBufSize, MPI_INT, 0, 0, MPI_COMM_WORLD);)         MPI_Recv(&receiveBuf[receiveBufSize], receiveBufSize, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Finalize();)         MPI_Recv(&receiveBuf[0], receiveBufSize, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);)         MPI_Send(&sendBuf[0], receiveBufSize, MPI_INT, 1, 0, MP", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &numTasks);) (15 1,   MPI_Allreduce(sendBuf, receiveBuf, receiveBufSize, MPI_INT, MPI_SUM, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n34:   MPI_Init(&argc, &argv);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (29 1,   MPI_Info_create(&win_info);) (29 2,   MPI_Info_set(win_info, (char *) \"epoch_type\", (char *) \"lockall\");) (29 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (29 4,   MPI_Win_free(&win);) (29 5,   MPI_Info_free(&win_info);) (33 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (3 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 1,   MPI_Info_create(&win_info);) (19 2,   MPI_Info_set(win_info, (char *) \"epochs_used\", (char *) \"lockall\");) (19 3,   MPI_Win_allocate(sizeof(double), sizeof(double), win_info, MPI_COMM_WORLD, &winbuf, &win);) (21 1,     MPI_Win_lock_all(0, win);) (22 1,     MPI_Win_unlock_all(win);) (22 2,     MPI_Barrier(MPI_COMM_WORLD);) (27 1,     MPI_Info_free(&win_info);) (29 1,     MPI_Win_free(&win);) (29 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>_ 1,   MPI_Init(&argc, &argv);) (9 1,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (9 2,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (11 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (11 0,  MPI_Wtime();) (28 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (39 1,     MPI_Comm_free(&mtx_comm);) (39 2,   MPI_Finalize();)", "label": " (8 1,   MPI_Init(&argc, &argv);) (8 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (8 3,   MPI_Comm_size((MPI_Comm) 0x44000000, &nproc);) (10 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (10 0,  MPI_Wtime();) (28 1,   MPI_Barrier((MPI_Comm) 0x44000000);) (38 1,     MPI_Comm_free(&mtx_comm);) (39 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada_Init(0, 0);) (9 1,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (14 1,       MPI_Recv(greeting, 100, MPI_CHAR, source, 0, MPI_COMM_WORLD, &stat);) (20 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);) (23 1,   MPI_Finalize();)", "label": " (9 1,   MPI_Init(&argc, &argv);) (9 2,   MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);) (9 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,       MPI_Recv(greeting, sizeof(greeting), MPI_BYTE, source, 1, MPI_COMM_WORLD, &stat);) (22 1,     MPI_Send(greeting, strlen(greeting) + 1, MPI_BYTE, 0, 1, MPI_COMM_WORLD);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (9 1,   MPI_Comm_rank(row_comm, &buffer[0], &buffer2[0]);) (11 1,     MPI_Send(buffer2, 1204, MPI_INT, 1, 124, row_comm);) (15 1,     MPI_Irecv(buffer, 1204, MPI_INT, 0, 124, row_comm, &request);) (15 2,     MPI_Wait(&request, &status);) (16 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (5 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (7 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (11 1,     MPI_Send(buffer, 1, MPI_INT, 1, 124, row_comm);) (15 1,     MPI_Irecv(buffer2, 1204, MPI_INT, 0, 124, row_comm, &request);) (15 2,     MPI_Wait(&request, &status);) (16 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>;\n37:   MPI_Init(&argc, &argv);) (11 1,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (23 1,     MPI_Send(vec, nl, MPI_INTEGER, ipto, 0, MPI_COMM_WORLD);) (23 2,     MPI_Recv(rvec, nl, MPI_INTEGER, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 1,       MPI_Recv(rvec, nl, MPI_INTEGER, -1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (28 2,       MPI_Send(vec, nl, MPI_INTEGER, 0, 0, MPI_COMM_WORLD);) (29 1,       MPI_Send(vec, nl, MPI_INTEGER, 0, 0, MPI_COMM_WORLD);) (32 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_size(MPI_COMM_WORLD, &np);) (11 3,   MPI_Comm_rank(MPI_COMM_WORLD, &me);) (25 1,       MPI_Recv(rvec, nl, MPI_INTEGER, ipfr, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 2,       MPI_Ssend(vec, nl, MPI_INTEGER, ipto, 0, MPI_COMM_WORLD);) (28 1,       MPI_Ssend(vec, nl, MPI_INTEGER, ipto, 0, MPI_COMM_WORLD);) (28 2,       MPI_Recv(rvec, nl, MPI_INTEGER, ipfr, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (32 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>, 1, 1, MPI_Init(&argc, &argv);) (13 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (13 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Send(&count, 1, MPI_INT, i, 0, MPI_COMM_WORLD);) (16 1,     MPI_Recv(&count, 1, MPI_INT, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (18 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (10 1,       MPI_Barrier(MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ant_mpi_init(&argc, &argv);) (9 1,     MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (11 1,   MPI_Bcast(&buf, 1, MPI_INT, root, MPI_COMM_WORLD);) (12 1,   MPI_Finalize();)", "label": " (5 1,   MPI_Init(&argc, &argv);) (5 2,   MPI_Comm_rank((MPI_Comm) 0x44000000, &rank);) (11 1,   MPI_SEC_Bcast(&buf, 1, (MPI_Datatype) 0x4c000405, root, (MPI_Comm) 0x44000000);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(&argc, &argv);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, 1, 0, 10, MPI_INT, win);) (12 1,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,   MPI_Win_create(&buffer, 10 * (sizeof(int)), 1, MPI_INFO_NULL, MPI_COMM_WORLD, &win);) (8 1,     MPI_Win_fence(0, win);) (9 1,     MPI_Put(&local_buf, 10, MPI_INT, -1, 0, 10, MPI_INT, win);) (9 2,     MPI_Win_fence(0, win);) (12 1,     MPI_Win_fence(0, win);) (12 2,     MPI_Win_fence(0, win);) (13 1,   MPI_Win_free(&win);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(5 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (12 1,   MPI_Bcast(&iteraciones, 1, MPI_INT, 0, MPI_COMM_WORLD);) (12 2,   MPI_Bcast(&xu, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (12 3,   MPI_Bcast(&eps, 1, MPI_FLOAT, 0, MPI_COMM_WORLD);) (12 4,   MPI_Bcast(&iteraciones, 1, MPI_INT, 0, MPI_COMM_WORLD);) (15 1,   MPI_Barrier(MPI_COMM_WORLD);) (46 1,   MPI_Barrier(MPI_COMM_WORLD);) (46 2,   MPI_Reduce(&xu, &xu, 1, MPI_FLOAT, MPI_SUM, 0, MPI_COMM_WORLD);) (46 3,   MPI_Barrier(MPI_COMM_WORLD);) (46 4,   MPI_Finalize();)", "label": " (6 1,   MPI_Init(0, 0);) (7 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (8 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (11 1,     MPI_Abort(MPI_COMM_WORLD, 1);) (50 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ada(rank, a, b);) (rank == 0)\n29:   {\n30:     printf(\"%d\\n\", rank);) (a *= 2)\n31:     printf(\"%d\\n\", rank);) (c *= 2)\n32:     printf(\"%d\\n\", rank);) (15 1,     MPI_Send(&a, 1, MPI_INT, 0, 0, MPI_COMM_WORLD);) (20 1,       MPI_Recv(&a, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (25 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (25 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 0,  MPI_Init(&argc, &argv);) (4 0,  MPI_File_open(MPI_COMM_WORLD, \"file.tmp\", MPI_MODE_RDWR | MPI_MODE_CREATE, MPI_INFO_NULL, &fh);) (5 1,   MPI_File_close(&fh);) (6 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_File_open(MPI_COMM_WORLD, \"/tmp/datafile\", (1 | 8) | 16, MPI_INFO_NULL, &fh);) (4 3,   MPI_File_set_errhandler(fh, MPI_ERRORS_RETURN);) (4 0,  MPI_File_call_errhandler(fh, 30);) (5 1,   MPI_File_set_errhandler(fh, MPI_ERRORS_ARE_FATAL);) (5 2,   MPI_File_call_errhandler(fh, 30);) (5 3,   MPI_File_close(&fh);) (5 4,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4(MPI_Init(0, 0);) (8 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Send(a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD);) (18 1,     MPI_Irecv(b, 1000, MPI_INT, 0, 123, MPI_COMM_WORLD, &request);) (18 2,     MPI_Wait(&request, &status);) (19 1,     MPI_Send(a, 1, MPI_INT, 0, 123, MPI_COMM_WORLD);) (19 2,     MPI_Wait(&request, &status);) (19 3,     MPI_Send(b, 1000, MPI_INT, 0, 123, MPI_COMM_WORLD);) (19 4,     MPI_Wait(&request, &status);) (19 5,     MPI_Send(a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD);) (19 6,     MPI_Wait(&request, &status);) (19 7,     MPI_Send(b, 1000, MPI_INT, 1, 123, MPI_COMM_WORLD);) (19 8,     MPI_Wait(&request, &status);) (19 9,     MPI_Send(a, 1, MPI_INT, 1, 123, MPI_COMM_WORLD);) (19 10,     MPI_Wait(&request, &status);) (19 11,     MPI_Send(b, 1000, MPI_INT, 0, 123, MPI_COMM_WORLD);) (19 12,     MPI_Wait(&request, &status);) (19 13,     MPI_Recv(a, 1000, MPI_INT", "label": " (8 1,   MPI_Init(0, 0);) (8 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (8 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(a, 10, MPI_INT, 1, 100, MPI_COMM_WORLD);) (12 2,     MPI_Send(b, 10, MPI_INT, 1, 200, MPI_COMM_WORLD);) (18 1,     MPI_Recv(b, 10, MPI_INT, 0, 200, MPI_COMM_WORLD, &status);) (18 2,     MPI_Recv(a, 10, MPI_INT, 0, 100, MPI_COMM_WORLD, &status);) (19 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ationMPI_Init(&argc, &argv);) (15 1,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (15 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (40 1,   MPI_Finalize();)", "label": " (25 1,   MPI_Init(&argc, &argv);) (25 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (25 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (42 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "(16 1,   MPI_Init(&argc, &argv);) (16 2,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (16 3,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (19 1,     MPI_Finalize();) (19 0,  MPI_Wtime();) (35 1,     MPI_Reduce(&diff, &diff, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (35 2,     MPI_Reduce(&diff, &diff, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (38 1,   MPI_Finalize();)", "label": " (21 1,   MPI_Init(&argc, &argv);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &myRank);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &numProcs);) (21 0,  MPI_Wtime();) (31 1,   MPI_Reduce(&pieceOfPi, &wholePi, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);) (35 0,  MPI_Wtime();) (42 1,  MPI_Wtick());) (43 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and_send_recv(&rank, 1, MPI_INT, source, tag, MPI_COMM_WORLD, &status);) (16 1,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (21 1,         MPI_Send(&rank, 1, MPI_INT, dest, tag, MPI_COMM_WORLD);) (21 2,         MPI_Recv(&num, 1, MPI_INT, source, tag, MPI_COMM_WORLD, &status);) (26 1,         MPI_Recv(&num, 1, MPI_INT, source, tag, MPI_COMM_WORLD, &status);) (39 1,     MPI_Finalize();)", "label": " (16 1,       MPI_Init(&argc, &argv);) (16 2,       MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 3,       MPI_Comm_size(MPI_COMM_WORLD, &size);) (21 1,           MPI_Bcast(&rank, 1, MPI_INT, root, MPI_COMM_WORLD);) (28 1,       MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(0, 0);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 4,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (3 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);) (4 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (4 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (5 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (13 1,     MPI_Irecv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, &mpi_request);) (13 2,     MPI_Wait(&mpi_request, &mpi_status);) (14 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (9 1,     MPI_Isend(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD, ptr);) (9 2,     MPI_Wait(&mpi_request, &mpi_status);) (13 1,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (14 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>13 1,   MPI_Init(&argc, &argv);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(&argc, &argv);) (2 2,   MPI_Comm_size(MPI_COMM_WORLD, &nprocs);) (2 3,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (16 1,   MPI_Barrier(MPI_COMM_WORLD);) (17 1,   MPI_Barrier(MPI_COMM_WORLD);) (18 1,   MPI_Barrier(MPI_COMM_WORLD);) (19 1,   MPI_Barrier(MPI_COMM_WORLD);) (20 1,   MPI_Barrier(MPI_COMM_WORLD);) (22 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (33 1,     MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (34 1,     MPI_Comm_split(row_comm, color2, rank, &col_comm);) (34 2,     MPI_Comm_rank(row_comm, &row_rank);) (34 3,     MPI_Comm_rank(col_comm, &col_rank);) (36 1,     MPI_Bcast(b, 64 * 64, MPI_DOUBLE, 0, row_comm);) (38 1,     MPI_Scatter(a, 64 / 8, MPI_DOUBLE, work_a, 64 / 8, MPI_DOUBLE, 0, row_comm);) (38 2,     MPI_Scatter(b, 64 / 8, MPI_DOUBLE, work_b, 64 / 8, MPI_DOUBLE, 0, row_comm);) (51 1,   MPI_Gather(c[64 / 8], (64 / 8) / 8, MPI_DOUBLE, b, (64 / 8) / 8, MPI_DOUBLE, 0, row_comm);) (60 1,   MPI_Finalize();)", "label": " (2 1,   MPI_Init(0, 0);) (4 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (4 2,   MPI_Comm_size(MPI_COMM_WORLD, &world_size);) (8 1,   MPI_Comm_split(MPI_COMM_WORLD, color, rank, &row_comm);) (8 2,   MPI_Comm_split(MPI_COMM_WORLD, color2, rank, &col_comm);) (34 1,   MPI_Barrier(MPI_COMM_WORLD);) (36 1,     MPI_Scatter(a, (64 * 64) / 8, MPI_DOUBLE, temp_a, (64 * 64) / 8, MPI_DOUBLE, 0, col_comm);) (39 1,     MPI_Scatter(&temp_a[i][0], 64 / 8, MPI_DOUBLE, &work_a[i][0], 64 / 8, MPI_DOUBLE, 0, row_comm);) (41 1,   MPI_Bcast(b, 64, MPI_DOUBLE, 0, MPI_COMM_WORLD);) (51 1,   MPI_Reduce(work_c, temp_c, 64 / 8, MPI_DOUBLE, MPI_SUM, 0, row_comm);) (51 2,   MPI_Gather(temp_c, 64 / 8, MPI_DOUBLE, c, 64 / 8, MPI_DOUBLE, 0, col_comm);) (51 3,   MPI_Barrier(MPI_COMM_WORLD);) (60 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>104 1,   MPI_Init(&argc, &argv);) (10 1,     MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,     MPI_Comm_size(MPI_COMM_WORLD, &size);) (14 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (21 1,     MPI_Bcast(&resultLength, 1, MPI_INT, 0, MPI_COMM_WORLD);) (25 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (31 1,     MPI_Bcast(&resultLength, 1, MPI_INT, 0, MPI_COMM_WORLD);) (34 1,     MPI_Bcast(newcomm, resultLength, MPI_CHAR, 0, MPI_COMM_WORLD);) (36 1,       MPI_Abort(MPI_COMM_WORLD, 1);) (41 1,   MPI_Comm_free(&newcomm);) (41 2,   MPI_Finalize();)", "label": " (14 1,       MPI_Error_string(MPI_Init(&argc, &argv), resultString, &resultLength);) (16 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (25 1,       MPI_Error_string(MPI_Comm_dup(MPI_COMM_WORLD, &newcomm), resultString, &resultLength);) (27 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (36 1,       MPI_Error_string(MPI_Comm_free(&newcomm), resultString, &resultLength);) (38 1,       MPI_Abort(MPI_COMM_WORLD, -1);) (41 1,   MPI_File_close(&fh);) (41 2,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>ide 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (19 0,  MPI_Wtime();) (21 0,  MPI_Wtime();) (22 1,   MPI_Finalize();)", "label": " (11 1,   MPI_Init(&argc, &argv);) (11 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (19 0,  MPI_Wtime();) (20 0,  MPI_Wtime();) (21 1,   MPI_Reduce(&exec_time, &max_exec_time, 1, MPI_DOUBLE, MPI_MAX, 0, MPI_COMM_WORLD);) (28 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>and(rank, numIter, MPI_COMM_WORLD, &numBytes);) (9 1,   MPI_Init(&argc, &argv);) (10 1,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (10 2,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (13 1,     MPI_Finalize();) (31 1,   MPI_Isend(sendBuf, numBytes, MPI_CHAR, dest, 0, MPI_COMM_WORLD, &req);) (31 2,   MPI_Recv(recvBuf, numBytes, MPI_CHAR, src, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (31 3,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (31 4,   MPI_Wait(&req, MPI_STATUS_IGNORE);) (31 5,   MPI_Finalize();)", "label": " (21 1,   MPI_Init(0, 0);) (21 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (21 3,   MPI_Comm_size(MPI_COMM_WORLD, &size);) (27 1,     MPI_Isend(sendBuf, numBytes, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), dest, 0, MPI_COMM_WORLD, &req);) (27 2,     MPI_Recv(recvBuf, numBytes, (MPI_Datatype) ((void *) (&ompi_mpi_unsigned_char)), src, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (27 3,     MPI_Wait(&req, MPI_STATUS_IGNORE);) (29 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Finalize();)", "label": " (3 1,   MPI_Init(&argc, &argv);) (3 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (11 1,   MPI_Finalize();)  <|endoftext|>"}
{"pred": "<|endoftext|>4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (12 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (12 2,     MPI_Recv(buffer, 1000, MPI_INT, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (13 1,   MPI_Finalize();)", "label": " (4 1,   MPI_Init(&argc, &argv);) (4 2,   MPI_Comm_rank(MPI_COMM_WORLD, &rank);) (6 1,     MPI_Send(buffer, 1000, MPI_INT, 1, 124523, MPI_COMM_WORLD);) (11 1,     MPI_Recv(buffer, 1000, null_type, 0, 124523, MPI_COMM_WORLD, MPI_STATUS_IGNORE);) (12 1,   MPI_Finalize();)  <|endoftext|>"}
